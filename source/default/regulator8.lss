
regulator8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ec2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000124  00800060  00001ec2  00001f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000057  00800184  00800184  0000209a  2**0
                  ALLOC
  3 .eeprom       0000001b  00810000  00810000  0000209a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00000a2c  00000000  00000000  000020b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000214  00000000  00000000  00002ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000260  00000000  00000000  00002cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 00000674  00000000  00000000  00002f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00003a37  00000000  00000000  000035cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00001a46  00000000  00000000  00007003  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000029cd  00000000  00000000  00008a49  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000480  00000000  00000000  0000b418  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000007a4  00000000  00000000  0000b898  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000015f2  00000000  00000000  0000c03c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_pubtypes 0000084a  00000000  00000000  0000d62e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  0000de78  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	11 e0       	ldi	r17, 0x01	; 1
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	e2 ec       	ldi	r30, 0xC2	; 194
      3a:	fe e1       	ldi	r31, 0x1E	; 30
      3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0
      42:	a4 38       	cpi	r26, 0x84	; 132
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
      48:	11 e0       	ldi	r17, 0x01	; 1
      4a:	a4 e8       	ldi	r26, 0x84	; 132
      4c:	b1 e0       	ldi	r27, 0x01	; 1
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	ab 3d       	cpi	r26, 0xDB	; 219
      54:	b1 07       	cpc	r27, r17
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	01 d4       	rcall	.+2050   	; 0x85c <main>
      5a:	31 cf       	rjmp	.-414    	; 0xfffffebe <__eeprom_end+0xff7efea3>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <DoWork>:
	}
	return 0;
}

void DoWork()
{
      5e:	6f 92       	push	r6
      60:	7f 92       	push	r7
      62:	8f 92       	push	r8
      64:	9f 92       	push	r9
      66:	af 92       	push	r10
      68:	bf 92       	push	r11
      6a:	cf 92       	push	r12
      6c:	df 92       	push	r13
      6e:	ef 92       	push	r14
      70:	ff 92       	push	r15
      72:	0f 93       	push	r16
      74:	1f 93       	push	r17

	//LCD_Clear_Display();
	if (iterations%500!=0)
      76:	e0 90 86 01 	lds	r14, 0x0186
      7a:	f0 90 87 01 	lds	r15, 0x0187
      7e:	00 91 88 01 	lds	r16, 0x0188
      82:	10 91 89 01 	lds	r17, 0x0189
      86:	c8 01       	movw	r24, r16
      88:	b7 01       	movw	r22, r14
      8a:	24 ef       	ldi	r18, 0xF4	; 244
      8c:	31 e0       	ldi	r19, 0x01	; 1
      8e:	40 e0       	ldi	r20, 0x00	; 0
      90:	50 e0       	ldi	r21, 0x00	; 0
      92:	85 de       	rcall	.-758    	; 0xfffffd9e <__eeprom_end+0xff7efd83>
      94:	61 15       	cp	r22, r1
      96:	71 05       	cpc	r23, r1
      98:	81 05       	cpc	r24, r1
      9a:	91 05       	cpc	r25, r1
      9c:	71 f0       	breq	.+28     	; 0xba <DoWork+0x5c>
		{
			iterations++;
      9e:	08 94       	sec
      a0:	e1 1c       	adc	r14, r1
      a2:	f1 1c       	adc	r15, r1
      a4:	01 1d       	adc	r16, r1
      a6:	11 1d       	adc	r17, r1
      a8:	e0 92 86 01 	sts	0x0186, r14
      ac:	f0 92 87 01 	sts	0x0187, r15
      b0:	00 93 88 01 	sts	0x0188, r16
      b4:	10 93 89 01 	sts	0x0189, r17
			//_delay_ms(1);
			return;
      b8:	47 c0       	rjmp	.+142    	; 0x148 <DoWork+0xea>

	
	//LCD_printStr("Waiting...");
	//return ;
	//DS_Init(DSBIT1);
	DS_Init(DSBIT1);
      ba:	85 e0       	ldi	r24, 0x05	; 5
      bc:	46 d4       	rcall	.+2188   	; 0x94a <DS_Init>
	DS_Init(DSBIT2);
      be:	84 e0       	ldi	r24, 0x04	; 4
      c0:	44 d4       	rcall	.+2184   	; 0x94a <DS_Init>
	DS_Init(DSBIT3);
      c2:	83 e0       	ldi	r24, 0x03	; 3
      c4:	42 d4       	rcall	.+2180   	; 0x94a <DS_Init>

		float t1 = DS_getFloatTemperature(DSBIT1);
      c6:	85 e0       	ldi	r24, 0x05	; 5
      c8:	ca d4       	rcall	.+2452   	; 0xa5e <DS_getFloatTemperature>
      ca:	7b 01       	movw	r14, r22
      cc:	8c 01       	movw	r16, r24


		//DS_Init(DSBIT2);
		float t2 = DS_getFloatTemperature(DSBIT2);
      ce:	84 e0       	ldi	r24, 0x04	; 4
      d0:	c6 d4       	rcall	.+2444   	; 0xa5e <DS_getFloatTemperature>
      d2:	5b 01       	movw	r10, r22
      d4:	6c 01       	movw	r12, r24


		//DS_Init(DSBIT3);
		float t3 = DS_getFloatTemperature(DSBIT3);
      d6:	83 e0       	ldi	r24, 0x03	; 3
      d8:	c2 d4       	rcall	.+2436   	; 0xa5e <DS_getFloatTemperature>
      da:	3b 01       	movw	r6, r22
      dc:	4c 01       	movw	r8, r24

		HandleRelay(&setting1, t1, RELAY1);
      de:	82 e9       	ldi	r24, 0x92	; 146
      e0:	91 e0       	ldi	r25, 0x01	; 1
      e2:	b8 01       	movw	r22, r16
      e4:	a7 01       	movw	r20, r14
      e6:	22 e0       	ldi	r18, 0x02	; 2
      e8:	d5 d6       	rcall	.+3498   	; 0xe94 <HandleRelay>
		HandleRelay(&setting2, t2, RELAY2);
      ea:	83 ea       	ldi	r24, 0xA3	; 163
      ec:	91 e0       	ldi	r25, 0x01	; 1
      ee:	b6 01       	movw	r22, r12
      f0:	a5 01       	movw	r20, r10
      f2:	21 e0       	ldi	r18, 0x01	; 1
      f4:	cf d6       	rcall	.+3486   	; 0xe94 <HandleRelay>
		HandleRelay(&setting3, t3, RELAY3);
      f6:	8d ea       	ldi	r24, 0xAD	; 173
      f8:	91 e0       	ldi	r25, 0x01	; 1
      fa:	b4 01       	movw	r22, r8
      fc:	a3 01       	movw	r20, r6
      fe:	20 e0       	ldi	r18, 0x00	; 0
     100:	c9 d6       	rcall	.+3474   	; 0xe94 <HandleRelay>

		LCD_2buffer_begin();
     102:	af d5       	rcall	.+2910   	; 0xc62 <LCD_2buffer_begin>
		//LCD_Clear_Display();
		LCD_2buffer_Move_Cursor(0);
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	e0 d5       	rcall	.+3008   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t1);
     108:	c8 01       	movw	r24, r16
     10a:	b7 01       	movw	r22, r14
     10c:	37 d6       	rcall	.+3182   	; 0xd7c <LCD_2buffer_Show_FloatTemperature1>

		LCD_2buffer_Move_Cursor(8);
     10e:	88 e0       	ldi	r24, 0x08	; 8
     110:	db d5       	rcall	.+2998   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t2);
     112:	c6 01       	movw	r24, r12
     114:	b5 01       	movw	r22, r10
     116:	32 d6       	rcall	.+3172   	; 0xd7c <LCD_2buffer_Show_FloatTemperature1>

		LCD_2buffer_Move_Cursor(16);
     118:	80 e1       	ldi	r24, 0x10	; 16
     11a:	d6 d5       	rcall	.+2988   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t3);
     11c:	c4 01       	movw	r24, r8
     11e:	b3 01       	movw	r22, r6
     120:	2d d6       	rcall	.+3162   	; 0xd7c <LCD_2buffer_Show_FloatTemperature1>
		LCD_2buffer_end();
     122:	a9 d5       	rcall	.+2898   	; 0xc76 <LCD_2buffer_end>
		iterations = 1;
     124:	81 e0       	ldi	r24, 0x01	; 1
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	a0 e0       	ldi	r26, 0x00	; 0
     12a:	b0 e0       	ldi	r27, 0x00	; 0
     12c:	80 93 86 01 	sts	0x0186, r24
     130:	90 93 87 01 	sts	0x0187, r25
     134:	a0 93 88 01 	sts	0x0188, r26
     138:	b0 93 89 01 	sts	0x0189, r27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     13c:	8f e8       	ldi	r24, 0x8F	; 143
     13e:	91 e0       	ldi	r25, 0x01	; 1
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <DoWork+0xe2>
     144:	00 c0       	rjmp	.+0      	; 0x146 <DoWork+0xe8>
     146:	00 00       	nop
		_delay_us(100);
}
     148:	1f 91       	pop	r17
     14a:	0f 91       	pop	r16
     14c:	ff 90       	pop	r15
     14e:	ef 90       	pop	r14
     150:	df 90       	pop	r13
     152:	cf 90       	pop	r12
     154:	bf 90       	pop	r11
     156:	af 90       	pop	r10
     158:	9f 90       	pop	r9
     15a:	8f 90       	pop	r8
     15c:	7f 90       	pop	r7
     15e:	6f 90       	pop	r6
     160:	08 95       	ret

00000162 <ShowMainMenu>:

void ShowMainMenu()
{
     162:	ef 92       	push	r14
     164:	ff 92       	push	r15
     166:	0f 93       	push	r16
     168:	1f 93       	push	r17
	if (iterations%12000!=0)
     16a:	e0 90 86 01 	lds	r14, 0x0186
     16e:	f0 90 87 01 	lds	r15, 0x0187
     172:	00 91 88 01 	lds	r16, 0x0188
     176:	10 91 89 01 	lds	r17, 0x0189
     17a:	c8 01       	movw	r24, r16
     17c:	b7 01       	movw	r22, r14
     17e:	20 ee       	ldi	r18, 0xE0	; 224
     180:	3e e2       	ldi	r19, 0x2E	; 46
     182:	40 e0       	ldi	r20, 0x00	; 0
     184:	50 e0       	ldi	r21, 0x00	; 0
     186:	0b de       	rcall	.-1002   	; 0xfffffd9e <__eeprom_end+0xff7efd83>
     188:	61 15       	cp	r22, r1
     18a:	71 05       	cpc	r23, r1
     18c:	81 05       	cpc	r24, r1
     18e:	91 05       	cpc	r25, r1
     190:	71 f0       	breq	.+28     	; 0x1ae <ShowMainMenu+0x4c>
		{
			iterations++;
     192:	08 94       	sec
     194:	e1 1c       	adc	r14, r1
     196:	f1 1c       	adc	r15, r1
     198:	01 1d       	adc	r16, r1
     19a:	11 1d       	adc	r17, r1
     19c:	e0 92 86 01 	sts	0x0186, r14
     1a0:	f0 92 87 01 	sts	0x0187, r15
     1a4:	00 93 88 01 	sts	0x0188, r16
     1a8:	10 93 89 01 	sts	0x0189, r17
			//_delay_ms(1);
			return;
     1ac:	2f c0       	rjmp	.+94     	; 0x20c <ShowMainMenu+0xaa>
		}
	LCD_2buffer_begin();
     1ae:	59 d5       	rcall	.+2738   	; 0xc62 <LCD_2buffer_begin>
	LCD_2buffer_Move_Cursor(1);
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	8a d5       	rcall	.+2836   	; 0xcc8 <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp1");
     1b4:	80 e6       	ldi	r24, 0x60	; 96
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	75 d5       	rcall	.+2794   	; 0xca4 <LCD_2buffer_printStr>

	LCD_2buffer_Move_Cursor(9);
     1ba:	89 e0       	ldi	r24, 0x09	; 9
     1bc:	85 d5       	rcall	.+2826   	; 0xcc8 <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp2");
     1be:	86 e6       	ldi	r24, 0x66	; 102
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	70 d5       	rcall	.+2784   	; 0xca4 <LCD_2buffer_printStr>

	LCD_2buffer_Move_Cursor(17);
     1c4:	81 e1       	ldi	r24, 0x11	; 17
     1c6:	80 d5       	rcall	.+2816   	; 0xcc8 <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp3");
     1c8:	8c e6       	ldi	r24, 0x6C	; 108
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	6b d5       	rcall	.+2774   	; 0xca4 <LCD_2buffer_printStr>

	switch(	sub_current_status)
     1ce:	80 91 85 01 	lds	r24, 0x0185
     1d2:	81 30       	cpi	r24, 0x01	; 1
     1d4:	39 f0       	breq	.+14     	; 0x1e4 <ShowMainMenu+0x82>
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	18 f0       	brcs	.+6      	; 0x1e0 <ShowMainMenu+0x7e>
     1da:	82 30       	cpi	r24, 0x02	; 2
     1dc:	39 f4       	brne	.+14     	; 0x1ec <ShowMainMenu+0x8a>
     1de:	04 c0       	rjmp	.+8      	; 0x1e8 <ShowMainMenu+0x86>
	{
		case 0:
			LCD_2buffer_Move_Cursor(0);
     1e0:	80 e0       	ldi	r24, 0x00	; 0
     1e2:	03 c0       	rjmp	.+6      	; 0x1ea <ShowMainMenu+0x88>
		break;

		case 1:
			LCD_2buffer_Move_Cursor(8);
     1e4:	88 e0       	ldi	r24, 0x08	; 8
     1e6:	01 c0       	rjmp	.+2      	; 0x1ea <ShowMainMenu+0x88>
		break;

		case 2:
			LCD_2buffer_Move_Cursor(16);
     1e8:	80 e1       	ldi	r24, 0x10	; 16
     1ea:	6e d5       	rcall	.+2780   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		break;
	}
	
	LCD_2buffer_printStr(">");
     1ec:	82 e7       	ldi	r24, 0x72	; 114
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	59 d5       	rcall	.+2738   	; 0xca4 <LCD_2buffer_printStr>

	LCD_2buffer_end();
     1f2:	41 d5       	rcall	.+2690   	; 0xc76 <LCD_2buffer_end>
	//LCD_Clear_Display();
	//LCD_printStr("HELLO");
	//_delay_ms(1);
	iterations = 1;
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b0 e0       	ldi	r27, 0x00	; 0
     1fc:	80 93 86 01 	sts	0x0186, r24
     200:	90 93 87 01 	sts	0x0187, r25
     204:	a0 93 88 01 	sts	0x0188, r26
     208:	b0 93 89 01 	sts	0x0189, r27
}
     20c:	1f 91       	pop	r17
     20e:	0f 91       	pop	r16
     210:	ff 90       	pop	r15
     212:	ef 90       	pop	r14
     214:	08 95       	ret

00000216 <ShowSettings>:

void ShowSettings()
{
     216:	ef 92       	push	r14
     218:	ff 92       	push	r15
     21a:	0f 93       	push	r16
     21c:	1f 93       	push	r17
	if (iterations%500!=0)
     21e:	e0 90 86 01 	lds	r14, 0x0186
     222:	f0 90 87 01 	lds	r15, 0x0187
     226:	00 91 88 01 	lds	r16, 0x0188
     22a:	10 91 89 01 	lds	r17, 0x0189
     22e:	c8 01       	movw	r24, r16
     230:	b7 01       	movw	r22, r14
     232:	24 ef       	ldi	r18, 0xF4	; 244
     234:	31 e0       	ldi	r19, 0x01	; 1
     236:	40 e0       	ldi	r20, 0x00	; 0
     238:	50 e0       	ldi	r21, 0x00	; 0
     23a:	b1 dd       	rcall	.-1182   	; 0xfffffd9e <__eeprom_end+0xff7efd83>
     23c:	61 15       	cp	r22, r1
     23e:	71 05       	cpc	r23, r1
     240:	81 05       	cpc	r24, r1
     242:	91 05       	cpc	r25, r1
     244:	71 f0       	breq	.+28     	; 0x262 <ShowSettings+0x4c>
		{
			iterations++;
     246:	08 94       	sec
     248:	e1 1c       	adc	r14, r1
     24a:	f1 1c       	adc	r15, r1
     24c:	01 1d       	adc	r16, r1
     24e:	11 1d       	adc	r17, r1
     250:	e0 92 86 01 	sts	0x0186, r14
     254:	f0 92 87 01 	sts	0x0187, r15
     258:	00 93 88 01 	sts	0x0188, r16
     25c:	10 93 89 01 	sts	0x0189, r17
			//_delay_ms(1);
			return;
     260:	79 c0       	rjmp	.+242    	; 0x354 <ShowSettings+0x13e>
		}

	
	switch(sub_current_status)
     262:	80 91 85 01 	lds	r24, 0x0185
     266:	81 30       	cpi	r24, 0x01	; 1
     268:	41 f0       	breq	.+16     	; 0x27a <ShowSettings+0x64>
     26a:	81 30       	cpi	r24, 0x01	; 1
     26c:	18 f0       	brcs	.+6      	; 0x274 <ShowSettings+0x5e>
     26e:	82 30       	cpi	r24, 0x02	; 2
     270:	69 f4       	brne	.+26     	; 0x28c <ShowSettings+0x76>
     272:	06 c0       	rjmp	.+12     	; 0x280 <ShowSettings+0x6a>
	{
		case 0: settings = &setting1; break;	
     274:	82 e9       	ldi	r24, 0x92	; 146
     276:	91 e0       	ldi	r25, 0x01	; 1
     278:	05 c0       	rjmp	.+10     	; 0x284 <ShowSettings+0x6e>
		case 1: settings = &setting2; break;
     27a:	83 ea       	ldi	r24, 0xA3	; 163
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	02 c0       	rjmp	.+4      	; 0x284 <ShowSettings+0x6e>
		case 2: settings = &setting3; break;	
     280:	8d ea       	ldi	r24, 0xAD	; 173
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	90 93 8d 01 	sts	0x018D, r25
     288:	80 93 8c 01 	sts	0x018C, r24
	}

	blinker = !blinker;
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	90 91 8a 01 	lds	r25, 0x018A
     292:	91 11       	cpse	r25, r1
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	80 93 8a 01 	sts	0x018A, r24

	LCD_2buffer_begin();
     29a:	e3 d4       	rcall	.+2502   	; 0xc62 <LCD_2buffer_begin>
	if ((blinker)||(settings_item2!=1))
     29c:	80 91 8a 01 	lds	r24, 0x018A
     2a0:	88 23       	and	r24, r24
     2a2:	21 f4       	brne	.+8      	; 0x2ac <ShowSettings+0x96>
     2a4:	80 91 ac 01 	lds	r24, 0x01AC
     2a8:	81 30       	cpi	r24, 0x01	; 1
     2aa:	59 f0       	breq	.+22     	; 0x2c2 <ShowSettings+0xac>
	{
		LCD_2buffer_Move_Cursor(1);
     2ac:	81 e0       	ldi	r24, 0x01	; 1
     2ae:	0c d5       	rcall	.+2584   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(settings->temp);
     2b0:	e0 91 8c 01 	lds	r30, 0x018C
     2b4:	f0 91 8d 01 	lds	r31, 0x018D
     2b8:	60 81       	ld	r22, Z
     2ba:	71 81       	ldd	r23, Z+1	; 0x01
     2bc:	82 81       	ldd	r24, Z+2	; 0x02
     2be:	93 81       	ldd	r25, Z+3	; 0x03
     2c0:	5d d5       	rcall	.+2746   	; 0xd7c <LCD_2buffer_Show_FloatTemperature1>
	}
	
	if ((blinker)||(settings_item2!=2))
     2c2:	80 91 8a 01 	lds	r24, 0x018A
     2c6:	88 23       	and	r24, r24
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <ShowSettings+0xbc>
     2ca:	80 91 ac 01 	lds	r24, 0x01AC
     2ce:	82 30       	cpi	r24, 0x02	; 2
     2d0:	59 f0       	breq	.+22     	; 0x2e8 <ShowSettings+0xd2>
	{
		LCD_2buffer_Move_Cursor(9);
     2d2:	89 e0       	ldi	r24, 0x09	; 9
     2d4:	f9 d4       	rcall	.+2546   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(settings->d);
     2d6:	e0 91 8c 01 	lds	r30, 0x018C
     2da:	f0 91 8d 01 	lds	r31, 0x018D
     2de:	64 81       	ldd	r22, Z+4	; 0x04
     2e0:	75 81       	ldd	r23, Z+5	; 0x05
     2e2:	86 81       	ldd	r24, Z+6	; 0x06
     2e4:	97 81       	ldd	r25, Z+7	; 0x07
     2e6:	4a d5       	rcall	.+2708   	; 0xd7c <LCD_2buffer_Show_FloatTemperature1>
	}
	if ((blinker)||(settings_item2!=3))
     2e8:	80 91 8a 01 	lds	r24, 0x018A
     2ec:	88 23       	and	r24, r24
     2ee:	21 f4       	brne	.+8      	; 0x2f8 <ShowSettings+0xe2>
     2f0:	80 91 ac 01 	lds	r24, 0x01AC
     2f4:	83 30       	cpi	r24, 0x03	; 3
     2f6:	79 f0       	breq	.+30     	; 0x316 <ShowSettings+0x100>
	{
		LCD_2buffer_Move_Cursor(17);
     2f8:	81 e1       	ldi	r24, 0x11	; 17
     2fa:	e6 d4       	rcall	.+2508   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		if(settings->direction)
     2fc:	e0 91 8c 01 	lds	r30, 0x018C
     300:	f0 91 8d 01 	lds	r31, 0x018D
     304:	80 85       	ldd	r24, Z+8	; 0x08
     306:	88 23       	and	r24, r24
     308:	19 f0       	breq	.+6      	; 0x310 <ShowSettings+0xfa>
		{
			LCD_2buffer_printStr("UP");
     30a:	84 e7       	ldi	r24, 0x74	; 116
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	02 c0       	rjmp	.+4      	; 0x314 <ShowSettings+0xfe>
		}else
		{
			LCD_2buffer_printStr("DOWN");
     310:	87 e7       	ldi	r24, 0x77	; 119
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	c7 d4       	rcall	.+2446   	; 0xca4 <LCD_2buffer_printStr>
		}
	}

	switch(	settings_item1)
     316:	80 91 b6 01 	lds	r24, 0x01B6
     31a:	81 30       	cpi	r24, 0x01	; 1
     31c:	39 f0       	breq	.+14     	; 0x32c <ShowSettings+0x116>
     31e:	81 30       	cpi	r24, 0x01	; 1
     320:	18 f0       	brcs	.+6      	; 0x328 <ShowSettings+0x112>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	39 f4       	brne	.+14     	; 0x334 <ShowSettings+0x11e>
     326:	04 c0       	rjmp	.+8      	; 0x330 <ShowSettings+0x11a>
	{
		case 0:
			LCD_2buffer_Move_Cursor(0);
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	03 c0       	rjmp	.+6      	; 0x332 <ShowSettings+0x11c>
		break;

		case 1:
			LCD_2buffer_Move_Cursor(8);
     32c:	88 e0       	ldi	r24, 0x08	; 8
     32e:	01 c0       	rjmp	.+2      	; 0x332 <ShowSettings+0x11c>
		break;

		case 2:
			LCD_2buffer_Move_Cursor(16);
     330:	80 e1       	ldi	r24, 0x10	; 16
     332:	ca d4       	rcall	.+2452   	; 0xcc8 <LCD_2buffer_Move_Cursor>
		break;
	}
	LCD_2buffer_printStr(">");
     334:	82 e7       	ldi	r24, 0x72	; 114
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	b5 d4       	rcall	.+2410   	; 0xca4 <LCD_2buffer_printStr>
	LCD_2buffer_end();
     33a:	9d d4       	rcall	.+2362   	; 0xc76 <LCD_2buffer_end>
	iterations = 1;
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	a0 e0       	ldi	r26, 0x00	; 0
     342:	b0 e0       	ldi	r27, 0x00	; 0
     344:	80 93 86 01 	sts	0x0186, r24
     348:	90 93 87 01 	sts	0x0187, r25
     34c:	a0 93 88 01 	sts	0x0188, r26
     350:	b0 93 89 01 	sts	0x0189, r27
}
     354:	1f 91       	pop	r17
     356:	0f 91       	pop	r16
     358:	ff 90       	pop	r15
     35a:	ef 90       	pop	r14
     35c:	08 95       	ret

0000035e <BTN1_Pressed>:

void BTN1_Pressed()
{
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
	switch(current_status)
     362:	80 91 84 01 	lds	r24, 0x0184
     366:	8a 30       	cpi	r24, 0x0A	; 10
     368:	21 f0       	breq	.+8      	; 0x372 <BTN1_Pressed+0x14>
     36a:	84 31       	cpi	r24, 0x14	; 20
     36c:	09 f0       	breq	.+2      	; 0x370 <BTN1_Pressed+0x12>
     36e:	53 c0       	rjmp	.+166    	; 0x416 <BTN1_Pressed+0xb8>
     370:	0d c0       	rjmp	.+26     	; 0x38c <BTN1_Pressed+0x2e>
	{
		case STATUS_MAIN_MAENU:
			if(sub_current_status==0)
     372:	80 91 85 01 	lds	r24, 0x0185
     376:	88 23       	and	r24, r24
     378:	19 f4       	brne	.+6      	; 0x380 <BTN1_Pressed+0x22>
				sub_current_status = 3;
     37a:	83 e0       	ldi	r24, 0x03	; 3
     37c:	80 93 85 01 	sts	0x0185, r24
			sub_current_status--;
     380:	80 91 85 01 	lds	r24, 0x0185
     384:	81 50       	subi	r24, 0x01	; 1
     386:	80 93 85 01 	sts	0x0185, r24
			
		break;
     38a:	45 c0       	rjmp	.+138    	; 0x416 <BTN1_Pressed+0xb8>
		case STATUS_SETTINGS:
			if (settings_item2==0)
     38c:	80 91 ac 01 	lds	r24, 0x01AC
     390:	88 23       	and	r24, r24
     392:	69 f4       	brne	.+26     	; 0x3ae <BTN1_Pressed+0x50>
			{
				if(settings_item1==0)
     394:	80 91 b6 01 	lds	r24, 0x01B6
     398:	88 23       	and	r24, r24
     39a:	19 f4       	brne	.+6      	; 0x3a2 <BTN1_Pressed+0x44>
					settings_item1 = 3;
     39c:	83 e0       	ldi	r24, 0x03	; 3
     39e:	80 93 b6 01 	sts	0x01B6, r24
				settings_item1--;
     3a2:	80 91 b6 01 	lds	r24, 0x01B6
     3a6:	81 50       	subi	r24, 0x01	; 1
     3a8:	80 93 b6 01 	sts	0x01B6, r24
     3ac:	13 c0       	rjmp	.+38     	; 0x3d4 <BTN1_Pressed+0x76>
			}
			if (settings_item2==1)
     3ae:	81 30       	cpi	r24, 0x01	; 1
     3b0:	89 f4       	brne	.+34     	; 0x3d4 <BTN1_Pressed+0x76>
			{
				settings->temp-=0.1;
     3b2:	c0 91 8c 01 	lds	r28, 0x018C
     3b6:	d0 91 8d 01 	lds	r29, 0x018D
     3ba:	68 81       	ld	r22, Y
     3bc:	79 81       	ldd	r23, Y+1	; 0x01
     3be:	8a 81       	ldd	r24, Y+2	; 0x02
     3c0:	9b 81       	ldd	r25, Y+3	; 0x03
     3c2:	2d ec       	ldi	r18, 0xCD	; 205
     3c4:	3c ec       	ldi	r19, 0xCC	; 204
     3c6:	4c ec       	ldi	r20, 0xCC	; 204
     3c8:	5d e3       	ldi	r21, 0x3D	; 61
     3ca:	70 d7       	rcall	.+3808   	; 0x12ac <__subsf3>
     3cc:	68 83       	st	Y, r22
     3ce:	79 83       	std	Y+1, r23	; 0x01
     3d0:	8a 83       	std	Y+2, r24	; 0x02
     3d2:	9b 83       	std	Y+3, r25	; 0x03
			}
			if (settings_item2==2)
     3d4:	80 91 ac 01 	lds	r24, 0x01AC
     3d8:	82 30       	cpi	r24, 0x02	; 2
     3da:	91 f4       	brne	.+36     	; 0x400 <BTN1_Pressed+0xa2>
			{
				settings->d-=0.1;
     3dc:	c0 91 8c 01 	lds	r28, 0x018C
     3e0:	d0 91 8d 01 	lds	r29, 0x018D
     3e4:	6c 81       	ldd	r22, Y+4	; 0x04
     3e6:	7d 81       	ldd	r23, Y+5	; 0x05
     3e8:	8e 81       	ldd	r24, Y+6	; 0x06
     3ea:	9f 81       	ldd	r25, Y+7	; 0x07
     3ec:	2d ec       	ldi	r18, 0xCD	; 205
     3ee:	3c ec       	ldi	r19, 0xCC	; 204
     3f0:	4c ec       	ldi	r20, 0xCC	; 204
     3f2:	5d e3       	ldi	r21, 0x3D	; 61
     3f4:	5b d7       	rcall	.+3766   	; 0x12ac <__subsf3>
     3f6:	6c 83       	std	Y+4, r22	; 0x04
     3f8:	7d 83       	std	Y+5, r23	; 0x05
     3fa:	8e 83       	std	Y+6, r24	; 0x06
     3fc:	9f 83       	std	Y+7, r25	; 0x07
     3fe:	0b c0       	rjmp	.+22     	; 0x416 <BTN1_Pressed+0xb8>
			}
			if (settings_item2==3)
     400:	83 30       	cpi	r24, 0x03	; 3
     402:	49 f4       	brne	.+18     	; 0x416 <BTN1_Pressed+0xb8>
			{
				settings->direction = !settings->direction;
     404:	e0 91 8c 01 	lds	r30, 0x018C
     408:	f0 91 8d 01 	lds	r31, 0x018D
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	90 85       	ldd	r25, Z+8	; 0x08
     410:	91 11       	cpse	r25, r1
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	80 87       	std	Z+8, r24	; 0x08
			}
		break;
	}
	iterations = 0;
     416:	10 92 86 01 	sts	0x0186, r1
     41a:	10 92 87 01 	sts	0x0187, r1
     41e:	10 92 88 01 	sts	0x0188, r1
     422:	10 92 89 01 	sts	0x0189, r1
}
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	08 95       	ret

0000042c <BTN2_Pressed>:
void BTN2_Pressed()
{
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
	switch(current_status)
     430:	80 91 84 01 	lds	r24, 0x0184
     434:	8a 30       	cpi	r24, 0x0A	; 10
     436:	21 f0       	breq	.+8      	; 0x440 <BTN2_Pressed+0x14>
     438:	84 31       	cpi	r24, 0x14	; 20
     43a:	09 f0       	breq	.+2      	; 0x43e <BTN2_Pressed+0x12>
     43c:	4e c0       	rjmp	.+156    	; 0x4da <__stack+0x7b>
     43e:	0b c0       	rjmp	.+22     	; 0x456 <BTN2_Pressed+0x2a>
	{
		case STATUS_MAIN_MAENU:
			sub_current_status++;
     440:	80 91 85 01 	lds	r24, 0x0185
     444:	8f 5f       	subi	r24, 0xFF	; 255
     446:	80 93 85 01 	sts	0x0185, r24
			if(sub_current_status==3)
     44a:	83 30       	cpi	r24, 0x03	; 3
     44c:	09 f0       	breq	.+2      	; 0x450 <BTN2_Pressed+0x24>
     44e:	45 c0       	rjmp	.+138    	; 0x4da <__stack+0x7b>
				sub_current_status = 0;
     450:	10 92 85 01 	sts	0x0185, r1
     454:	42 c0       	rjmp	.+132    	; 0x4da <__stack+0x7b>
			
		break;
		case STATUS_SETTINGS:
			if (settings_item2==0)
     456:	80 91 ac 01 	lds	r24, 0x01AC
     45a:	88 23       	and	r24, r24
     45c:	51 f4       	brne	.+20     	; 0x472 <__stack+0x13>
			{	
				settings_item1++;
     45e:	80 91 b6 01 	lds	r24, 0x01B6
     462:	8f 5f       	subi	r24, 0xFF	; 255
     464:	80 93 b6 01 	sts	0x01B6, r24
				if(settings_item1==3)
     468:	83 30       	cpi	r24, 0x03	; 3
     46a:	b1 f4       	brne	.+44     	; 0x498 <__stack+0x39>
					settings_item1 = 0;
     46c:	10 92 b6 01 	sts	0x01B6, r1
     470:	13 c0       	rjmp	.+38     	; 0x498 <__stack+0x39>
			}
			if (settings_item2==1)
     472:	81 30       	cpi	r24, 0x01	; 1
     474:	89 f4       	brne	.+34     	; 0x498 <__stack+0x39>
			{
				settings->temp += 0.1;
     476:	c0 91 8c 01 	lds	r28, 0x018C
     47a:	d0 91 8d 01 	lds	r29, 0x018D
     47e:	68 81       	ld	r22, Y
     480:	79 81       	ldd	r23, Y+1	; 0x01
     482:	8a 81       	ldd	r24, Y+2	; 0x02
     484:	9b 81       	ldd	r25, Y+3	; 0x03
     486:	2d ec       	ldi	r18, 0xCD	; 205
     488:	3c ec       	ldi	r19, 0xCC	; 204
     48a:	4c ec       	ldi	r20, 0xCC	; 204
     48c:	5d e3       	ldi	r21, 0x3D	; 61
     48e:	e7 d6       	rcall	.+3534   	; 0x125e <__addsf3>
     490:	68 83       	st	Y, r22
     492:	79 83       	std	Y+1, r23	; 0x01
     494:	8a 83       	std	Y+2, r24	; 0x02
     496:	9b 83       	std	Y+3, r25	; 0x03
			}
			if (settings_item2==2)
     498:	80 91 ac 01 	lds	r24, 0x01AC
     49c:	82 30       	cpi	r24, 0x02	; 2
     49e:	91 f4       	brne	.+36     	; 0x4c4 <__stack+0x65>
			{
				settings->d+= 0.1;
     4a0:	c0 91 8c 01 	lds	r28, 0x018C
     4a4:	d0 91 8d 01 	lds	r29, 0x018D
     4a8:	6c 81       	ldd	r22, Y+4	; 0x04
     4aa:	7d 81       	ldd	r23, Y+5	; 0x05
     4ac:	8e 81       	ldd	r24, Y+6	; 0x06
     4ae:	9f 81       	ldd	r25, Y+7	; 0x07
     4b0:	2d ec       	ldi	r18, 0xCD	; 205
     4b2:	3c ec       	ldi	r19, 0xCC	; 204
     4b4:	4c ec       	ldi	r20, 0xCC	; 204
     4b6:	5d e3       	ldi	r21, 0x3D	; 61
     4b8:	d2 d6       	rcall	.+3492   	; 0x125e <__addsf3>
     4ba:	6c 83       	std	Y+4, r22	; 0x04
     4bc:	7d 83       	std	Y+5, r23	; 0x05
     4be:	8e 83       	std	Y+6, r24	; 0x06
     4c0:	9f 83       	std	Y+7, r25	; 0x07
     4c2:	0b c0       	rjmp	.+22     	; 0x4da <__stack+0x7b>
			}
			if (settings_item2==3)
     4c4:	83 30       	cpi	r24, 0x03	; 3
     4c6:	49 f4       	brne	.+18     	; 0x4da <__stack+0x7b>
			{
				settings->direction = !settings->direction;
     4c8:	e0 91 8c 01 	lds	r30, 0x018C
     4cc:	f0 91 8d 01 	lds	r31, 0x018D
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	90 85       	ldd	r25, Z+8	; 0x08
     4d4:	91 11       	cpse	r25, r1
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	80 87       	std	Z+8, r24	; 0x08
			}
		break;
	}
	iterations = 0;
     4da:	10 92 86 01 	sts	0x0186, r1
     4de:	10 92 87 01 	sts	0x0187, r1
     4e2:	10 92 88 01 	sts	0x0188, r1
     4e6:	10 92 89 01 	sts	0x0189, r1
}
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	08 95       	ret

000004f0 <BTN3_Pressed>:
void BTN3_Pressed()
{
	switch(current_status)
     4f0:	80 91 84 01 	lds	r24, 0x0184
     4f4:	8a 30       	cpi	r24, 0x0A	; 10
     4f6:	19 f0       	breq	.+6      	; 0x4fe <BTN3_Pressed+0xe>
     4f8:	84 31       	cpi	r24, 0x14	; 20
     4fa:	09 f5       	brne	.+66     	; 0x53e <BTN3_Pressed+0x4e>
     4fc:	10 c0       	rjmp	.+32     	; 0x51e <BTN3_Pressed+0x2e>
	{
		case STATUS_MAIN_MAENU:
			current_status = STATUS_SETTINGS;
     4fe:	84 e1       	ldi	r24, 0x14	; 20
     500:	80 93 84 01 	sts	0x0184, r24
			iterations = 0;
     504:	10 92 86 01 	sts	0x0186, r1
     508:	10 92 87 01 	sts	0x0187, r1
     50c:	10 92 88 01 	sts	0x0188, r1
     510:	10 92 89 01 	sts	0x0189, r1
			settings_item1 = 0;
     514:	10 92 b6 01 	sts	0x01B6, r1
			settings_item2 = 0;
     518:	10 92 ac 01 	sts	0x01AC, r1
		break;
     51c:	08 95       	ret

		case STATUS_SETTINGS:
			if (settings_item2==0)
     51e:	80 91 ac 01 	lds	r24, 0x01AC
     522:	88 23       	and	r24, r24
     524:	31 f4       	brne	.+12     	; 0x532 <BTN3_Pressed+0x42>
			{
				settings_item2 = settings_item1+1;
     526:	80 91 b6 01 	lds	r24, 0x01B6
     52a:	8f 5f       	subi	r24, 0xFF	; 255
     52c:	80 93 ac 01 	sts	0x01AC, r24
     530:	08 95       	ret
			}else
			{	
				settings_item2 = 0;
     532:	10 92 ac 01 	sts	0x01AC, r1
				Settings_Write(sub_current_status+1);
     536:	80 91 85 01 	lds	r24, 0x0185
     53a:	8f 5f       	subi	r24, 0xFF	; 255
     53c:	89 d4       	rcall	.+2322   	; 0xe50 <Settings_Write>
     53e:	08 95       	ret

00000540 <BTN1_Long_Pressed>:
		break;
	}
}

void BTN1_Long_Pressed()
{
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
	switch(current_status)
     544:	80 91 84 01 	lds	r24, 0x0184
     548:	84 31       	cpi	r24, 0x14	; 20
     54a:	51 f5       	brne	.+84     	; 0x5a0 <BTN1_Long_Pressed+0x60>
	{
		case STATUS_SETTINGS:
			if (settings_item2==1)
     54c:	80 91 ac 01 	lds	r24, 0x01AC
     550:	81 30       	cpi	r24, 0x01	; 1
     552:	89 f4       	brne	.+34     	; 0x576 <BTN1_Long_Pressed+0x36>
			{
				settings->temp -= 5;
     554:	c0 91 8c 01 	lds	r28, 0x018C
     558:	d0 91 8d 01 	lds	r29, 0x018D
     55c:	68 81       	ld	r22, Y
     55e:	79 81       	ldd	r23, Y+1	; 0x01
     560:	8a 81       	ldd	r24, Y+2	; 0x02
     562:	9b 81       	ldd	r25, Y+3	; 0x03
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	40 ea       	ldi	r20, 0xA0	; 160
     56a:	50 e4       	ldi	r21, 0x40	; 64
     56c:	9f d6       	rcall	.+3390   	; 0x12ac <__subsf3>
     56e:	68 83       	st	Y, r22
     570:	79 83       	std	Y+1, r23	; 0x01
     572:	8a 83       	std	Y+2, r24	; 0x02
     574:	9b 83       	std	Y+3, r25	; 0x03
			}
			if (settings_item2==2)
     576:	80 91 ac 01 	lds	r24, 0x01AC
     57a:	82 30       	cpi	r24, 0x02	; 2
     57c:	89 f4       	brne	.+34     	; 0x5a0 <BTN1_Long_Pressed+0x60>
			{
				settings->d -= 5;
     57e:	c0 91 8c 01 	lds	r28, 0x018C
     582:	d0 91 8d 01 	lds	r29, 0x018D
     586:	6c 81       	ldd	r22, Y+4	; 0x04
     588:	7d 81       	ldd	r23, Y+5	; 0x05
     58a:	8e 81       	ldd	r24, Y+6	; 0x06
     58c:	9f 81       	ldd	r25, Y+7	; 0x07
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 ea       	ldi	r20, 0xA0	; 160
     594:	50 e4       	ldi	r21, 0x40	; 64
     596:	8a d6       	rcall	.+3348   	; 0x12ac <__subsf3>
     598:	6c 83       	std	Y+4, r22	; 0x04
     59a:	7d 83       	std	Y+5, r23	; 0x05
     59c:	8e 83       	std	Y+6, r24	; 0x06
     59e:	9f 83       	std	Y+7, r25	; 0x07
			}
		break;
	}
}
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <BTN2_Long_Pressed>:

void BTN2_Long_Pressed()
{
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
	switch(current_status)
     5aa:	80 91 84 01 	lds	r24, 0x0184
     5ae:	84 31       	cpi	r24, 0x14	; 20
     5b0:	51 f5       	brne	.+84     	; 0x606 <BTN2_Long_Pressed+0x60>
	{
		case STATUS_SETTINGS:
			if (settings_item2==1)
     5b2:	80 91 ac 01 	lds	r24, 0x01AC
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	89 f4       	brne	.+34     	; 0x5dc <BTN2_Long_Pressed+0x36>
			{
				settings->temp += 5;
     5ba:	c0 91 8c 01 	lds	r28, 0x018C
     5be:	d0 91 8d 01 	lds	r29, 0x018D
     5c2:	68 81       	ld	r22, Y
     5c4:	79 81       	ldd	r23, Y+1	; 0x01
     5c6:	8a 81       	ldd	r24, Y+2	; 0x02
     5c8:	9b 81       	ldd	r25, Y+3	; 0x03
     5ca:	20 e0       	ldi	r18, 0x00	; 0
     5cc:	30 e0       	ldi	r19, 0x00	; 0
     5ce:	40 ea       	ldi	r20, 0xA0	; 160
     5d0:	50 e4       	ldi	r21, 0x40	; 64
     5d2:	45 d6       	rcall	.+3210   	; 0x125e <__addsf3>
     5d4:	68 83       	st	Y, r22
     5d6:	79 83       	std	Y+1, r23	; 0x01
     5d8:	8a 83       	std	Y+2, r24	; 0x02
     5da:	9b 83       	std	Y+3, r25	; 0x03
			}
			if (settings_item2==2)
     5dc:	80 91 ac 01 	lds	r24, 0x01AC
     5e0:	82 30       	cpi	r24, 0x02	; 2
     5e2:	89 f4       	brne	.+34     	; 0x606 <BTN2_Long_Pressed+0x60>
			{
				settings->d += 5;
     5e4:	c0 91 8c 01 	lds	r28, 0x018C
     5e8:	d0 91 8d 01 	lds	r29, 0x018D
     5ec:	6c 81       	ldd	r22, Y+4	; 0x04
     5ee:	7d 81       	ldd	r23, Y+5	; 0x05
     5f0:	8e 81       	ldd	r24, Y+6	; 0x06
     5f2:	9f 81       	ldd	r25, Y+7	; 0x07
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	40 ea       	ldi	r20, 0xA0	; 160
     5fa:	50 e4       	ldi	r21, 0x40	; 64
     5fc:	30 d6       	rcall	.+3168   	; 0x125e <__addsf3>
     5fe:	6c 83       	std	Y+4, r22	; 0x04
     600:	7d 83       	std	Y+5, r23	; 0x05
     602:	8e 83       	std	Y+6, r24	; 0x06
     604:	9f 83       	std	Y+7, r25	; 0x07
			}

		break;
	}
}
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	08 95       	ret

0000060c <BTN3_Long_Pressed>:

void BTN3_Long_Pressed()
{
	//LCD_printStr("HELLO");
	if (current_status==STATUS_DEFAULT)
     60c:	80 91 84 01 	lds	r24, 0x0184
     610:	88 23       	and	r24, r24
     612:	31 f4       	brne	.+12     	; 0x620 <BTN3_Long_Pressed+0x14>
	{
		current_status = STATUS_MAIN_MAENU;
     614:	8a e0       	ldi	r24, 0x0A	; 10
     616:	80 93 84 01 	sts	0x0184, r24
		sub_current_status = 0;
     61a:	10 92 85 01 	sts	0x0185, r1
     61e:	02 c0       	rjmp	.+4      	; 0x624 <BTN3_Long_Pressed+0x18>
		
	}else
	{
		current_status = STATUS_DEFAULT;
     620:	10 92 84 01 	sts	0x0184, r1
		
	}
	iterations=0;
     624:	10 92 86 01 	sts	0x0186, r1
     628:	10 92 87 01 	sts	0x0187, r1
     62c:	10 92 88 01 	sts	0x0188, r1
     630:	10 92 89 01 	sts	0x0189, r1
}
     634:	08 95       	ret

00000636 <BTN_Init>:

void BTN_Init()
{
	BTN1_status = 0;
     636:	10 92 8e 01 	sts	0x018E, r1
     63a:	10 92 8f 01 	sts	0x018F, r1
     63e:	10 92 90 01 	sts	0x0190, r1
     642:	10 92 91 01 	sts	0x0191, r1
	BTN2_status = 0;
     646:	10 92 9b 01 	sts	0x019B, r1
     64a:	10 92 9c 01 	sts	0x019C, r1
     64e:	10 92 9d 01 	sts	0x019D, r1
     652:	10 92 9e 01 	sts	0x019E, r1
	BTN3_status = 0;
     656:	10 92 9f 01 	sts	0x019F, r1
     65a:	10 92 a0 01 	sts	0x01A0, r1
     65e:	10 92 a1 01 	sts	0x01A1, r1
     662:	10 92 a2 01 	sts	0x01A2, r1

	Off(BTNDDR, BTN1); 
     666:	a0 98       	cbi	0x14, 0	; 20
	Off(BTNDDR, BTN2); 
     668:	a2 98       	cbi	0x14, 2	; 20
	Off(BTNDDR, BTN3); 
     66a:	a1 98       	cbi	0x14, 1	; 20

	On(BTNPORT, BTN1); 
     66c:	a8 9a       	sbi	0x15, 0	; 21
	On(BTNPORT, BTN2); 
     66e:	aa 9a       	sbi	0x15, 2	; 21
	On(BTNPORT, BTN3); 
     670:	a9 9a       	sbi	0x15, 1	; 21

	//Led_On_time = 0;
}
     672:	08 95       	ret

00000674 <BTN_Process>:

void BTN_Process()
{
	if ((BTNPIN & (1<<BTN1))==0)
     674:	98 99       	sbic	0x13, 0	; 19
     676:	15 c0       	rjmp	.+42     	; 0x6a2 <BTN_Process+0x2e>
	{
		if (BTN1_status>=0)
     678:	80 91 8e 01 	lds	r24, 0x018E
     67c:	90 91 8f 01 	lds	r25, 0x018F
     680:	a0 91 90 01 	lds	r26, 0x0190
     684:	b0 91 91 01 	lds	r27, 0x0191
     688:	b7 fd       	sbrc	r27, 7
     68a:	0b c0       	rjmp	.+22     	; 0x6a2 <BTN_Process+0x2e>
			BTN1_status ++;
     68c:	01 96       	adiw	r24, 0x01	; 1
     68e:	a1 1d       	adc	r26, r1
     690:	b1 1d       	adc	r27, r1
     692:	80 93 8e 01 	sts	0x018E, r24
     696:	90 93 8f 01 	sts	0x018F, r25
     69a:	a0 93 90 01 	sts	0x0190, r26
     69e:	b0 93 91 01 	sts	0x0191, r27
		//Led_On_time = 0;
	}

	if ((BTNPIN & (1<<BTN2))==0)
     6a2:	9a 99       	sbic	0x13, 2	; 19
     6a4:	15 c0       	rjmp	.+42     	; 0x6d0 <BTN_Process+0x5c>
	{
		if (BTN2_status>=0)
     6a6:	80 91 9b 01 	lds	r24, 0x019B
     6aa:	90 91 9c 01 	lds	r25, 0x019C
     6ae:	a0 91 9d 01 	lds	r26, 0x019D
     6b2:	b0 91 9e 01 	lds	r27, 0x019E
     6b6:	b7 fd       	sbrc	r27, 7
     6b8:	0b c0       	rjmp	.+22     	; 0x6d0 <BTN_Process+0x5c>
			BTN2_status ++;
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	a1 1d       	adc	r26, r1
     6be:	b1 1d       	adc	r27, r1
     6c0:	80 93 9b 01 	sts	0x019B, r24
     6c4:	90 93 9c 01 	sts	0x019C, r25
     6c8:	a0 93 9d 01 	sts	0x019D, r26
     6cc:	b0 93 9e 01 	sts	0x019E, r27
		//Led_On_time = 0;
	}

	if ((BTNPIN & (1<<BTN3))==0)
     6d0:	99 99       	sbic	0x13, 1	; 19
     6d2:	15 c0       	rjmp	.+42     	; 0x6fe <BTN_Process+0x8a>
	{
		if (BTN3_status>=0)
     6d4:	80 91 9f 01 	lds	r24, 0x019F
     6d8:	90 91 a0 01 	lds	r25, 0x01A0
     6dc:	a0 91 a1 01 	lds	r26, 0x01A1
     6e0:	b0 91 a2 01 	lds	r27, 0x01A2
     6e4:	b7 fd       	sbrc	r27, 7
     6e6:	0b c0       	rjmp	.+22     	; 0x6fe <BTN_Process+0x8a>
			BTN3_status ++;
     6e8:	01 96       	adiw	r24, 0x01	; 1
     6ea:	a1 1d       	adc	r26, r1
     6ec:	b1 1d       	adc	r27, r1
     6ee:	80 93 9f 01 	sts	0x019F, r24
     6f2:	90 93 a0 01 	sts	0x01A0, r25
     6f6:	a0 93 a1 01 	sts	0x01A1, r26
     6fa:	b0 93 a2 01 	sts	0x01A2, r27
		//Led_On_time = 0;
	}

	if (BTN1_status>BTN_long_time)
     6fe:	80 91 8e 01 	lds	r24, 0x018E
     702:	90 91 8f 01 	lds	r25, 0x018F
     706:	a0 91 90 01 	lds	r26, 0x0190
     70a:	b0 91 91 01 	lds	r27, 0x0191
     70e:	89 3e       	cpi	r24, 0xE9	; 233
     710:	23 e0       	ldi	r18, 0x03	; 3
     712:	92 07       	cpc	r25, r18
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	a2 07       	cpc	r26, r18
     718:	20 e0       	ldi	r18, 0x00	; 0
     71a:	b2 07       	cpc	r27, r18
     71c:	64 f0       	brlt	.+24     	; 0x736 <BTN_Process+0xc2>
	{
		if (BTN1_status>=0)
			BTN1_Long_Pressed();
     71e:	10 df       	rcall	.-480    	; 0x540 <BTN1_Long_Pressed>
		BTN1_status = -1;
     720:	8f ef       	ldi	r24, 0xFF	; 255
     722:	9f ef       	ldi	r25, 0xFF	; 255
     724:	dc 01       	movw	r26, r24
     726:	80 93 8e 01 	sts	0x018E, r24
     72a:	90 93 8f 01 	sts	0x018F, r25
     72e:	a0 93 90 01 	sts	0x0190, r26
     732:	b0 93 91 01 	sts	0x0191, r27
	}
	
	if (BTN2_status>BTN_long_time)
     736:	80 91 9b 01 	lds	r24, 0x019B
     73a:	90 91 9c 01 	lds	r25, 0x019C
     73e:	a0 91 9d 01 	lds	r26, 0x019D
     742:	b0 91 9e 01 	lds	r27, 0x019E
     746:	89 3e       	cpi	r24, 0xE9	; 233
     748:	23 e0       	ldi	r18, 0x03	; 3
     74a:	92 07       	cpc	r25, r18
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	a2 07       	cpc	r26, r18
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	b2 07       	cpc	r27, r18
     754:	64 f0       	brlt	.+24     	; 0x76e <BTN_Process+0xfa>
	{
		if (BTN2_status>=0)
			BTN2_Long_Pressed();
     756:	27 df       	rcall	.-434    	; 0x5a6 <BTN2_Long_Pressed>
		BTN2_status = -1;
     758:	8f ef       	ldi	r24, 0xFF	; 255
     75a:	9f ef       	ldi	r25, 0xFF	; 255
     75c:	dc 01       	movw	r26, r24
     75e:	80 93 9b 01 	sts	0x019B, r24
     762:	90 93 9c 01 	sts	0x019C, r25
     766:	a0 93 9d 01 	sts	0x019D, r26
     76a:	b0 93 9e 01 	sts	0x019E, r27
	}

	if (BTN3_status>BTN_long_time)
     76e:	80 91 9f 01 	lds	r24, 0x019F
     772:	90 91 a0 01 	lds	r25, 0x01A0
     776:	a0 91 a1 01 	lds	r26, 0x01A1
     77a:	b0 91 a2 01 	lds	r27, 0x01A2
     77e:	89 3e       	cpi	r24, 0xE9	; 233
     780:	23 e0       	ldi	r18, 0x03	; 3
     782:	92 07       	cpc	r25, r18
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	a2 07       	cpc	r26, r18
     788:	20 e0       	ldi	r18, 0x00	; 0
     78a:	b2 07       	cpc	r27, r18
     78c:	64 f0       	brlt	.+24     	; 0x7a6 <BTN_Process+0x132>
	{
		if (BTN3_status>=0)
			BTN3_Long_Pressed();
     78e:	3e df       	rcall	.-388    	; 0x60c <BTN3_Long_Pressed>
		BTN3_status = -1;
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	9f ef       	ldi	r25, 0xFF	; 255
     794:	dc 01       	movw	r26, r24
     796:	80 93 9f 01 	sts	0x019F, r24
     79a:	90 93 a0 01 	sts	0x01A0, r25
     79e:	a0 93 a1 01 	sts	0x01A1, r26
     7a2:	b0 93 a2 01 	sts	0x01A2, r27
	}

	if ((BTNPIN & (1<<BTN1))!=0)
     7a6:	98 9b       	sbis	0x13, 0	; 19
     7a8:	1c c0       	rjmp	.+56     	; 0x7e2 <BTN_Process+0x16e>
	{
		if ((BTN1_status>0)&&(BTN1_status<BTN_long_time))
     7aa:	80 91 8e 01 	lds	r24, 0x018E
     7ae:	90 91 8f 01 	lds	r25, 0x018F
     7b2:	a0 91 90 01 	lds	r26, 0x0190
     7b6:	b0 91 91 01 	lds	r27, 0x0191
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	a1 09       	sbc	r26, r1
     7be:	b1 09       	sbc	r27, r1
     7c0:	87 3e       	cpi	r24, 0xE7	; 231
     7c2:	23 e0       	ldi	r18, 0x03	; 3
     7c4:	92 07       	cpc	r25, r18
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	a2 07       	cpc	r26, r18
     7ca:	20 e0       	ldi	r18, 0x00	; 0
     7cc:	b2 07       	cpc	r27, r18
     7ce:	08 f4       	brcc	.+2      	; 0x7d2 <BTN_Process+0x15e>
		{
			BTN1_Pressed();
     7d0:	c6 dd       	rcall	.-1140   	; 0x35e <BTN1_Pressed>
		}
		BTN1_status = 0;
     7d2:	10 92 8e 01 	sts	0x018E, r1
     7d6:	10 92 8f 01 	sts	0x018F, r1
     7da:	10 92 90 01 	sts	0x0190, r1
     7de:	10 92 91 01 	sts	0x0191, r1
	}

	if ((BTNPIN & (1<<BTN2))!=0)
     7e2:	9a 9b       	sbis	0x13, 2	; 19
     7e4:	1c c0       	rjmp	.+56     	; 0x81e <BTN_Process+0x1aa>
	{
		if ((BTN2_status>0)&&(BTN2_status<BTN_long_time))
     7e6:	80 91 9b 01 	lds	r24, 0x019B
     7ea:	90 91 9c 01 	lds	r25, 0x019C
     7ee:	a0 91 9d 01 	lds	r26, 0x019D
     7f2:	b0 91 9e 01 	lds	r27, 0x019E
     7f6:	01 97       	sbiw	r24, 0x01	; 1
     7f8:	a1 09       	sbc	r26, r1
     7fa:	b1 09       	sbc	r27, r1
     7fc:	87 3e       	cpi	r24, 0xE7	; 231
     7fe:	23 e0       	ldi	r18, 0x03	; 3
     800:	92 07       	cpc	r25, r18
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	a2 07       	cpc	r26, r18
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	b2 07       	cpc	r27, r18
     80a:	08 f4       	brcc	.+2      	; 0x80e <BTN_Process+0x19a>
		{
			BTN2_Pressed();
     80c:	0f de       	rcall	.-994    	; 0x42c <BTN2_Pressed>
		}
		BTN2_status = 0;
     80e:	10 92 9b 01 	sts	0x019B, r1
     812:	10 92 9c 01 	sts	0x019C, r1
     816:	10 92 9d 01 	sts	0x019D, r1
     81a:	10 92 9e 01 	sts	0x019E, r1
	}

	if ((BTNPIN & (1<<BTN3))!=0)
     81e:	99 9b       	sbis	0x13, 1	; 19
     820:	1c c0       	rjmp	.+56     	; 0x85a <BTN_Process+0x1e6>
	{
		if ((BTN3_status>0)&&(BTN3_status<BTN_long_time))
     822:	80 91 9f 01 	lds	r24, 0x019F
     826:	90 91 a0 01 	lds	r25, 0x01A0
     82a:	a0 91 a1 01 	lds	r26, 0x01A1
     82e:	b0 91 a2 01 	lds	r27, 0x01A2
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	a1 09       	sbc	r26, r1
     836:	b1 09       	sbc	r27, r1
     838:	87 3e       	cpi	r24, 0xE7	; 231
     83a:	23 e0       	ldi	r18, 0x03	; 3
     83c:	92 07       	cpc	r25, r18
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	a2 07       	cpc	r26, r18
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	b2 07       	cpc	r27, r18
     846:	08 f4       	brcc	.+2      	; 0x84a <BTN_Process+0x1d6>
		{
			BTN3_Pressed();
     848:	53 de       	rcall	.-858    	; 0x4f0 <BTN3_Pressed>
		}
		BTN3_status = 0;
     84a:	10 92 9f 01 	sts	0x019F, r1
     84e:	10 92 a0 01 	sts	0x01A0, r1
     852:	10 92 a1 01 	sts	0x01A1, r1
     856:	10 92 a2 01 	sts	0x01A2, r1
     85a:	08 95       	ret

0000085c <main>:

int main()
{
	
	int turn = 0;
	LCD_Init();
     85c:	a6 d1       	rcall	.+844    	; 0xbaa <LCD_Init>
	BTN_Init();
     85e:	eb de       	rcall	.-554    	; 0x636 <BTN_Init>
	Settings_Init();
     860:	f0 d2       	rcall	.+1504   	; 0xe42 <Settings_Init>
	Relay_Init();
     862:	11 d3       	rcall	.+1570   	; 0xe86 <Relay_Init>

	ledON;
     864:	94 9a       	sbi	0x12, 4	; 18
	LCD_Clear_Display();
     866:	9e d1       	rcall	.+828    	; 0xba4 <LCD_Clear_Display>
	

	
	while (1)
	{
		BTN_Process();
     868:	05 df       	rcall	.-502    	; 0x674 <BTN_Process>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     86a:	8f e9       	ldi	r24, 0x9F	; 159
     86c:	9f e0       	ldi	r25, 0x0F	; 15
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	f1 f7       	brne	.-4      	; 0x86e <main+0x12>
     872:	00 c0       	rjmp	.+0      	; 0x874 <main+0x18>
     874:	00 00       	nop
		_delay_ms(1);
		//LCD_Clear_Display();
		switch(current_status)
     876:	80 91 84 01 	lds	r24, 0x0184
     87a:	8a 30       	cpi	r24, 0x0A	; 10
     87c:	31 f0       	breq	.+12     	; 0x88a <main+0x2e>
     87e:	84 31       	cpi	r24, 0x14	; 20
     880:	31 f0       	breq	.+12     	; 0x88e <main+0x32>
     882:	88 23       	and	r24, r24
     884:	89 f7       	brne	.-30     	; 0x868 <main+0xc>
		{
			case STATUS_DEFAULT:
				DoWork();
     886:	eb db       	rcall	.-2090   	; 0x5e <DoWork>
			break;
     888:	ef cf       	rjmp	.-34     	; 0x868 <main+0xc>
			case STATUS_MAIN_MAENU:
				ShowMainMenu();
     88a:	6b dc       	rcall	.-1834   	; 0x162 <ShowMainMenu>
			break; 
     88c:	ed cf       	rjmp	.-38     	; 0x868 <main+0xc>
			case STATUS_SETTINGS:
				ShowSettings();
     88e:	c3 dc       	rcall	.-1658   	; 0x216 <ShowSettings>
     890:	eb cf       	rjmp	.-42     	; 0x868 <main+0xc>

00000892 <DS_isPresent>:
#include "ds18b20.h"

int DS_isPresent(byte DSBIT)
{
	byte r = 0;
	DSDDR |= 1<<DSBIT;
     892:	94 b3       	in	r25, 0x14	; 20
     894:	21 e0       	ldi	r18, 0x01	; 1
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	02 c0       	rjmp	.+4      	; 0x89e <DS_isPresent+0xc>
     89a:	22 0f       	add	r18, r18
     89c:	33 1f       	adc	r19, r19
     89e:	8a 95       	dec	r24
     8a0:	e2 f7       	brpl	.-8      	; 0x89a <DS_isPresent+0x8>
     8a2:	92 2b       	or	r25, r18
     8a4:	94 bb       	out	0x14, r25	; 20
	DSPORT &= ~(1<<DSBIT);
     8a6:	85 b3       	in	r24, 0x15	; 21
     8a8:	20 95       	com	r18
     8aa:	82 23       	and	r24, r18
     8ac:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8ae:	8f ec       	ldi	r24, 0xCF	; 207
     8b0:	97 e0       	ldi	r25, 0x07	; 7
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	f1 f7       	brne	.-4      	; 0x8b2 <DS_isPresent+0x20>
     8b6:	00 c0       	rjmp	.+0      	; 0x8b8 <DS_isPresent+0x26>
     8b8:	00 00       	nop
	_delay_us(500);
	DSDDR &= ~(1<<DSBIT);
     8ba:	84 b3       	in	r24, 0x14	; 20
     8bc:	82 23       	and	r24, r18
     8be:	84 bb       	out	0x14, r24	; 20
     8c0:	87 e1       	ldi	r24, 0x17	; 23
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	01 97       	sbiw	r24, 0x01	; 1
     8c6:	f1 f7       	brne	.-4      	; 0x8c4 <DS_isPresent+0x32>
     8c8:	00 c0       	rjmp	.+0      	; 0x8ca <DS_isPresent+0x38>
     8ca:	00 00       	nop
	_delay_us(70);
	if (DSPIN&(1<<DSBIT))
     8cc:	83 b3       	in	r24, 0x13	; 19
     8ce:	8f e8       	ldi	r24, 0x8F	; 143
     8d0:	96 e0       	ldi	r25, 0x06	; 6
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	f1 f7       	brne	.-4      	; 0x8d2 <DS_isPresent+0x40>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <DS_isPresent+0x46>
     8d8:	00 00       	nop
		r = 0;
	}
	r = 1;
	_delay_us(420);
	return r;
}
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	08 95       	ret

000008e0 <DS_Send_Byte>:
{
	for (int i=0; i<8; i++)
	{
		if (b&0x01)
		{
			DSDDR |= 1<<DSBIT;
     8e0:	21 e0       	ldi	r18, 0x01	; 1
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	02 c0       	rjmp	.+4      	; 0x8ea <DS_Send_Byte+0xa>
     8e6:	22 0f       	add	r18, r18
     8e8:	33 1f       	adc	r19, r19
     8ea:	8a 95       	dec	r24
     8ec:	e2 f7       	brpl	.-8      	; 0x8e6 <DS_Send_Byte+0x6>
			DSPORT &= ~(1<<DSBIT);
     8ee:	32 2f       	mov	r19, r18
     8f0:	30 95       	com	r19
     8f2:	88 e0       	ldi	r24, 0x08	; 8
     8f4:	90 e0       	ldi	r25, 0x00	; 0

void DS_Send_Byte(byte DSBIT, byte b)
{
	for (int i=0; i<8; i++)
	{
		if (b&0x01)
     8f6:	60 ff       	sbrs	r22, 0
     8f8:	14 c0       	rjmp	.+40     	; 0x922 <DS_Send_Byte+0x42>
		{
			DSDDR |= 1<<DSBIT;
     8fa:	44 b3       	in	r20, 0x14	; 20
     8fc:	42 2b       	or	r20, r18
     8fe:	44 bb       	out	0x14, r20	; 20
			DSPORT &= ~(1<<DSBIT);
     900:	45 b3       	in	r20, 0x15	; 21
     902:	43 23       	and	r20, r19
     904:	45 bb       	out	0x15, r20	; 21
     906:	4a e1       	ldi	r20, 0x1A	; 26
     908:	4a 95       	dec	r20
     90a:	f1 f7       	brne	.-4      	; 0x908 <DS_Send_Byte+0x28>
     90c:	00 c0       	rjmp	.+0      	; 0x90e <DS_Send_Byte+0x2e>
			_delay_us(5);
			DSDDR &= ~(1<<DSBIT);
     90e:	44 b3       	in	r20, 0x14	; 20
     910:	43 23       	and	r20, r19
     912:	44 bb       	out	0x14, r20	; 20
     914:	eb ed       	ldi	r30, 0xDB	; 219
     916:	f0 e0       	ldi	r31, 0x00	; 0
     918:	31 97       	sbiw	r30, 0x01	; 1
     91a:	f1 f7       	brne	.-4      	; 0x918 <DS_Send_Byte+0x38>
     91c:	00 c0       	rjmp	.+0      	; 0x91e <DS_Send_Byte+0x3e>
     91e:	00 00       	nop
     920:	0f c0       	rjmp	.+30     	; 0x940 <DS_Send_Byte+0x60>
			_delay_us(55);
		}else
		{
			DSDDR |= 1<<DSBIT;
     922:	44 b3       	in	r20, 0x14	; 20
     924:	42 2b       	or	r20, r18
     926:	44 bb       	out	0x14, r20	; 20
			DSPORT &= ~(1<<DSBIT);
     928:	45 b3       	in	r20, 0x15	; 21
     92a:	43 23       	and	r20, r19
     92c:	45 bb       	out	0x15, r20	; 21
     92e:	ef ee       	ldi	r30, 0xEF	; 239
     930:	f0 e0       	ldi	r31, 0x00	; 0
     932:	31 97       	sbiw	r30, 0x01	; 1
     934:	f1 f7       	brne	.-4      	; 0x932 <DS_Send_Byte+0x52>
     936:	00 c0       	rjmp	.+0      	; 0x938 <DS_Send_Byte+0x58>
     938:	00 00       	nop
			_delay_us(60);
			DSDDR &= ~(1<<DSBIT);
     93a:	44 b3       	in	r20, 0x14	; 20
     93c:	43 23       	and	r20, r19
     93e:	44 bb       	out	0x14, r20	; 20
     940:	01 97       	sbiw	r24, 0x01	; 1
	return res;
}

void DS_Send_Byte(byte DSBIT, byte b)
{
	for (int i=0; i<8; i++)
     942:	11 f0       	breq	.+4      	; 0x948 <DS_Send_Byte+0x68>
			DSPORT &= ~(1<<DSBIT);
			_delay_us(60);
			DSDDR &= ~(1<<DSBIT);
			//_delay_us(10);
		}
		b = b >> 1;
     944:	66 95       	lsr	r22
     946:	d7 cf       	rjmp	.-82     	; 0x8f6 <DS_Send_Byte+0x16>
     948:	08 95       	ret

0000094a <DS_Init>:
	_delay_us(420);
	return r;
}

void DS_Init(byte DSBIT)
{
     94a:	1f 93       	push	r17
     94c:	18 2f       	mov	r17, r24
	if (DS_isPresent(DSBIT))
     94e:	a1 df       	rcall	.-190    	; 0x892 <DS_isPresent>
     950:	00 97       	sbiw	r24, 0x00	; 0
     952:	a9 f0       	breq	.+42     	; 0x97e <DS_Init+0x34>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     954:	8f e9       	ldi	r24, 0x9F	; 159
     956:	9f e0       	ldi	r25, 0x0F	; 15
     958:	01 97       	sbiw	r24, 0x01	; 1
     95a:	f1 f7       	brne	.-4      	; 0x958 <DS_Init+0xe>
     95c:	00 c0       	rjmp	.+0      	; 0x95e <DS_Init+0x14>
     95e:	00 00       	nop
	{
		_delay_ms(1);
		//DS_Send_Byte(0x33);
		DS_Send_Byte(DSBIT, 0xCC);
     960:	81 2f       	mov	r24, r17
     962:	6c ec       	ldi	r22, 0xCC	; 204
     964:	bd df       	rcall	.-134    	; 0x8e0 <DS_Send_Byte>
		DS_Send_Byte(DSBIT, 0x44);
     966:	81 2f       	mov	r24, r17
     968:	64 e4       	ldi	r22, 0x44	; 68
     96a:	ba df       	rcall	.-140    	; 0x8e0 <DS_Send_Byte>
     96c:	8f ef       	ldi	r24, 0xFF	; 255
     96e:	93 ed       	ldi	r25, 0xD3	; 211
     970:	a0 e3       	ldi	r26, 0x30	; 48
     972:	81 50       	subi	r24, 0x01	; 1
     974:	90 40       	sbci	r25, 0x00	; 0
     976:	a0 40       	sbci	r26, 0x00	; 0
     978:	e1 f7       	brne	.-8      	; 0x972 <DS_Init+0x28>
     97a:	00 c0       	rjmp	.+0      	; 0x97c <DS_Init+0x32>
     97c:	00 00       	nop
		_delay_ms(1000);
		//while (!DS_Read_Bit()){}
	}
}
     97e:	1f 91       	pop	r17
     980:	08 95       	ret

00000982 <DS_Read_Bit>:
}

byte DS_Read_Bit(byte DSBIT)
{
	byte r = 0;
		DSDDR |= 1<<DSBIT;
     982:	94 b3       	in	r25, 0x14	; 20
     984:	21 e0       	ldi	r18, 0x01	; 1
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	08 2e       	mov	r0, r24
     98a:	02 c0       	rjmp	.+4      	; 0x990 <DS_Read_Bit+0xe>
     98c:	22 0f       	add	r18, r18
     98e:	33 1f       	adc	r19, r19
     990:	0a 94       	dec	r0
     992:	e2 f7       	brpl	.-8      	; 0x98c <DS_Read_Bit+0xa>
     994:	92 2b       	or	r25, r18
     996:	94 bb       	out	0x14, r25	; 20
		DSPORT &= ~(1<<DSBIT);
     998:	95 b3       	in	r25, 0x15	; 21
     99a:	20 95       	com	r18
     99c:	92 23       	and	r25, r18
     99e:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9a0:	95 e0       	ldi	r25, 0x05	; 5
     9a2:	9a 95       	dec	r25
     9a4:	f1 f7       	brne	.-4      	; 0x9a2 <DS_Read_Bit+0x20>
     9a6:	00 00       	nop
		_delay_us(1);
		DSDDR &= ~(1<<DSBIT);
     9a8:	94 b3       	in	r25, 0x14	; 20
     9aa:	92 23       	and	r25, r18
     9ac:	94 bb       	out	0x14, r25	; 20
     9ae:	e5 e3       	ldi	r30, 0x35	; 53
     9b0:	ea 95       	dec	r30
     9b2:	f1 f7       	brne	.-4      	; 0x9b0 <DS_Read_Bit+0x2e>
     9b4:	00 00       	nop
		_delay_us(10);
		if (DSPIN&(1<<DSBIT))
     9b6:	23 b3       	in	r18, 0x13	; 19
     9b8:	e7 ec       	ldi	r30, 0xC7	; 199
     9ba:	f0 e0       	ldi	r31, 0x00	; 0
     9bc:	31 97       	sbiw	r30, 0x01	; 1
     9be:	f1 f7       	brne	.-4      	; 0x9bc <DS_Read_Bit+0x3a>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <DS_Read_Bit+0x40>
     9c2:	00 00       	nop
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	02 c0       	rjmp	.+4      	; 0x9cc <DS_Read_Bit+0x4a>
     9c8:	35 95       	asr	r19
     9ca:	27 95       	ror	r18
     9cc:	8a 95       	dec	r24
     9ce:	e2 f7       	brpl	.-8      	; 0x9c8 <DS_Read_Bit+0x46>
		{
			r = 1;
		}
		_delay_us(50);
		return r;
}
     9d0:	82 2f       	mov	r24, r18
     9d2:	81 70       	andi	r24, 0x01	; 1
     9d4:	08 95       	ret

000009d6 <DS_Read_Byte>:

byte DS_Read_Byte(byte DSBIT)
{
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	08 2f       	mov	r16, r24
     9e0:	c8 e0       	ldi	r28, 0x08	; 8
     9e2:	d0 e0       	ldi	r29, 0x00	; 0
	byte b = 0;
     9e4:	10 e0       	ldi	r17, 0x00	; 0
	for (int i=0; i<8; i++)
	{
		b = b >> 1;
		b = b | (DS_Read_Bit(DSBIT)<<7);
     9e6:	80 2f       	mov	r24, r16
     9e8:	cc df       	rcall	.-104    	; 0x982 <DS_Read_Bit>
     9ea:	87 95       	ror	r24
     9ec:	88 27       	eor	r24, r24
     9ee:	87 95       	ror	r24
byte DS_Read_Byte(byte DSBIT)
{
	byte b = 0;
	for (int i=0; i<8; i++)
	{
		b = b >> 1;
     9f0:	16 95       	lsr	r17
		b = b | (DS_Read_Bit(DSBIT)<<7);
     9f2:	18 2b       	or	r17, r24
     9f4:	21 97       	sbiw	r28, 0x01	; 1
}

byte DS_Read_Byte(byte DSBIT)
{
	byte b = 0;
	for (int i=0; i<8; i++)
     9f6:	b9 f7       	brne	.-18     	; 0x9e6 <DS_Read_Byte+0x10>
	{
		b = b >> 1;
		b = b | (DS_Read_Bit(DSBIT)<<7);
	}
	return b;
}
     9f8:	81 2f       	mov	r24, r17
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	1f 91       	pop	r17
     a00:	0f 91       	pop	r16
     a02:	08 95       	ret

00000a04 <DS_getTemperature>:
		//while (!DS_Read_Bit()){}
	}
}

uint16_t DS_getTemperature(byte DSBIT)
{
     a04:	ff 92       	push	r15
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	18 2f       	mov	r17, r24
	if (DS_isPresent(DSBIT))
     a0c:	42 df       	rcall	.-380    	; 0x892 <DS_isPresent>
     a0e:	00 97       	sbiw	r24, 0x00	; 0
     a10:	f9 f0       	breq	.+62     	; 0xa50 <DS_getTemperature+0x4c>
	{
		//LCD_Clear_Display();
		//_delay_ms(1);
		//DS_Send_Byte(0x33);
		DS_Send_Byte(DSBIT, 0xCC);
     a12:	81 2f       	mov	r24, r17
     a14:	6c ec       	ldi	r22, 0xCC	; 204
     a16:	64 df       	rcall	.-312    	; 0x8e0 <DS_Send_Byte>
		DS_Send_Byte(DSBIT, 0xBE);
     a18:	81 2f       	mov	r24, r17
     a1a:	6e eb       	ldi	r22, 0xBE	; 190
     a1c:	61 df       	rcall	.-318    	; 0x8e0 <DS_Send_Byte>
		{
			byte b = DS_Read_Byte();
			LCD_Show_Byte(b);
		}*/
		
		byte b0 = DS_Read_Byte(DSBIT);
     a1e:	81 2f       	mov	r24, r17
     a20:	da df       	rcall	.-76     	; 0x9d6 <DS_Read_Byte>
     a22:	08 2f       	mov	r16, r24
		byte b1 = DS_Read_Byte(DSBIT);
     a24:	81 2f       	mov	r24, r17
     a26:	d7 df       	rcall	.-82     	; 0x9d6 <DS_Read_Byte>
     a28:	f8 2e       	mov	r15, r24
		byte b2 = DS_Read_Byte(DSBIT);
     a2a:	81 2f       	mov	r24, r17
     a2c:	d4 df       	rcall	.-88     	; 0x9d6 <DS_Read_Byte>
		byte b3 = DS_Read_Byte(DSBIT);
     a2e:	81 2f       	mov	r24, r17
     a30:	d2 df       	rcall	.-92     	; 0x9d6 <DS_Read_Byte>
		byte b4 = DS_Read_Byte(DSBIT);
     a32:	81 2f       	mov	r24, r17
     a34:	d0 df       	rcall	.-96     	; 0x9d6 <DS_Read_Byte>
		byte b5 = DS_Read_Byte(DSBIT);
     a36:	81 2f       	mov	r24, r17
     a38:	ce df       	rcall	.-100    	; 0x9d6 <DS_Read_Byte>
		byte b6 = DS_Read_Byte(DSBIT);
     a3a:	81 2f       	mov	r24, r17
     a3c:	cc df       	rcall	.-104    	; 0x9d6 <DS_Read_Byte>
		byte b7 = DS_Read_Byte(DSBIT);
     a3e:	81 2f       	mov	r24, r17
     a40:	ca df       	rcall	.-108    	; 0x9d6 <DS_Read_Byte>
		byte b8 = DS_Read_Byte(DSBIT);
     a42:	81 2f       	mov	r24, r17
     a44:	c8 df       	rcall	.-112    	; 0x9d6 <DS_Read_Byte>
		//float temp = 0;
		uint16_t tempInt = (b1<<8)+b0;
		//temp = (tempInt>>4)&0x7F;
		return (b1<<8)+b0;
     a46:	3f 2d       	mov	r19, r15
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	20 0f       	add	r18, r16
     a4c:	31 1d       	adc	r19, r1
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <DS_getTemperature+0x50>
	}
	return 0;
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
}
     a54:	c9 01       	movw	r24, r18
     a56:	1f 91       	pop	r17
     a58:	0f 91       	pop	r16
     a5a:	ff 90       	pop	r15
     a5c:	08 95       	ret

00000a5e <DS_getFloatTemperature>:

float DS_getFloatTemperature(byte DSBIT)
{
     a5e:	af 92       	push	r10
     a60:	bf 92       	push	r11
     a62:	cf 92       	push	r12
     a64:	df 92       	push	r13
     a66:	ef 92       	push	r14
     a68:	ff 92       	push	r15
     a6a:	0f 93       	push	r16
     a6c:	1f 93       	push	r17
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
	float res;
	uint16_t temp = DS_getTemperature(DSBIT);
     a72:	c8 df       	rcall	.-112    	; 0xa04 <DS_getTemperature>
     a74:	9c 01       	movw	r18, r24
	float sign = 1;
	if ((temp&(1<<15))!=0)
     a76:	97 ff       	sbrs	r25, 7
     a78:	0e c0       	rjmp	.+28     	; 0xa96 <DS_getFloatTemperature+0x38>
	{
		sign = -1;
		temp = 0xFFFF-(unsigned int)temp;
		temp++;
     a7a:	30 95       	com	r19
     a7c:	21 95       	neg	r18
     a7e:	3f 4f       	sbci	r19, 0xFF	; 255
	float res;
	uint16_t temp = DS_getTemperature(DSBIT);
	float sign = 1;
	if ((temp&(1<<15))!=0)
	{
		sign = -1;
     a80:	0f 2e       	mov	r0, r31
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	ef 2e       	mov	r14, r31
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	ff 2e       	mov	r15, r31
     a8a:	f0 e8       	ldi	r31, 0x80	; 128
     a8c:	0f 2f       	mov	r16, r31
     a8e:	ff eb       	ldi	r31, 0xBF	; 191
     a90:	1f 2f       	mov	r17, r31
     a92:	f0 2d       	mov	r31, r0
     a94:	0a c0       	rjmp	.+20     	; 0xaaa <DS_getFloatTemperature+0x4c>

float DS_getFloatTemperature(byte DSBIT)
{
	float res;
	uint16_t temp = DS_getTemperature(DSBIT);
	float sign = 1;
     a96:	0f 2e       	mov	r0, r31
     a98:	f0 e0       	ldi	r31, 0x00	; 0
     a9a:	ef 2e       	mov	r14, r31
     a9c:	f0 e0       	ldi	r31, 0x00	; 0
     a9e:	ff 2e       	mov	r15, r31
     aa0:	f0 e8       	ldi	r31, 0x80	; 128
     aa2:	0f 2f       	mov	r16, r31
     aa4:	ff e3       	ldi	r31, 0x3F	; 63
     aa6:	1f 2f       	mov	r17, r31
     aa8:	f0 2d       	mov	r31, r0
		sign = -1;
		temp = 0xFFFF-(unsigned int)temp;
		temp++;
	}
	
	int drob = temp&0x0F;
     aaa:	b9 01       	movw	r22, r18
     aac:	6f 70       	andi	r22, 0x0F	; 15
     aae:	70 70       	andi	r23, 0x00	; 0
	drob = drob * 625;
     ab0:	41 e7       	ldi	r20, 0x71	; 113
     ab2:	52 e0       	ldi	r21, 0x02	; 2
     ab4:	64 9f       	mul	r22, r20
     ab6:	c0 01       	movw	r24, r0
     ab8:	65 9f       	mul	r22, r21
     aba:	90 0d       	add	r25, r0
     abc:	74 9f       	mul	r23, r20
     abe:	90 0d       	add	r25, r0
     ac0:	11 24       	eor	r1, r1
	int ss = drob % 1000;
	drob = drob / 1000;
     ac2:	68 ee       	ldi	r22, 0xE8	; 232
     ac4:	73 e0       	ldi	r23, 0x03	; 3
     ac6:	58 d9       	rcall	.-3408   	; 0xfffffd78 <__eeprom_end+0xff7efd5d>
     ac8:	eb 01       	movw	r28, r22
	if (ss>=500)
     aca:	41 e0       	ldi	r20, 0x01	; 1
     acc:	84 3f       	cpi	r24, 0xF4	; 244
     ace:	94 07       	cpc	r25, r20
     ad0:	0c f0       	brlt	.+2      	; 0xad4 <DS_getFloatTemperature+0x76>
		drob++;
     ad2:	21 96       	adiw	r28, 0x01	; 1
	temp = (temp>>4)&0x7F;
     ad4:	84 e0       	ldi	r24, 0x04	; 4
     ad6:	36 95       	lsr	r19
     ad8:	27 95       	ror	r18
     ada:	8a 95       	dec	r24
     adc:	e1 f7       	brne	.-8      	; 0xad6 <DS_getFloatTemperature+0x78>
     ade:	2f 77       	andi	r18, 0x7F	; 127
     ae0:	30 70       	andi	r19, 0x00	; 0
	res = temp+(drob/10.0);
     ae2:	b9 01       	movw	r22, r18
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	d6 d6       	rcall	.+3500   	; 0x1896 <__floatunsisf>
     aea:	5b 01       	movw	r10, r22
     aec:	6c 01       	movw	r12, r24
     aee:	be 01       	movw	r22, r28
     af0:	88 27       	eor	r24, r24
     af2:	77 fd       	sbrc	r23, 7
     af4:	80 95       	com	r24
     af6:	98 2f       	mov	r25, r24
     af8:	23 d6       	rcall	.+3142   	; 0x1740 <__floatsisf>
     afa:	20 e0       	ldi	r18, 0x00	; 0
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	40 e2       	ldi	r20, 0x20	; 32
     b00:	51 e4       	ldi	r21, 0x41	; 65
     b02:	f4 d4       	rcall	.+2536   	; 0x14ec <__divsf3>
     b04:	9b 01       	movw	r18, r22
     b06:	ac 01       	movw	r20, r24
     b08:	c6 01       	movw	r24, r12
     b0a:	b5 01       	movw	r22, r10
     b0c:	a8 d3       	rcall	.+1872   	; 0x125e <__addsf3>
	res = res*sign;
     b0e:	a8 01       	movw	r20, r16
     b10:	97 01       	movw	r18, r14
     b12:	f7 d3       	rcall	.+2030   	; 0x1302 <__mulsf3>
	return res;
}
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	cf 90       	pop	r12
     b24:	bf 90       	pop	r11
     b26:	af 90       	pop	r10
     b28:	08 95       	ret

00000b2a <LCD_Send_Data_Instruction>:
	LCD_Send_Instruction(p);
}

void LCD_Send_Data_Instruction(byte q)
{
	Write_Lcd;	
     b2a:	96 98       	cbi	0x12, 6	; 18
	CONTROL_PORT&= 0xF0;
     b2c:	92 b3       	in	r25, 0x12	; 18
     b2e:	90 7f       	andi	r25, 0xF0	; 240
     b30:	92 bb       	out	0x12, r25	; 18
	CONTROL_PORT|= (q>>4)&0x0F;
     b32:	22 b3       	in	r18, 0x12	; 18
     b34:	98 2f       	mov	r25, r24
     b36:	92 95       	swap	r25
     b38:	9f 70       	andi	r25, 0x0F	; 15
     b3a:	92 2b       	or	r25, r18
     b3c:	92 bb       	out	0x12, r25	; 18
	Set_Enable;
     b3e:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b40:	ef e9       	ldi	r30, 0x9F	; 159
     b42:	ff e0       	ldi	r31, 0x0F	; 15
     b44:	31 97       	sbiw	r30, 0x01	; 1
     b46:	f1 f7       	brne	.-4      	; 0xb44 <LCD_Send_Data_Instruction+0x1a>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <LCD_Send_Data_Instruction+0x20>
     b4a:	00 00       	nop
	_delay_ms(1);
	Clear_Enable;
     b4c:	95 98       	cbi	0x12, 5	; 18
     b4e:	ef eb       	ldi	r30, 0xBF	; 191
     b50:	fd e5       	ldi	r31, 0x5D	; 93
     b52:	31 97       	sbiw	r30, 0x01	; 1
     b54:	f1 f7       	brne	.-4      	; 0xb52 <LCD_Send_Data_Instruction+0x28>
     b56:	00 c0       	rjmp	.+0      	; 0xb58 <LCD_Send_Data_Instruction+0x2e>
     b58:	00 00       	nop
	_delay_ms(6);
	CONTROL_PORT&= 0xF0;
     b5a:	92 b3       	in	r25, 0x12	; 18
     b5c:	90 7f       	andi	r25, 0xF0	; 240
     b5e:	92 bb       	out	0x12, r25	; 18
	CONTROL_PORT|= q&0x0F;
     b60:	92 b3       	in	r25, 0x12	; 18
     b62:	8f 70       	andi	r24, 0x0F	; 15
     b64:	89 2b       	or	r24, r25
     b66:	82 bb       	out	0x12, r24	; 18
	Set_Enable;
     b68:	95 9a       	sbi	0x12, 5	; 18
     b6a:	8f e9       	ldi	r24, 0x9F	; 159
     b6c:	9f e0       	ldi	r25, 0x0F	; 15
     b6e:	01 97       	sbiw	r24, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <LCD_Send_Data_Instruction+0x44>
     b72:	00 c0       	rjmp	.+0      	; 0xb74 <LCD_Send_Data_Instruction+0x4a>
     b74:	00 00       	nop
	_delay_ms(1);
	Clear_Enable;
     b76:	95 98       	cbi	0x12, 5	; 18
}
     b78:	08 95       	ret

00000b7a <LCD_Send_Data>:


void LCD_Send_Data(byte q)
{
	Select_DataRegister;
     b7a:	97 9a       	sbi	0x12, 7	; 18
	CONTROL_PORT&= 0xF0;
	CONTROL_PORT|= q&0x0F;
	Set_Enable;
	_delay_ms(1);
	Clear_Enable;*/
	LCD_Send_Data_Instruction(q);
     b7c:	d6 df       	rcall	.-84     	; 0xb2a <LCD_Send_Data_Instruction>
}
     b7e:	08 95       	ret

00000b80 <LCD_Send_Instruction>:

void LCD_Send_Instruction(byte q)
{
	Select_InstructionRegister;
     b80:	97 98       	cbi	0x12, 7	; 18
	CONTROL_PORT&= 0xF0;
	CONTROL_PORT|= q&0x0F;
	Set_Enable;
	_delay_ms(1);
	Clear_Enable;*/
	LCD_Send_Data_Instruction(q);
     b82:	d3 df       	rcall	.-90     	; 0xb2a <LCD_Send_Data_Instruction>
     b84:	8f eb       	ldi	r24, 0xBF	; 191
     b86:	9d e5       	ldi	r25, 0x5D	; 93
     b88:	01 97       	sbiw	r24, 0x01	; 1
     b8a:	f1 f7       	brne	.-4      	; 0xb88 <LCD_Send_Instruction+0x8>
     b8c:	00 c0       	rjmp	.+0      	; 0xb8e <LCD_Send_Instruction+0xe>
     b8e:	00 00       	nop
	_delay_ms(6);	
}
     b90:	08 95       	ret

00000b92 <LCD_Move_Cursor>:
}

void LCD_Move_Cursor(byte position)
{
	byte p = 128;
	if (position>15)
     b92:	80 31       	cpi	r24, 0x10	; 16
     b94:	18 f0       	brcs	.+6      	; 0xb9c <LCD_Move_Cursor+0xa>
	{
		p = p+40;
		position = position-16;
     b96:	80 51       	subi	r24, 0x10	; 16
void LCD_Move_Cursor(byte position)
{
	byte p = 128;
	if (position>15)
	{
		p = p+40;
     b98:	98 ea       	ldi	r25, 0xA8	; 168
     b9a:	01 c0       	rjmp	.+2      	; 0xb9e <LCD_Move_Cursor+0xc>
	LCD_Send_Instruction(0x01);
}

void LCD_Move_Cursor(byte position)
{
	byte p = 128;
     b9c:	90 e8       	ldi	r25, 0x80	; 128
	{
		p = p+40;
		position = position-16;
	}
	p = p+position;
	LCD_Send_Instruction(p);
     b9e:	89 0f       	add	r24, r25
     ba0:	ef df       	rcall	.-34     	; 0xb80 <LCD_Send_Instruction>
}
     ba2:	08 95       	ret

00000ba4 <LCD_Clear_Display>:
	LCD_Send_Instruction(0x0C);
}

void LCD_Clear_Display()
{
	LCD_Send_Instruction(0x01);
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	ec df       	rcall	.-40     	; 0xb80 <LCD_Send_Instruction>
}
     ba8:	08 95       	ret

00000baa <LCD_Init>:
	return d+'A'-10;
}*/

void LCD_Init(void)
{
	CONTROL_DDR = 0xFF;
     baa:	8f ef       	ldi	r24, 0xFF	; 255
     bac:	81 bb       	out	0x11, r24	; 17
	CONTROL_PORT = 0x00;
     bae:	12 ba       	out	0x12, r1	; 18
     bb0:	8f ef       	ldi	r24, 0xFF	; 255
     bb2:	96 e7       	ldi	r25, 0x76	; 118
     bb4:	a1 e0       	ldi	r26, 0x01	; 1
     bb6:	81 50       	subi	r24, 0x01	; 1
     bb8:	90 40       	sbci	r25, 0x00	; 0
     bba:	a0 40       	sbci	r26, 0x00	; 0
     bbc:	e1 f7       	brne	.-8      	; 0xbb6 <LCD_Init+0xc>
     bbe:	00 c0       	rjmp	.+0      	; 0xbc0 <LCD_Init+0x16>
     bc0:	00 00       	nop
	_delay_ms(30);
	Select_InstructionRegister;
     bc2:	97 98       	cbi	0x12, 7	; 18
	Write_Lcd;	
     bc4:	96 98       	cbi	0x12, 6	; 18
	CONTROL_PORT&= 0xF0;
     bc6:	82 b3       	in	r24, 0x12	; 18
     bc8:	80 7f       	andi	r24, 0xF0	; 240
     bca:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     bcc:	82 b3       	in	r24, 0x12	; 18
     bce:	83 60       	ori	r24, 0x03	; 3
     bd0:	82 bb       	out	0x12, r24	; 18
     bd2:	af e1       	ldi	r26, 0x1F	; 31
     bd4:	be e4       	ldi	r27, 0x4E	; 78
     bd6:	11 97       	sbiw	r26, 0x01	; 1
     bd8:	f1 f7       	brne	.-4      	; 0xbd6 <LCD_Init+0x2c>
     bda:	00 c0       	rjmp	.+0      	; 0xbdc <LCD_Init+0x32>
     bdc:	00 00       	nop
	_delay_ms(5);
	CONTROL_PORT&= 0xF0;
     bde:	82 b3       	in	r24, 0x12	; 18
     be0:	80 7f       	andi	r24, 0xF0	; 240
     be2:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     be4:	82 b3       	in	r24, 0x12	; 18
     be6:	83 60       	ori	r24, 0x03	; 3
     be8:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bea:	87 ee       	ldi	r24, 0xE7	; 231
     bec:	93 e0       	ldi	r25, 0x03	; 3
     bee:	01 97       	sbiw	r24, 0x01	; 1
     bf0:	f1 f7       	brne	.-4      	; 0xbee <LCD_Init+0x44>
     bf2:	00 c0       	rjmp	.+0      	; 0xbf4 <LCD_Init+0x4a>
     bf4:	00 00       	nop
	_delay_us(250);

	CONTROL_PORT&= 0xF0;
     bf6:	82 b3       	in	r24, 0x12	; 18
     bf8:	80 7f       	andi	r24, 0xF0	; 240
     bfa:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     bfc:	82 b3       	in	r24, 0x12	; 18
     bfe:	83 60       	ori	r24, 0x03	; 3
     c00:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c02:	af e1       	ldi	r26, 0x1F	; 31
     c04:	be e4       	ldi	r27, 0x4E	; 78
     c06:	11 97       	sbiw	r26, 0x01	; 1
     c08:	f1 f7       	brne	.-4      	; 0xc06 <LCD_Init+0x5c>
     c0a:	00 c0       	rjmp	.+0      	; 0xc0c <LCD_Init+0x62>
     c0c:	00 00       	nop
	_delay_ms(5);

	CONTROL_PORT&= 0xF0;
     c0e:	82 b3       	in	r24, 0x12	; 18
     c10:	80 7f       	andi	r24, 0xF0	; 240
     c12:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x02;
     c14:	91 9a       	sbi	0x12, 1	; 18
	//_delay_ms(6);
	Set_Enable;
     c16:	95 9a       	sbi	0x12, 5	; 18
     c18:	8f eb       	ldi	r24, 0xBF	; 191
     c1a:	9d e5       	ldi	r25, 0x5D	; 93
     c1c:	01 97       	sbiw	r24, 0x01	; 1
     c1e:	f1 f7       	brne	.-4      	; 0xc1c <LCD_Init+0x72>
     c20:	00 c0       	rjmp	.+0      	; 0xc22 <LCD_Init+0x78>
     c22:	00 00       	nop
	_delay_ms(6);
	Clear_Enable;
     c24:	95 98       	cbi	0x12, 5	; 18
	LCD_Send_Instruction(0x28);
     c26:	88 e2       	ldi	r24, 0x28	; 40
     c28:	ab df       	rcall	.-170    	; 0xb80 <LCD_Send_Instruction>
	LCD_Send_Instruction(0x08);
     c2a:	88 e0       	ldi	r24, 0x08	; 8
     c2c:	a9 df       	rcall	.-174    	; 0xb80 <LCD_Send_Instruction>
	LCD_Send_Instruction(0x01);
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	a7 df       	rcall	.-178    	; 0xb80 <LCD_Send_Instruction>
	LCD_Send_Instruction(0x06);
     c32:	86 e0       	ldi	r24, 0x06	; 6
     c34:	a5 df       	rcall	.-182    	; 0xb80 <LCD_Send_Instruction>
	LCD_Send_Instruction(0x0C);
     c36:	8c e0       	ldi	r24, 0x0C	; 12
     c38:	a3 df       	rcall	.-186    	; 0xb80 <LCD_Send_Instruction>
}
     c3a:	08 95       	ret

00000c3c <LCD_printStr>:
	LCD_Send_Data_Instruction(q);
	_delay_ms(6);	
}

void LCD_printStr(char * s)
{
     c3c:	ef 92       	push	r14
     c3e:	ff 92       	push	r15
     c40:	cf 93       	push	r28
     c42:	df 93       	push	r29
     c44:	e8 2e       	mov	r14, r24
     c46:	e7 01       	movw	r28, r14
     c48:	7e 01       	movw	r14, r28
     c4a:	f9 2e       	mov	r15, r25
     c4c:	e7 01       	movw	r28, r14
	while (*s)
     c4e:	01 c0       	rjmp	.+2      	; 0xc52 <LCD_printStr+0x16>
	{
		LCD_Send_Data(*s);
     c50:	94 df       	rcall	.-216    	; 0xb7a <LCD_Send_Data>
	_delay_ms(6);	
}

void LCD_printStr(char * s)
{
	while (*s)
     c52:	89 91       	ld	r24, Y+
     c54:	88 23       	and	r24, r24
     c56:	e1 f7       	brne	.-8      	; 0xc50 <LCD_printStr+0x14>
	{
		LCD_Send_Data(*s);
		s++;
	}
}
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	ff 90       	pop	r15
     c5e:	ef 90       	pop	r14
     c60:	08 95       	ret

00000c62 <LCD_2buffer_begin>:

void LCD_2buffer_begin()
{
	memset(LCD_buffer, ' ', 40);
     c62:	8b eb       	ldi	r24, 0xBB	; 187
     c64:	91 e0       	ldi	r25, 0x01	; 1
     c66:	60 e2       	ldi	r22, 0x20	; 32
     c68:	70 e0       	ldi	r23, 0x00	; 0
     c6a:	48 e2       	ldi	r20, 0x28	; 40
     c6c:	50 e0       	ldi	r21, 0x00	; 0
     c6e:	f0 d8       	rcall	.-3616   	; 0xfffffe50 <__eeprom_end+0xff7efe35>
	LCD_pointer = 0;
     c70:	10 92 8b 01 	sts	0x018B, r1
}
     c74:	08 95       	ret

00000c76 <LCD_2buffer_end>:
void LCD_2buffer_end()
{	
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
	int i;
	LCD_Move_Cursor(0);
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	8a df       	rcall	.-236    	; 0xb92 <LCD_Move_Cursor>
     c7e:	cb eb       	ldi	r28, 0xBB	; 187
     c80:	d1 e0       	ldi	r29, 0x01	; 1
	for (i=0; i<16; i++)
	{	
		LCD_Send_Data(LCD_buffer[i]);
     c82:	89 91       	ld	r24, Y+
     c84:	7a df       	rcall	.-268    	; 0xb7a <LCD_Send_Data>
}
void LCD_2buffer_end()
{	
	int i;
	LCD_Move_Cursor(0);
	for (i=0; i<16; i++)
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	cb 3c       	cpi	r28, 0xCB	; 203
     c8a:	d8 07       	cpc	r29, r24
     c8c:	d1 f7       	brne	.-12     	; 0xc82 <LCD_2buffer_end+0xc>
	{	
		LCD_Send_Data(LCD_buffer[i]);
	}

	LCD_Move_Cursor(16);
     c8e:	80 e1       	ldi	r24, 0x10	; 16
     c90:	80 df       	rcall	.-256    	; 0xb92 <LCD_Move_Cursor>
	for (i=0; i<16; i++)
	{	
		LCD_Send_Data(LCD_buffer[16+i]);
     c92:	89 91       	ld	r24, Y+
     c94:	72 df       	rcall	.-284    	; 0xb7a <LCD_Send_Data>
	{	
		LCD_Send_Data(LCD_buffer[i]);
	}

	LCD_Move_Cursor(16);
	for (i=0; i<16; i++)
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	cb 3d       	cpi	r28, 0xDB	; 219
     c9a:	d8 07       	cpc	r29, r24
     c9c:	d1 f7       	brne	.-12     	; 0xc92 <LCD_2buffer_end+0x1c>
	{	
		LCD_Send_Data(LCD_buffer[16+i]);
	}
}
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	08 95       	ret

00000ca4 <LCD_2buffer_printStr>:

void LCD_2buffer_printStr(char * s)
{
     ca4:	28 2f       	mov	r18, r24
     ca6:	39 2f       	mov	r19, r25
     ca8:	d9 01       	movw	r26, r18
	while (*s)
     caa:	0a c0       	rjmp	.+20     	; 0xcc0 <LCD_2buffer_printStr+0x1c>
	{
		LCD_buffer[LCD_pointer++] = *s;
     cac:	90 91 8b 01 	lds	r25, 0x018B
     cb0:	e9 2f       	mov	r30, r25
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	e5 54       	subi	r30, 0x45	; 69
     cb6:	fe 4f       	sbci	r31, 0xFE	; 254
     cb8:	80 83       	st	Z, r24
     cba:	9f 5f       	subi	r25, 0xFF	; 255
     cbc:	90 93 8b 01 	sts	0x018B, r25
	}
}

void LCD_2buffer_printStr(char * s)
{
	while (*s)
     cc0:	8d 91       	ld	r24, X+
     cc2:	88 23       	and	r24, r24
     cc4:	99 f7       	brne	.-26     	; 0xcac <LCD_2buffer_printStr+0x8>
	{
		LCD_buffer[LCD_pointer++] = *s;
		s++;
	}
}
     cc6:	08 95       	ret

00000cc8 <LCD_2buffer_Move_Cursor>:

void LCD_2buffer_Move_Cursor(byte position)
{
	LCD_pointer = position;
     cc8:	80 93 8b 01 	sts	0x018B, r24
}
     ccc:	08 95       	ret

00000cce <LCD_2buffer_Print_Number>:

void LCD_2buffer_Print_Number(int16_t f)
{
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	df 93       	push	r29
     cd4:	cf 93       	push	r28
     cd6:	00 d0       	rcall	.+0      	; 0xcd8 <LCD_2buffer_Print_Number+0xa>
     cd8:	00 d0       	rcall	.+0      	; 0xcda <LCD_2buffer_Print_Number+0xc>
     cda:	00 d0       	rcall	.+0      	; 0xcdc <LCD_2buffer_Print_Number+0xe>
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
	byte buffer[6];
	int n = 0;
	if (f==0)
     ce0:	00 97       	sbiw	r24, 0x00	; 0
     ce2:	61 f4       	brne	.+24     	; 0xcfc <LCD_2buffer_Print_Number+0x2e>
	{
		LCD_buffer[LCD_pointer++] = '0';
     ce4:	80 91 8b 01 	lds	r24, 0x018B
     ce8:	e8 2f       	mov	r30, r24
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	e5 54       	subi	r30, 0x45	; 69
     cee:	fe 4f       	sbci	r31, 0xFE	; 254
     cf0:	90 e3       	ldi	r25, 0x30	; 48
     cf2:	90 83       	st	Z, r25
     cf4:	8f 5f       	subi	r24, 0xFF	; 255
     cf6:	80 93 8b 01 	sts	0x018B, r24
		return;
     cfa:	35 c0       	rjmp	.+106    	; 0xd66 <LCD_2buffer_Print_Number+0x98>
	}
	if (f<0)
     cfc:	97 ff       	sbrs	r25, 7
     cfe:	0e c0       	rjmp	.+28     	; 0xd1c <LCD_2buffer_Print_Number+0x4e>
	{
		LCD_buffer[LCD_pointer++] = '-';
     d00:	20 91 8b 01 	lds	r18, 0x018B
     d04:	e2 2f       	mov	r30, r18
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	e5 54       	subi	r30, 0x45	; 69
     d0a:	fe 4f       	sbci	r31, 0xFE	; 254
     d0c:	3d e2       	ldi	r19, 0x2D	; 45
     d0e:	30 83       	st	Z, r19
     d10:	2f 5f       	subi	r18, 0xFF	; 255
     d12:	20 93 8b 01 	sts	0x018B, r18
		f = -f;
     d16:	90 95       	com	r25
     d18:	81 95       	neg	r24
     d1a:	9f 4f       	sbci	r25, 0xFF	; 255
     d1c:	fe 01       	movw	r30, r28
     d1e:	31 96       	adiw	r30, 0x01	; 1
	}
	while (f>0)
	{
		buffer[n++] = f%10;
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	0a e0       	ldi	r16, 0x0A	; 10
     d26:	10 e0       	ldi	r17, 0x00	; 0
     d28:	b8 01       	movw	r22, r16
     d2a:	26 d8       	rcall	.-4020   	; 0xfffffd78 <__eeprom_end+0xff7efd5d>
     d2c:	81 93       	st	Z+, r24
     d2e:	2f 5f       	subi	r18, 0xFF	; 255
     d30:	3f 4f       	sbci	r19, 0xFF	; 255
		f = f/10;
     d32:	cb 01       	movw	r24, r22
	if (f<0)
	{
		LCD_buffer[LCD_pointer++] = '-';
		f = -f;
	}
	while (f>0)
     d34:	00 97       	sbiw	r24, 0x00	; 0
     d36:	c1 f7       	brne	.-16     	; 0xd28 <LCD_2buffer_Print_Number+0x5a>
     d38:	60 91 8b 01 	lds	r22, 0x018B
void LCD_2buffer_Move_Cursor(byte position)
{
	LCD_pointer = position;
}

void LCD_2buffer_Print_Number(int16_t f)
     d3c:	ce 01       	movw	r24, r28
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	fc 01       	movw	r30, r24
     d42:	e2 0f       	add	r30, r18
     d44:	f3 1f       	adc	r31, r19
	while (f>0)
	{
		buffer[n++] = f%10;
		f = f/10;
	}
	for (int i = n-1; i>=0; i--)
     d46:	46 2f       	mov	r20, r22
     d48:	08 c0       	rjmp	.+16     	; 0xd5a <LCD_2buffer_Print_Number+0x8c>
	{
		LCD_buffer[LCD_pointer++] = buffer[i]+'0';
     d4a:	a4 2f       	mov	r26, r20
     d4c:	b0 e0       	ldi	r27, 0x00	; 0
     d4e:	a5 54       	subi	r26, 0x45	; 69
     d50:	be 4f       	sbci	r27, 0xFE	; 254
     d52:	52 91       	ld	r21, -Z
     d54:	50 5d       	subi	r21, 0xD0	; 208
     d56:	5c 93       	st	X, r21
     d58:	4f 5f       	subi	r20, 0xFF	; 255
	while (f>0)
	{
		buffer[n++] = f%10;
		f = f/10;
	}
	for (int i = n-1; i>=0; i--)
     d5a:	e8 17       	cp	r30, r24
     d5c:	f9 07       	cpc	r31, r25
     d5e:	a9 f7       	brne	.-22     	; 0xd4a <LCD_2buffer_Print_Number+0x7c>
     d60:	26 0f       	add	r18, r22
     d62:	20 93 8b 01 	sts	0x018B, r18
	{
		LCD_buffer[LCD_pointer++] = buffer[i]+'0';
		//LCD_Send_Data(buffer[i]+'0');
	}
}
     d66:	26 96       	adiw	r28, 0x06	; 6
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	f8 94       	cli
     d6c:	de bf       	out	0x3e, r29	; 62
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	cd bf       	out	0x3d, r28	; 61
     d72:	cf 91       	pop	r28
     d74:	df 91       	pop	r29
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	08 95       	ret

00000d7c <LCD_2buffer_Show_FloatTemperature1>:

void LCD_2buffer_Show_FloatTemperature1(float f)
{
     d7c:	ef 92       	push	r14
     d7e:	ff 92       	push	r15
     d80:	0f 93       	push	r16
     d82:	1f 93       	push	r17
     d84:	7b 01       	movw	r14, r22
     d86:	8c 01       	movw	r16, r24
	if (f<0)
     d88:	20 e0       	ldi	r18, 0x00	; 0
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	a9 01       	movw	r20, r18
     d8e:	ad d4       	rcall	.+2394   	; 0x16ea <__ltsf2>
     d90:	90 91 8b 01 	lds	r25, 0x018B
     d94:	87 ff       	sbrs	r24, 7
     d96:	0e c0       	rjmp	.+28     	; 0xdb4 <LCD_2buffer_Show_FloatTemperature1+0x38>
	{
		LCD_buffer[LCD_pointer++]='-';
     d98:	e9 2f       	mov	r30, r25
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	e5 54       	subi	r30, 0x45	; 69
     d9e:	fe 4f       	sbci	r31, 0xFE	; 254
     da0:	8d e2       	ldi	r24, 0x2D	; 45
     da2:	80 83       	st	Z, r24
     da4:	9f 5f       	subi	r25, 0xFF	; 255
     da6:	90 93 8b 01 	sts	0x018B, r25
		f = -f;
     daa:	17 fb       	bst	r17, 7
     dac:	10 95       	com	r17
     dae:	17 f9       	bld	r17, 7
     db0:	10 95       	com	r17
     db2:	09 c0       	rjmp	.+18     	; 0xdc6 <LCD_2buffer_Show_FloatTemperature1+0x4a>
	}else
	{
		LCD_buffer[LCD_pointer++]='+';
     db4:	e9 2f       	mov	r30, r25
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	e5 54       	subi	r30, 0x45	; 69
     dba:	fe 4f       	sbci	r31, 0xFE	; 254
     dbc:	8b e2       	ldi	r24, 0x2B	; 43
     dbe:	80 83       	st	Z, r24
     dc0:	9f 5f       	subi	r25, 0xFF	; 255
     dc2:	90 93 8b 01 	sts	0x018B, r25
	}
	uint16_t first = (uint16_t)f;
     dc6:	c8 01       	movw	r24, r16
     dc8:	b7 01       	movw	r22, r14
     dca:	d9 d0       	rcall	.+434    	; 0xf7e <__fixunssfsi>
     dcc:	dc 01       	movw	r26, r24
     dce:	cb 01       	movw	r24, r22
	uint16_t second = ((uint16_t)(f*10))%10;
	LCD_2buffer_Print_Number(first);
     dd0:	7e df       	rcall	.-260    	; 0xcce <LCD_2buffer_Print_Number>
	LCD_buffer[LCD_pointer++]='.';
     dd2:	80 91 8b 01 	lds	r24, 0x018B
     dd6:	e8 2f       	mov	r30, r24
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	e5 54       	subi	r30, 0x45	; 69
     ddc:	fe 4f       	sbci	r31, 0xFE	; 254
     dde:	9e e2       	ldi	r25, 0x2E	; 46
     de0:	90 83       	st	Z, r25
     de2:	8f 5f       	subi	r24, 0xFF	; 255
     de4:	80 93 8b 01 	sts	0x018B, r24
	}else
	{
		LCD_buffer[LCD_pointer++]='+';
	}
	uint16_t first = (uint16_t)f;
	uint16_t second = ((uint16_t)(f*10))%10;
     de8:	c8 01       	movw	r24, r16
     dea:	b7 01       	movw	r22, r14
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	40 e2       	ldi	r20, 0x20	; 32
     df2:	51 e4       	ldi	r21, 0x41	; 65
     df4:	86 d2       	rcall	.+1292   	; 0x1302 <__mulsf3>
     df6:	c3 d0       	rcall	.+390    	; 0xf7e <__fixunssfsi>
     df8:	cb 01       	movw	r24, r22
     dfa:	6a e0       	ldi	r22, 0x0A	; 10
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	a8 d7       	rcall	.+3920   	; 0x1d50 <__udivmodhi4>
	LCD_2buffer_Print_Number(first);
	LCD_buffer[LCD_pointer++]='.';
	LCD_2buffer_Print_Number(second);
     e00:	66 df       	rcall	.-308    	; 0xcce <LCD_2buffer_Print_Number>
}
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	ff 90       	pop	r15
     e08:	ef 90       	pop	r14
     e0a:	08 95       	ret

00000e0c <Settings_Read>:

void Settings_Read(uint8_t n)
{
	//setting1.d = 77;
	//return;
	switch(n)
     e0c:	82 30       	cpi	r24, 0x02	; 2
     e0e:	49 f0       	breq	.+18     	; 0xe22 <Settings_Read+0x16>
     e10:	83 30       	cpi	r24, 0x03	; 3
     e12:	79 f0       	breq	.+30     	; 0xe32 <Settings_Read+0x26>
     e14:	81 30       	cpi	r24, 0x01	; 1
     e16:	a1 f4       	brne	.+40     	; 0xe40 <Settings_Read+0x34>
	{
		case 1:
			eeprom_read_block (( void *) &setting1 , ( const void *) &EEMEMsetting1 , sizeof(setting1)) ;
     e18:	82 e9       	ldi	r24, 0x92	; 146
     e1a:	91 e0       	ldi	r25, 0x01	; 1
     e1c:	60 e0       	ldi	r22, 0x00	; 0
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <Settings_Read+0x1e>
		break;

		case 2:
			eeprom_read_block (( void *) &setting2 , ( const void *) &EEMEMsetting2 , sizeof(setting2)) ;
     e22:	83 ea       	ldi	r24, 0xA3	; 163
     e24:	91 e0       	ldi	r25, 0x01	; 1
     e26:	69 e0       	ldi	r22, 0x09	; 9
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	49 e0       	ldi	r20, 0x09	; 9
     e2c:	50 e0       	ldi	r21, 0x00	; 0
     e2e:	17 d8       	rcall	.-4050   	; 0xfffffe5e <__eeprom_end+0xff7efe43>
		break;
     e30:	08 95       	ret

		case 3:
			eeprom_read_block (( void *) &setting3 , ( const void *) &EEMEMsetting3 , sizeof(setting3)) ;
     e32:	8d ea       	ldi	r24, 0xAD	; 173
     e34:	91 e0       	ldi	r25, 0x01	; 1
     e36:	62 e1       	ldi	r22, 0x12	; 18
     e38:	70 e0       	ldi	r23, 0x00	; 0
     e3a:	49 e0       	ldi	r20, 0x09	; 9
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	0f d8       	rcall	.-4066   	; 0xfffffe5e <__eeprom_end+0xff7efe43>
     e40:	08 95       	ret

00000e42 <Settings_Init>:
extern Settings setting2;
extern Settings setting3;

void Settings_Init()
{
	Settings_Read(1);
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	e3 df       	rcall	.-58     	; 0xe0c <Settings_Read>
	Settings_Read(2);
     e46:	82 e0       	ldi	r24, 0x02	; 2
     e48:	e1 df       	rcall	.-62     	; 0xe0c <Settings_Read>
	Settings_Read(3);
     e4a:	83 e0       	ldi	r24, 0x03	; 3
     e4c:	df df       	rcall	.-66     	; 0xe0c <Settings_Read>
}
     e4e:	08 95       	ret

00000e50 <Settings_Write>:
}


void Settings_Write(uint8_t n)
{
	switch(n)
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	49 f0       	breq	.+18     	; 0xe66 <Settings_Write+0x16>
     e54:	83 30       	cpi	r24, 0x03	; 3
     e56:	79 f0       	breq	.+30     	; 0xe76 <Settings_Write+0x26>
     e58:	81 30       	cpi	r24, 0x01	; 1
     e5a:	a1 f4       	brne	.+40     	; 0xe84 <Settings_Write+0x34>
	{
		case 1:
			eeprom_update_block (( void *) &setting1 , ( const void *) &EEMEMsetting1 , sizeof(setting1)) ;
     e5c:	82 e9       	ldi	r24, 0x92	; 146
     e5e:	91 e0       	ldi	r25, 0x01	; 1
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	04 c0       	rjmp	.+8      	; 0xe6e <Settings_Write+0x1e>
		break;

		case 2:
			eeprom_update_block (( void *) &setting2 , ( const void *) &EEMEMsetting2 , sizeof(setting2)) ;
     e66:	83 ea       	ldi	r24, 0xA3	; 163
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	69 e0       	ldi	r22, 0x09	; 9
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	49 e0       	ldi	r20, 0x09	; 9
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	05 d8       	rcall	.-4086   	; 0xfffffe7e <__eeprom_end+0xff7efe63>
		break;
     e74:	08 95       	ret

		case 3:
			eeprom_update_block (( void *) &setting3 , ( const void *) &EEMEMsetting3 , sizeof(setting3)) ;
     e76:	8d ea       	ldi	r24, 0xAD	; 173
     e78:	91 e0       	ldi	r25, 0x01	; 1
     e7a:	62 e1       	ldi	r22, 0x12	; 18
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	49 e0       	ldi	r20, 0x09	; 9
     e80:	50 e0       	ldi	r21, 0x00	; 0
     e82:	fd d7       	rcall	.+4090   	; 0x1e7e <__eeupd_block_m8>
     e84:	08 95       	ret

00000e86 <Relay_Init>:
#include "relay.h"

void Relay_Init()
{
	On(RELAY_DDR, RELAY1);
     e86:	ba 9a       	sbi	0x17, 2	; 23
	On(RELAY_DDR, RELAY2);
     e88:	b9 9a       	sbi	0x17, 1	; 23
	On(RELAY_DDR, RELAY3);
     e8a:	b8 9a       	sbi	0x17, 0	; 23

	Off(RELAY_PORT, RELAY1);
     e8c:	c2 98       	cbi	0x18, 2	; 24
	Off(RELAY_PORT, RELAY2);
     e8e:	c1 98       	cbi	0x18, 1	; 24
	Off(RELAY_PORT, RELAY3);
     e90:	c0 98       	cbi	0x18, 0	; 24
}
     e92:	08 95       	ret

00000e94 <HandleRelay>:

void HandleRelay(Settings * setting, float temp, uint8_t relay)
{
     e94:	df 92       	push	r13
     e96:	ef 92       	push	r14
     e98:	ff 92       	push	r15
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	ec 01       	movw	r28, r24
     ea4:	7a 01       	movw	r14, r20
     ea6:	8b 01       	movw	r16, r22
     ea8:	d2 2e       	mov	r13, r18
	if (setting->direction)
     eaa:	88 85       	ldd	r24, Y+8	; 0x08
     eac:	88 23       	and	r24, r24
     eae:	81 f1       	breq	.+96     	; 0xf10 <HandleRelay+0x7c>
	{
		if (temp<(setting->temp-setting->d))
     eb0:	68 81       	ld	r22, Y
     eb2:	79 81       	ldd	r23, Y+1	; 0x01
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	9b 81       	ldd	r25, Y+3	; 0x03
     eb8:	2c 81       	ldd	r18, Y+4	; 0x04
     eba:	3d 81       	ldd	r19, Y+5	; 0x05
     ebc:	4e 81       	ldd	r20, Y+6	; 0x06
     ebe:	5f 81       	ldd	r21, Y+7	; 0x07
     ec0:	f5 d1       	rcall	.+1002   	; 0x12ac <__subsf3>
     ec2:	9b 01       	movw	r18, r22
     ec4:	ac 01       	movw	r20, r24
     ec6:	c8 01       	movw	r24, r16
     ec8:	b7 01       	movw	r22, r14
     eca:	0f d4       	rcall	.+2078   	; 0x16ea <__ltsf2>
     ecc:	87 ff       	sbrs	r24, 7
     ece:	0c c0       	rjmp	.+24     	; 0xee8 <HandleRelay+0x54>
		{
			Off(RELAY_PORT, relay);
     ed0:	28 b3       	in	r18, 0x18	; 24
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0d 2c       	mov	r0, r13
     ed8:	02 c0       	rjmp	.+4      	; 0xede <HandleRelay+0x4a>
     eda:	88 0f       	add	r24, r24
     edc:	99 1f       	adc	r25, r25
     ede:	0a 94       	dec	r0
     ee0:	e2 f7       	brpl	.-8      	; 0xeda <HandleRelay+0x46>
     ee2:	80 95       	com	r24
     ee4:	82 23       	and	r24, r18
     ee6:	88 bb       	out	0x18, r24	; 24
		}
		if (temp>(setting->temp))
     ee8:	c8 01       	movw	r24, r16
     eea:	b7 01       	movw	r22, r14
     eec:	28 81       	ld	r18, Y
     eee:	39 81       	ldd	r19, Y+1	; 0x01
     ef0:	4a 81       	ldd	r20, Y+2	; 0x02
     ef2:	5b 81       	ldd	r21, Y+3	; 0x03
     ef4:	a4 d3       	rcall	.+1864   	; 0x163e <__gtsf2>
     ef6:	18 16       	cp	r1, r24
     ef8:	d4 f5       	brge	.+116    	; 0xf6e <HandleRelay+0xda>
		{
			On(RELAY_PORT, relay);
     efa:	28 b3       	in	r18, 0x18	; 24
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <HandleRelay+0x72>
     f02:	88 0f       	add	r24, r24
     f04:	99 1f       	adc	r25, r25
     f06:	da 94       	dec	r13
     f08:	e2 f7       	brpl	.-8      	; 0xf02 <HandleRelay+0x6e>
     f0a:	28 2b       	or	r18, r24
     f0c:	28 bb       	out	0x18, r18	; 24
     f0e:	2f c0       	rjmp	.+94     	; 0xf6e <HandleRelay+0xda>
		}
	}else
	{
		if (temp<(setting->temp-setting->d))
     f10:	68 81       	ld	r22, Y
     f12:	79 81       	ldd	r23, Y+1	; 0x01
     f14:	8a 81       	ldd	r24, Y+2	; 0x02
     f16:	9b 81       	ldd	r25, Y+3	; 0x03
     f18:	2c 81       	ldd	r18, Y+4	; 0x04
     f1a:	3d 81       	ldd	r19, Y+5	; 0x05
     f1c:	4e 81       	ldd	r20, Y+6	; 0x06
     f1e:	5f 81       	ldd	r21, Y+7	; 0x07
     f20:	c5 d1       	rcall	.+906    	; 0x12ac <__subsf3>
     f22:	9b 01       	movw	r18, r22
     f24:	ac 01       	movw	r20, r24
     f26:	c8 01       	movw	r24, r16
     f28:	b7 01       	movw	r22, r14
     f2a:	df d3       	rcall	.+1982   	; 0x16ea <__ltsf2>
     f2c:	87 ff       	sbrs	r24, 7
     f2e:	0b c0       	rjmp	.+22     	; 0xf46 <HandleRelay+0xb2>
		{
			On(RELAY_PORT, relay);
     f30:	28 b3       	in	r18, 0x18	; 24
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0d 2c       	mov	r0, r13
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <HandleRelay+0xaa>
     f3a:	88 0f       	add	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	0a 94       	dec	r0
     f40:	e2 f7       	brpl	.-8      	; 0xf3a <HandleRelay+0xa6>
     f42:	28 2b       	or	r18, r24
     f44:	28 bb       	out	0x18, r18	; 24
		}
		if (temp>(setting->temp))
     f46:	c8 01       	movw	r24, r16
     f48:	b7 01       	movw	r22, r14
     f4a:	28 81       	ld	r18, Y
     f4c:	39 81       	ldd	r19, Y+1	; 0x01
     f4e:	4a 81       	ldd	r20, Y+2	; 0x02
     f50:	5b 81       	ldd	r21, Y+3	; 0x03
     f52:	75 d3       	rcall	.+1770   	; 0x163e <__gtsf2>
     f54:	18 16       	cp	r1, r24
     f56:	5c f4       	brge	.+22     	; 0xf6e <HandleRelay+0xda>
		{
			Off(RELAY_PORT, relay);
     f58:	28 b3       	in	r18, 0x18	; 24
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	02 c0       	rjmp	.+4      	; 0xf64 <HandleRelay+0xd0>
     f60:	88 0f       	add	r24, r24
     f62:	99 1f       	adc	r25, r25
     f64:	da 94       	dec	r13
     f66:	e2 f7       	brpl	.-8      	; 0xf60 <HandleRelay+0xcc>
     f68:	80 95       	com	r24
     f6a:	82 23       	and	r24, r18
     f6c:	88 bb       	out	0x18, r24	; 24
		}
	}
}
     f6e:	df 91       	pop	r29
     f70:	cf 91       	pop	r28
     f72:	1f 91       	pop	r17
     f74:	0f 91       	pop	r16
     f76:	ff 90       	pop	r15
     f78:	ef 90       	pop	r14
     f7a:	df 90       	pop	r13
     f7c:	08 95       	ret

00000f7e <__fixunssfsi>:
     f7e:	ef 92       	push	r14
     f80:	ff 92       	push	r15
     f82:	0f 93       	push	r16
     f84:	1f 93       	push	r17
     f86:	7b 01       	movw	r14, r22
     f88:	8c 01       	movw	r16, r24
     f8a:	20 e0       	ldi	r18, 0x00	; 0
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	40 e0       	ldi	r20, 0x00	; 0
     f90:	5f e4       	ldi	r21, 0x4F	; 79
     f92:	80 d3       	rcall	.+1792   	; 0x1694 <__gesf2>
     f94:	87 fd       	sbrc	r24, 7
     f96:	0f c0       	rjmp	.+30     	; 0xfb6 <__fixunssfsi+0x38>
     f98:	c8 01       	movw	r24, r16
     f9a:	b7 01       	movw	r22, r14
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e0       	ldi	r20, 0x00	; 0
     fa2:	5f e4       	ldi	r21, 0x4F	; 79
     fa4:	83 d1       	rcall	.+774    	; 0x12ac <__subsf3>
     fa6:	28 d4       	rcall	.+2128   	; 0x17f8 <__fixsfsi>
     fa8:	9b 01       	movw	r18, r22
     faa:	ac 01       	movw	r20, r24
     fac:	20 50       	subi	r18, 0x00	; 0
     fae:	30 40       	sbci	r19, 0x00	; 0
     fb0:	40 40       	sbci	r20, 0x00	; 0
     fb2:	50 48       	sbci	r21, 0x80	; 128
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <__fixunssfsi+0x42>
     fb6:	c8 01       	movw	r24, r16
     fb8:	b7 01       	movw	r22, r14
     fba:	1e d4       	rcall	.+2108   	; 0x17f8 <__fixsfsi>
     fbc:	9b 01       	movw	r18, r22
     fbe:	ac 01       	movw	r20, r24
     fc0:	b9 01       	movw	r22, r18
     fc2:	ca 01       	movw	r24, r20
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	ff 90       	pop	r15
     fca:	ef 90       	pop	r14
     fcc:	08 95       	ret

00000fce <_fpadd_parts>:
     fce:	a0 e0       	ldi	r26, 0x00	; 0
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	ec ee       	ldi	r30, 0xEC	; 236
     fd4:	f7 e0       	ldi	r31, 0x07	; 7
     fd6:	09 c7       	rjmp	.+3602   	; 0x1dea <__prologue_saves__+0x8>
     fd8:	fc 01       	movw	r30, r24
     fda:	ea 01       	movw	r28, r20
     fdc:	80 81       	ld	r24, Z
     fde:	82 30       	cpi	r24, 0x02	; 2
     fe0:	08 f4       	brcc	.+2      	; 0xfe4 <_fpadd_parts+0x16>
     fe2:	38 c1       	rjmp	.+624    	; 0x1254 <_fpadd_parts+0x286>
     fe4:	db 01       	movw	r26, r22
     fe6:	9c 91       	ld	r25, X
     fe8:	92 30       	cpi	r25, 0x02	; 2
     fea:	08 f4       	brcc	.+2      	; 0xfee <_fpadd_parts+0x20>
     fec:	30 c1       	rjmp	.+608    	; 0x124e <_fpadd_parts+0x280>
     fee:	84 30       	cpi	r24, 0x04	; 4
     ff0:	59 f4       	brne	.+22     	; 0x1008 <_fpadd_parts+0x3a>
     ff2:	94 30       	cpi	r25, 0x04	; 4
     ff4:	09 f0       	breq	.+2      	; 0xff8 <_fpadd_parts+0x2a>
     ff6:	2e c1       	rjmp	.+604    	; 0x1254 <_fpadd_parts+0x286>
     ff8:	91 81       	ldd	r25, Z+1	; 0x01
     ffa:	11 96       	adiw	r26, 0x01	; 1
     ffc:	8c 91       	ld	r24, X
     ffe:	11 97       	sbiw	r26, 0x01	; 1
    1000:	98 17       	cp	r25, r24
    1002:	09 f0       	breq	.+2      	; 0x1006 <_fpadd_parts+0x38>
    1004:	21 c1       	rjmp	.+578    	; 0x1248 <_fpadd_parts+0x27a>
    1006:	26 c1       	rjmp	.+588    	; 0x1254 <_fpadd_parts+0x286>
    1008:	94 30       	cpi	r25, 0x04	; 4
    100a:	09 f4       	brne	.+2      	; 0x100e <_fpadd_parts+0x40>
    100c:	20 c1       	rjmp	.+576    	; 0x124e <_fpadd_parts+0x280>
    100e:	92 30       	cpi	r25, 0x02	; 2
    1010:	b1 f4       	brne	.+44     	; 0x103e <_fpadd_parts+0x70>
    1012:	82 30       	cpi	r24, 0x02	; 2
    1014:	09 f0       	breq	.+2      	; 0x1018 <_fpadd_parts+0x4a>
    1016:	1e c1       	rjmp	.+572    	; 0x1254 <_fpadd_parts+0x286>
    1018:	ca 01       	movw	r24, r20
    101a:	af 01       	movw	r20, r30
    101c:	28 e0       	ldi	r18, 0x08	; 8
    101e:	da 01       	movw	r26, r20
    1020:	0d 90       	ld	r0, X+
    1022:	ad 01       	movw	r20, r26
    1024:	dc 01       	movw	r26, r24
    1026:	0d 92       	st	X+, r0
    1028:	cd 01       	movw	r24, r26
    102a:	21 50       	subi	r18, 0x01	; 1
    102c:	c1 f7       	brne	.-16     	; 0x101e <_fpadd_parts+0x50>
    102e:	db 01       	movw	r26, r22
    1030:	11 96       	adiw	r26, 0x01	; 1
    1032:	8c 91       	ld	r24, X
    1034:	11 97       	sbiw	r26, 0x01	; 1
    1036:	91 81       	ldd	r25, Z+1	; 0x01
    1038:	89 23       	and	r24, r25
    103a:	89 83       	std	Y+1, r24	; 0x01
    103c:	0a c1       	rjmp	.+532    	; 0x1252 <_fpadd_parts+0x284>
    103e:	82 30       	cpi	r24, 0x02	; 2
    1040:	09 f4       	brne	.+2      	; 0x1044 <_fpadd_parts+0x76>
    1042:	05 c1       	rjmp	.+522    	; 0x124e <_fpadd_parts+0x280>
    1044:	c2 80       	ldd	r12, Z+2	; 0x02
    1046:	d3 80       	ldd	r13, Z+3	; 0x03
    1048:	db 01       	movw	r26, r22
    104a:	12 96       	adiw	r26, 0x02	; 2
    104c:	6d 90       	ld	r6, X+
    104e:	7c 90       	ld	r7, X
    1050:	13 97       	sbiw	r26, 0x03	; 3
    1052:	24 81       	ldd	r18, Z+4	; 0x04
    1054:	35 81       	ldd	r19, Z+5	; 0x05
    1056:	46 81       	ldd	r20, Z+6	; 0x06
    1058:	57 81       	ldd	r21, Z+7	; 0x07
    105a:	14 96       	adiw	r26, 0x04	; 4
    105c:	ed 90       	ld	r14, X+
    105e:	fd 90       	ld	r15, X+
    1060:	0d 91       	ld	r16, X+
    1062:	1c 91       	ld	r17, X
    1064:	17 97       	sbiw	r26, 0x07	; 7
    1066:	c6 01       	movw	r24, r12
    1068:	86 19       	sub	r24, r6
    106a:	97 09       	sbc	r25, r7
    106c:	5c 01       	movw	r10, r24
    106e:	97 ff       	sbrs	r25, 7
    1070:	04 c0       	rjmp	.+8      	; 0x107a <_fpadd_parts+0xac>
    1072:	aa 24       	eor	r10, r10
    1074:	bb 24       	eor	r11, r11
    1076:	a8 1a       	sub	r10, r24
    1078:	b9 0a       	sbc	r11, r25
    107a:	b0 e2       	ldi	r27, 0x20	; 32
    107c:	ab 16       	cp	r10, r27
    107e:	b1 04       	cpc	r11, r1
    1080:	0c f0       	brlt	.+2      	; 0x1084 <_fpadd_parts+0xb6>
    1082:	61 c0       	rjmp	.+194    	; 0x1146 <_fpadd_parts+0x178>
    1084:	18 16       	cp	r1, r24
    1086:	19 06       	cpc	r1, r25
    1088:	6c f5       	brge	.+90     	; 0x10e4 <_fpadd_parts+0x116>
    108a:	37 01       	movw	r6, r14
    108c:	48 01       	movw	r8, r16
    108e:	0a 2c       	mov	r0, r10
    1090:	04 c0       	rjmp	.+8      	; 0x109a <_fpadd_parts+0xcc>
    1092:	96 94       	lsr	r9
    1094:	87 94       	ror	r8
    1096:	77 94       	ror	r7
    1098:	67 94       	ror	r6
    109a:	0a 94       	dec	r0
    109c:	d2 f7       	brpl	.-12     	; 0x1092 <_fpadd_parts+0xc4>
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a0 e0       	ldi	r26, 0x00	; 0
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	0a 2c       	mov	r0, r10
    10a8:	04 c0       	rjmp	.+8      	; 0x10b2 <_fpadd_parts+0xe4>
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	aa 1f       	adc	r26, r26
    10b0:	bb 1f       	adc	r27, r27
    10b2:	0a 94       	dec	r0
    10b4:	d2 f7       	brpl	.-12     	; 0x10aa <_fpadd_parts+0xdc>
    10b6:	01 97       	sbiw	r24, 0x01	; 1
    10b8:	a1 09       	sbc	r26, r1
    10ba:	b1 09       	sbc	r27, r1
    10bc:	8e 21       	and	r24, r14
    10be:	9f 21       	and	r25, r15
    10c0:	a0 23       	and	r26, r16
    10c2:	b1 23       	and	r27, r17
    10c4:	ee 24       	eor	r14, r14
    10c6:	ff 24       	eor	r15, r15
    10c8:	87 01       	movw	r16, r14
    10ca:	e3 94       	inc	r14
    10cc:	00 97       	sbiw	r24, 0x00	; 0
    10ce:	a1 05       	cpc	r26, r1
    10d0:	b1 05       	cpc	r27, r1
    10d2:	19 f4       	brne	.+6      	; 0x10da <_fpadd_parts+0x10c>
    10d4:	ee 24       	eor	r14, r14
    10d6:	ff 24       	eor	r15, r15
    10d8:	87 01       	movw	r16, r14
    10da:	e6 28       	or	r14, r6
    10dc:	f7 28       	or	r15, r7
    10de:	08 29       	or	r16, r8
    10e0:	19 29       	or	r17, r9
    10e2:	3c c0       	rjmp	.+120    	; 0x115c <_fpadd_parts+0x18e>
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	d1 f1       	breq	.+116    	; 0x115c <_fpadd_parts+0x18e>
    10e8:	ca 0c       	add	r12, r10
    10ea:	db 1c       	adc	r13, r11
    10ec:	39 01       	movw	r6, r18
    10ee:	4a 01       	movw	r8, r20
    10f0:	0a 2c       	mov	r0, r10
    10f2:	04 c0       	rjmp	.+8      	; 0x10fc <_fpadd_parts+0x12e>
    10f4:	96 94       	lsr	r9
    10f6:	87 94       	ror	r8
    10f8:	77 94       	ror	r7
    10fa:	67 94       	ror	r6
    10fc:	0a 94       	dec	r0
    10fe:	d2 f7       	brpl	.-12     	; 0x10f4 <_fpadd_parts+0x126>
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	a0 e0       	ldi	r26, 0x00	; 0
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	0a 2c       	mov	r0, r10
    110a:	04 c0       	rjmp	.+8      	; 0x1114 <_fpadd_parts+0x146>
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	aa 1f       	adc	r26, r26
    1112:	bb 1f       	adc	r27, r27
    1114:	0a 94       	dec	r0
    1116:	d2 f7       	brpl	.-12     	; 0x110c <_fpadd_parts+0x13e>
    1118:	01 97       	sbiw	r24, 0x01	; 1
    111a:	a1 09       	sbc	r26, r1
    111c:	b1 09       	sbc	r27, r1
    111e:	82 23       	and	r24, r18
    1120:	93 23       	and	r25, r19
    1122:	a4 23       	and	r26, r20
    1124:	b5 23       	and	r27, r21
    1126:	21 e0       	ldi	r18, 0x01	; 1
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	40 e0       	ldi	r20, 0x00	; 0
    112c:	50 e0       	ldi	r21, 0x00	; 0
    112e:	00 97       	sbiw	r24, 0x00	; 0
    1130:	a1 05       	cpc	r26, r1
    1132:	b1 05       	cpc	r27, r1
    1134:	19 f4       	brne	.+6      	; 0x113c <_fpadd_parts+0x16e>
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	a9 01       	movw	r20, r18
    113c:	26 29       	or	r18, r6
    113e:	37 29       	or	r19, r7
    1140:	48 29       	or	r20, r8
    1142:	59 29       	or	r21, r9
    1144:	0b c0       	rjmp	.+22     	; 0x115c <_fpadd_parts+0x18e>
    1146:	6c 14       	cp	r6, r12
    1148:	7d 04       	cpc	r7, r13
    114a:	24 f4       	brge	.+8      	; 0x1154 <_fpadd_parts+0x186>
    114c:	ee 24       	eor	r14, r14
    114e:	ff 24       	eor	r15, r15
    1150:	87 01       	movw	r16, r14
    1152:	04 c0       	rjmp	.+8      	; 0x115c <_fpadd_parts+0x18e>
    1154:	63 01       	movw	r12, r6
    1156:	20 e0       	ldi	r18, 0x00	; 0
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	a9 01       	movw	r20, r18
    115c:	81 81       	ldd	r24, Z+1	; 0x01
    115e:	fb 01       	movw	r30, r22
    1160:	91 81       	ldd	r25, Z+1	; 0x01
    1162:	89 17       	cp	r24, r25
    1164:	09 f4       	brne	.+2      	; 0x1168 <_fpadd_parts+0x19a>
    1166:	45 c0       	rjmp	.+138    	; 0x11f2 <_fpadd_parts+0x224>
    1168:	88 23       	and	r24, r24
    116a:	49 f0       	breq	.+18     	; 0x117e <_fpadd_parts+0x1b0>
    116c:	d8 01       	movw	r26, r16
    116e:	c7 01       	movw	r24, r14
    1170:	82 1b       	sub	r24, r18
    1172:	93 0b       	sbc	r25, r19
    1174:	a4 0b       	sbc	r26, r20
    1176:	b5 0b       	sbc	r27, r21
    1178:	9c 01       	movw	r18, r24
    117a:	ad 01       	movw	r20, r26
    117c:	04 c0       	rjmp	.+8      	; 0x1186 <_fpadd_parts+0x1b8>
    117e:	2e 19       	sub	r18, r14
    1180:	3f 09       	sbc	r19, r15
    1182:	40 0b       	sbc	r20, r16
    1184:	51 0b       	sbc	r21, r17
    1186:	57 fd       	sbrc	r21, 7
    1188:	04 c0       	rjmp	.+8      	; 0x1192 <_fpadd_parts+0x1c4>
    118a:	19 82       	std	Y+1, r1	; 0x01
    118c:	db 82       	std	Y+3, r13	; 0x03
    118e:	ca 82       	std	Y+2, r12	; 0x02
    1190:	0b c0       	rjmp	.+22     	; 0x11a8 <_fpadd_parts+0x1da>
    1192:	81 e0       	ldi	r24, 0x01	; 1
    1194:	89 83       	std	Y+1, r24	; 0x01
    1196:	db 82       	std	Y+3, r13	; 0x03
    1198:	ca 82       	std	Y+2, r12	; 0x02
    119a:	50 95       	com	r21
    119c:	40 95       	com	r20
    119e:	30 95       	com	r19
    11a0:	21 95       	neg	r18
    11a2:	3f 4f       	sbci	r19, 0xFF	; 255
    11a4:	4f 4f       	sbci	r20, 0xFF	; 255
    11a6:	5f 4f       	sbci	r21, 0xFF	; 255
    11a8:	2c 83       	std	Y+4, r18	; 0x04
    11aa:	3d 83       	std	Y+5, r19	; 0x05
    11ac:	4e 83       	std	Y+6, r20	; 0x06
    11ae:	5f 83       	std	Y+7, r21	; 0x07
    11b0:	0d c0       	rjmp	.+26     	; 0x11cc <_fpadd_parts+0x1fe>
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	aa 1f       	adc	r26, r26
    11b8:	bb 1f       	adc	r27, r27
    11ba:	8c 83       	std	Y+4, r24	; 0x04
    11bc:	9d 83       	std	Y+5, r25	; 0x05
    11be:	ae 83       	std	Y+6, r26	; 0x06
    11c0:	bf 83       	std	Y+7, r27	; 0x07
    11c2:	8a 81       	ldd	r24, Y+2	; 0x02
    11c4:	9b 81       	ldd	r25, Y+3	; 0x03
    11c6:	01 97       	sbiw	r24, 0x01	; 1
    11c8:	9b 83       	std	Y+3, r25	; 0x03
    11ca:	8a 83       	std	Y+2, r24	; 0x02
    11cc:	8c 81       	ldd	r24, Y+4	; 0x04
    11ce:	9d 81       	ldd	r25, Y+5	; 0x05
    11d0:	ae 81       	ldd	r26, Y+6	; 0x06
    11d2:	bf 81       	ldd	r27, Y+7	; 0x07
    11d4:	9c 01       	movw	r18, r24
    11d6:	ad 01       	movw	r20, r26
    11d8:	21 50       	subi	r18, 0x01	; 1
    11da:	30 40       	sbci	r19, 0x00	; 0
    11dc:	40 40       	sbci	r20, 0x00	; 0
    11de:	50 40       	sbci	r21, 0x00	; 0
    11e0:	2f 3f       	cpi	r18, 0xFF	; 255
    11e2:	ef ef       	ldi	r30, 0xFF	; 255
    11e4:	3e 07       	cpc	r19, r30
    11e6:	ef ef       	ldi	r30, 0xFF	; 255
    11e8:	4e 07       	cpc	r20, r30
    11ea:	ef e3       	ldi	r30, 0x3F	; 63
    11ec:	5e 07       	cpc	r21, r30
    11ee:	08 f3       	brcs	.-62     	; 0x11b2 <_fpadd_parts+0x1e4>
    11f0:	0b c0       	rjmp	.+22     	; 0x1208 <_fpadd_parts+0x23a>
    11f2:	89 83       	std	Y+1, r24	; 0x01
    11f4:	db 82       	std	Y+3, r13	; 0x03
    11f6:	ca 82       	std	Y+2, r12	; 0x02
    11f8:	2e 0d       	add	r18, r14
    11fa:	3f 1d       	adc	r19, r15
    11fc:	40 1f       	adc	r20, r16
    11fe:	51 1f       	adc	r21, r17
    1200:	2c 83       	std	Y+4, r18	; 0x04
    1202:	3d 83       	std	Y+5, r19	; 0x05
    1204:	4e 83       	std	Y+6, r20	; 0x06
    1206:	5f 83       	std	Y+7, r21	; 0x07
    1208:	83 e0       	ldi	r24, 0x03	; 3
    120a:	88 83       	st	Y, r24
    120c:	2c 81       	ldd	r18, Y+4	; 0x04
    120e:	3d 81       	ldd	r19, Y+5	; 0x05
    1210:	4e 81       	ldd	r20, Y+6	; 0x06
    1212:	5f 81       	ldd	r21, Y+7	; 0x07
    1214:	57 ff       	sbrs	r21, 7
    1216:	1d c0       	rjmp	.+58     	; 0x1252 <_fpadd_parts+0x284>
    1218:	da 01       	movw	r26, r20
    121a:	c9 01       	movw	r24, r18
    121c:	81 70       	andi	r24, 0x01	; 1
    121e:	90 70       	andi	r25, 0x00	; 0
    1220:	a0 70       	andi	r26, 0x00	; 0
    1222:	b0 70       	andi	r27, 0x00	; 0
    1224:	56 95       	lsr	r21
    1226:	47 95       	ror	r20
    1228:	37 95       	ror	r19
    122a:	27 95       	ror	r18
    122c:	82 2b       	or	r24, r18
    122e:	93 2b       	or	r25, r19
    1230:	a4 2b       	or	r26, r20
    1232:	b5 2b       	or	r27, r21
    1234:	8c 83       	std	Y+4, r24	; 0x04
    1236:	9d 83       	std	Y+5, r25	; 0x05
    1238:	ae 83       	std	Y+6, r26	; 0x06
    123a:	bf 83       	std	Y+7, r27	; 0x07
    123c:	8a 81       	ldd	r24, Y+2	; 0x02
    123e:	9b 81       	ldd	r25, Y+3	; 0x03
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	9b 83       	std	Y+3, r25	; 0x03
    1244:	8a 83       	std	Y+2, r24	; 0x02
    1246:	05 c0       	rjmp	.+10     	; 0x1252 <_fpadd_parts+0x284>
    1248:	ec e7       	ldi	r30, 0x7C	; 124
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <_fpadd_parts+0x286>
    124e:	fb 01       	movw	r30, r22
    1250:	01 c0       	rjmp	.+2      	; 0x1254 <_fpadd_parts+0x286>
    1252:	fe 01       	movw	r30, r28
    1254:	cf 01       	movw	r24, r30
    1256:	cd b7       	in	r28, 0x3d	; 61
    1258:	de b7       	in	r29, 0x3e	; 62
    125a:	ee e0       	ldi	r30, 0x0E	; 14
    125c:	e2 c5       	rjmp	.+3012   	; 0x1e22 <__epilogue_restores__+0x8>

0000125e <__addsf3>:
    125e:	a0 e2       	ldi	r26, 0x20	; 32
    1260:	b0 e0       	ldi	r27, 0x00	; 0
    1262:	e4 e3       	ldi	r30, 0x34	; 52
    1264:	f9 e0       	ldi	r31, 0x09	; 9
    1266:	c9 c5       	rjmp	.+2962   	; 0x1dfa <__prologue_saves__+0x18>
    1268:	69 83       	std	Y+1, r22	; 0x01
    126a:	7a 83       	std	Y+2, r23	; 0x02
    126c:	8b 83       	std	Y+3, r24	; 0x03
    126e:	9c 83       	std	Y+4, r25	; 0x04
    1270:	2d 83       	std	Y+5, r18	; 0x05
    1272:	3e 83       	std	Y+6, r19	; 0x06
    1274:	4f 83       	std	Y+7, r20	; 0x07
    1276:	58 87       	std	Y+8, r21	; 0x08
    1278:	89 e0       	ldi	r24, 0x09	; 9
    127a:	e8 2e       	mov	r14, r24
    127c:	f1 2c       	mov	r15, r1
    127e:	ec 0e       	add	r14, r28
    1280:	fd 1e       	adc	r15, r29
    1282:	ce 01       	movw	r24, r28
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	b7 01       	movw	r22, r14
    1288:	a1 d4       	rcall	.+2370   	; 0x1bcc <__unpack_f>
    128a:	8e 01       	movw	r16, r28
    128c:	0f 5e       	subi	r16, 0xEF	; 239
    128e:	1f 4f       	sbci	r17, 0xFF	; 255
    1290:	ce 01       	movw	r24, r28
    1292:	05 96       	adiw	r24, 0x05	; 5
    1294:	b8 01       	movw	r22, r16
    1296:	9a d4       	rcall	.+2356   	; 0x1bcc <__unpack_f>
    1298:	c7 01       	movw	r24, r14
    129a:	b8 01       	movw	r22, r16
    129c:	ae 01       	movw	r20, r28
    129e:	47 5e       	subi	r20, 0xE7	; 231
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	95 de       	rcall	.-726    	; 0xfce <_fpadd_parts>
    12a4:	c6 d3       	rcall	.+1932   	; 0x1a32 <__pack_f>
    12a6:	a0 96       	adiw	r28, 0x20	; 32
    12a8:	e6 e0       	ldi	r30, 0x06	; 6
    12aa:	c3 c5       	rjmp	.+2950   	; 0x1e32 <__epilogue_restores__+0x18>

000012ac <__subsf3>:
    12ac:	a0 e2       	ldi	r26, 0x20	; 32
    12ae:	b0 e0       	ldi	r27, 0x00	; 0
    12b0:	eb e5       	ldi	r30, 0x5B	; 91
    12b2:	f9 e0       	ldi	r31, 0x09	; 9
    12b4:	a2 c5       	rjmp	.+2884   	; 0x1dfa <__prologue_saves__+0x18>
    12b6:	69 83       	std	Y+1, r22	; 0x01
    12b8:	7a 83       	std	Y+2, r23	; 0x02
    12ba:	8b 83       	std	Y+3, r24	; 0x03
    12bc:	9c 83       	std	Y+4, r25	; 0x04
    12be:	2d 83       	std	Y+5, r18	; 0x05
    12c0:	3e 83       	std	Y+6, r19	; 0x06
    12c2:	4f 83       	std	Y+7, r20	; 0x07
    12c4:	58 87       	std	Y+8, r21	; 0x08
    12c6:	8e 01       	movw	r16, r28
    12c8:	07 5f       	subi	r16, 0xF7	; 247
    12ca:	1f 4f       	sbci	r17, 0xFF	; 255
    12cc:	ce 01       	movw	r24, r28
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	b8 01       	movw	r22, r16
    12d2:	7c d4       	rcall	.+2296   	; 0x1bcc <__unpack_f>
    12d4:	91 e1       	ldi	r25, 0x11	; 17
    12d6:	e9 2e       	mov	r14, r25
    12d8:	f1 2c       	mov	r15, r1
    12da:	ec 0e       	add	r14, r28
    12dc:	fd 1e       	adc	r15, r29
    12de:	ce 01       	movw	r24, r28
    12e0:	05 96       	adiw	r24, 0x05	; 5
    12e2:	b7 01       	movw	r22, r14
    12e4:	73 d4       	rcall	.+2278   	; 0x1bcc <__unpack_f>
    12e6:	8a 89       	ldd	r24, Y+18	; 0x12
    12e8:	91 e0       	ldi	r25, 0x01	; 1
    12ea:	89 27       	eor	r24, r25
    12ec:	8a 8b       	std	Y+18, r24	; 0x12
    12ee:	c8 01       	movw	r24, r16
    12f0:	b7 01       	movw	r22, r14
    12f2:	ae 01       	movw	r20, r28
    12f4:	47 5e       	subi	r20, 0xE7	; 231
    12f6:	5f 4f       	sbci	r21, 0xFF	; 255
    12f8:	6a de       	rcall	.-812    	; 0xfce <_fpadd_parts>
    12fa:	9b d3       	rcall	.+1846   	; 0x1a32 <__pack_f>
    12fc:	a0 96       	adiw	r28, 0x20	; 32
    12fe:	e6 e0       	ldi	r30, 0x06	; 6
    1300:	98 c5       	rjmp	.+2864   	; 0x1e32 <__epilogue_restores__+0x18>

00001302 <__mulsf3>:
    1302:	a0 e2       	ldi	r26, 0x20	; 32
    1304:	b0 e0       	ldi	r27, 0x00	; 0
    1306:	e6 e8       	ldi	r30, 0x86	; 134
    1308:	f9 e0       	ldi	r31, 0x09	; 9
    130a:	6b c5       	rjmp	.+2774   	; 0x1de2 <__prologue_saves__>
    130c:	69 83       	std	Y+1, r22	; 0x01
    130e:	7a 83       	std	Y+2, r23	; 0x02
    1310:	8b 83       	std	Y+3, r24	; 0x03
    1312:	9c 83       	std	Y+4, r25	; 0x04
    1314:	2d 83       	std	Y+5, r18	; 0x05
    1316:	3e 83       	std	Y+6, r19	; 0x06
    1318:	4f 83       	std	Y+7, r20	; 0x07
    131a:	58 87       	std	Y+8, r21	; 0x08
    131c:	ce 01       	movw	r24, r28
    131e:	01 96       	adiw	r24, 0x01	; 1
    1320:	be 01       	movw	r22, r28
    1322:	67 5f       	subi	r22, 0xF7	; 247
    1324:	7f 4f       	sbci	r23, 0xFF	; 255
    1326:	52 d4       	rcall	.+2212   	; 0x1bcc <__unpack_f>
    1328:	ce 01       	movw	r24, r28
    132a:	05 96       	adiw	r24, 0x05	; 5
    132c:	be 01       	movw	r22, r28
    132e:	6f 5e       	subi	r22, 0xEF	; 239
    1330:	7f 4f       	sbci	r23, 0xFF	; 255
    1332:	4c d4       	rcall	.+2200   	; 0x1bcc <__unpack_f>
    1334:	99 85       	ldd	r25, Y+9	; 0x09
    1336:	92 30       	cpi	r25, 0x02	; 2
    1338:	78 f0       	brcs	.+30     	; 0x1358 <__mulsf3+0x56>
    133a:	89 89       	ldd	r24, Y+17	; 0x11
    133c:	82 30       	cpi	r24, 0x02	; 2
    133e:	c0 f0       	brcs	.+48     	; 0x1370 <__mulsf3+0x6e>
    1340:	94 30       	cpi	r25, 0x04	; 4
    1342:	19 f4       	brne	.+6      	; 0x134a <__mulsf3+0x48>
    1344:	82 30       	cpi	r24, 0x02	; 2
    1346:	41 f4       	brne	.+16     	; 0x1358 <__mulsf3+0x56>
    1348:	cb c0       	rjmp	.+406    	; 0x14e0 <__mulsf3+0x1de>
    134a:	84 30       	cpi	r24, 0x04	; 4
    134c:	19 f4       	brne	.+6      	; 0x1354 <__mulsf3+0x52>
    134e:	92 30       	cpi	r25, 0x02	; 2
    1350:	79 f4       	brne	.+30     	; 0x1370 <__mulsf3+0x6e>
    1352:	c6 c0       	rjmp	.+396    	; 0x14e0 <__mulsf3+0x1de>
    1354:	92 30       	cpi	r25, 0x02	; 2
    1356:	51 f4       	brne	.+20     	; 0x136c <__mulsf3+0x6a>
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	2a 85       	ldd	r18, Y+10	; 0x0a
    135c:	9a 89       	ldd	r25, Y+18	; 0x12
    135e:	29 17       	cp	r18, r25
    1360:	09 f4       	brne	.+2      	; 0x1364 <__mulsf3+0x62>
    1362:	80 e0       	ldi	r24, 0x00	; 0
    1364:	8a 87       	std	Y+10, r24	; 0x0a
    1366:	ce 01       	movw	r24, r28
    1368:	09 96       	adiw	r24, 0x09	; 9
    136a:	bc c0       	rjmp	.+376    	; 0x14e4 <__mulsf3+0x1e2>
    136c:	82 30       	cpi	r24, 0x02	; 2
    136e:	51 f4       	brne	.+20     	; 0x1384 <__mulsf3+0x82>
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	2a 85       	ldd	r18, Y+10	; 0x0a
    1374:	9a 89       	ldd	r25, Y+18	; 0x12
    1376:	29 17       	cp	r18, r25
    1378:	09 f4       	brne	.+2      	; 0x137c <__mulsf3+0x7a>
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	8a 8b       	std	Y+18, r24	; 0x12
    137e:	ce 01       	movw	r24, r28
    1380:	41 96       	adiw	r24, 0x11	; 17
    1382:	b0 c0       	rjmp	.+352    	; 0x14e4 <__mulsf3+0x1e2>
    1384:	6d 84       	ldd	r6, Y+13	; 0x0d
    1386:	7e 84       	ldd	r7, Y+14	; 0x0e
    1388:	8f 84       	ldd	r8, Y+15	; 0x0f
    138a:	98 88       	ldd	r9, Y+16	; 0x10
    138c:	ed 88       	ldd	r14, Y+21	; 0x15
    138e:	fe 88       	ldd	r15, Y+22	; 0x16
    1390:	0f 89       	ldd	r16, Y+23	; 0x17
    1392:	18 8d       	ldd	r17, Y+24	; 0x18
    1394:	e0 e2       	ldi	r30, 0x20	; 32
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	dc 01       	movw	r26, r24
    139e:	aa 24       	eor	r10, r10
    13a0:	bb 24       	eor	r11, r11
    13a2:	65 01       	movw	r12, r10
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	a9 01       	movw	r20, r18
    13aa:	b3 01       	movw	r22, r6
    13ac:	61 70       	andi	r22, 0x01	; 1
    13ae:	70 70       	andi	r23, 0x00	; 0
    13b0:	61 15       	cp	r22, r1
    13b2:	71 05       	cpc	r23, r1
    13b4:	d1 f0       	breq	.+52     	; 0x13ea <__mulsf3+0xe8>
    13b6:	2e 0d       	add	r18, r14
    13b8:	3f 1d       	adc	r19, r15
    13ba:	40 1f       	adc	r20, r16
    13bc:	51 1f       	adc	r21, r17
    13be:	15 01       	movw	r2, r10
    13c0:	26 01       	movw	r4, r12
    13c2:	28 0e       	add	r2, r24
    13c4:	39 1e       	adc	r3, r25
    13c6:	4a 1e       	adc	r4, r26
    13c8:	5b 1e       	adc	r5, r27
    13ca:	81 e0       	ldi	r24, 0x01	; 1
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	a0 e0       	ldi	r26, 0x00	; 0
    13d0:	b0 e0       	ldi	r27, 0x00	; 0
    13d2:	2e 15       	cp	r18, r14
    13d4:	3f 05       	cpc	r19, r15
    13d6:	40 07       	cpc	r20, r16
    13d8:	51 07       	cpc	r21, r17
    13da:	18 f0       	brcs	.+6      	; 0x13e2 <__mulsf3+0xe0>
    13dc:	80 e0       	ldi	r24, 0x00	; 0
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	dc 01       	movw	r26, r24
    13e2:	82 0d       	add	r24, r2
    13e4:	93 1d       	adc	r25, r3
    13e6:	a4 1d       	adc	r26, r4
    13e8:	b5 1d       	adc	r27, r5
    13ea:	aa 0c       	add	r10, r10
    13ec:	bb 1c       	adc	r11, r11
    13ee:	cc 1c       	adc	r12, r12
    13f0:	dd 1c       	adc	r13, r13
    13f2:	17 ff       	sbrs	r17, 7
    13f4:	09 c0       	rjmp	.+18     	; 0x1408 <__mulsf3+0x106>
    13f6:	61 e0       	ldi	r22, 0x01	; 1
    13f8:	26 2e       	mov	r2, r22
    13fa:	31 2c       	mov	r3, r1
    13fc:	41 2c       	mov	r4, r1
    13fe:	51 2c       	mov	r5, r1
    1400:	a2 28       	or	r10, r2
    1402:	b3 28       	or	r11, r3
    1404:	c4 28       	or	r12, r4
    1406:	d5 28       	or	r13, r5
    1408:	31 97       	sbiw	r30, 0x01	; 1
    140a:	49 f0       	breq	.+18     	; 0x141e <__mulsf3+0x11c>
    140c:	ee 0c       	add	r14, r14
    140e:	ff 1c       	adc	r15, r15
    1410:	00 1f       	adc	r16, r16
    1412:	11 1f       	adc	r17, r17
    1414:	96 94       	lsr	r9
    1416:	87 94       	ror	r8
    1418:	77 94       	ror	r7
    141a:	67 94       	ror	r6
    141c:	c6 cf       	rjmp	.-116    	; 0x13aa <__mulsf3+0xa8>
    141e:	6b 89       	ldd	r22, Y+19	; 0x13
    1420:	7c 89       	ldd	r23, Y+20	; 0x14
    1422:	eb 85       	ldd	r30, Y+11	; 0x0b
    1424:	fc 85       	ldd	r31, Y+12	; 0x0c
    1426:	6e 0f       	add	r22, r30
    1428:	7f 1f       	adc	r23, r31
    142a:	6e 5f       	subi	r22, 0xFE	; 254
    142c:	7f 4f       	sbci	r23, 0xFF	; 255
    142e:	7c 8f       	std	Y+28, r23	; 0x1c
    1430:	6b 8f       	std	Y+27, r22	; 0x1b
    1432:	61 e0       	ldi	r22, 0x01	; 1
    1434:	ea 85       	ldd	r30, Y+10	; 0x0a
    1436:	7a 89       	ldd	r23, Y+18	; 0x12
    1438:	e7 17       	cp	r30, r23
    143a:	09 f4       	brne	.+2      	; 0x143e <__mulsf3+0x13c>
    143c:	60 e0       	ldi	r22, 0x00	; 0
    143e:	6a 8f       	std	Y+26, r22	; 0x1a
    1440:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1442:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1444:	10 c0       	rjmp	.+32     	; 0x1466 <__mulsf3+0x164>
    1446:	fc 01       	movw	r30, r24
    1448:	e1 70       	andi	r30, 0x01	; 1
    144a:	f0 70       	andi	r31, 0x00	; 0
    144c:	30 97       	sbiw	r30, 0x00	; 0
    144e:	29 f0       	breq	.+10     	; 0x145a <__mulsf3+0x158>
    1450:	56 95       	lsr	r21
    1452:	47 95       	ror	r20
    1454:	37 95       	ror	r19
    1456:	27 95       	ror	r18
    1458:	50 68       	ori	r21, 0x80	; 128
    145a:	b6 95       	lsr	r27
    145c:	a7 95       	ror	r26
    145e:	97 95       	ror	r25
    1460:	87 95       	ror	r24
    1462:	6f 5f       	subi	r22, 0xFF	; 255
    1464:	7f 4f       	sbci	r23, 0xFF	; 255
    1466:	b7 fd       	sbrc	r27, 7
    1468:	ee cf       	rjmp	.-36     	; 0x1446 <__mulsf3+0x144>
    146a:	0c c0       	rjmp	.+24     	; 0x1484 <__mulsf3+0x182>
    146c:	88 0f       	add	r24, r24
    146e:	99 1f       	adc	r25, r25
    1470:	aa 1f       	adc	r26, r26
    1472:	bb 1f       	adc	r27, r27
    1474:	57 fd       	sbrc	r21, 7
    1476:	81 60       	ori	r24, 0x01	; 1
    1478:	22 0f       	add	r18, r18
    147a:	33 1f       	adc	r19, r19
    147c:	44 1f       	adc	r20, r20
    147e:	55 1f       	adc	r21, r21
    1480:	61 50       	subi	r22, 0x01	; 1
    1482:	70 40       	sbci	r23, 0x00	; 0
    1484:	80 30       	cpi	r24, 0x00	; 0
    1486:	e0 e0       	ldi	r30, 0x00	; 0
    1488:	9e 07       	cpc	r25, r30
    148a:	e0 e0       	ldi	r30, 0x00	; 0
    148c:	ae 07       	cpc	r26, r30
    148e:	e0 e4       	ldi	r30, 0x40	; 64
    1490:	be 07       	cpc	r27, r30
    1492:	60 f3       	brcs	.-40     	; 0x146c <__mulsf3+0x16a>
    1494:	6b 8f       	std	Y+27, r22	; 0x1b
    1496:	7c 8f       	std	Y+28, r23	; 0x1c
    1498:	6f e7       	ldi	r22, 0x7F	; 127
    149a:	e6 2e       	mov	r14, r22
    149c:	f1 2c       	mov	r15, r1
    149e:	01 2d       	mov	r16, r1
    14a0:	11 2d       	mov	r17, r1
    14a2:	e8 22       	and	r14, r24
    14a4:	f9 22       	and	r15, r25
    14a6:	0a 23       	and	r16, r26
    14a8:	1b 23       	and	r17, r27
    14aa:	60 e4       	ldi	r22, 0x40	; 64
    14ac:	e6 16       	cp	r14, r22
    14ae:	f1 04       	cpc	r15, r1
    14b0:	01 05       	cpc	r16, r1
    14b2:	11 05       	cpc	r17, r1
    14b4:	61 f4       	brne	.+24     	; 0x14ce <__mulsf3+0x1cc>
    14b6:	87 fd       	sbrc	r24, 7
    14b8:	0a c0       	rjmp	.+20     	; 0x14ce <__mulsf3+0x1cc>
    14ba:	21 15       	cp	r18, r1
    14bc:	31 05       	cpc	r19, r1
    14be:	41 05       	cpc	r20, r1
    14c0:	51 05       	cpc	r21, r1
    14c2:	29 f0       	breq	.+10     	; 0x14ce <__mulsf3+0x1cc>
    14c4:	80 5c       	subi	r24, 0xC0	; 192
    14c6:	9f 4f       	sbci	r25, 0xFF	; 255
    14c8:	af 4f       	sbci	r26, 0xFF	; 255
    14ca:	bf 4f       	sbci	r27, 0xFF	; 255
    14cc:	80 78       	andi	r24, 0x80	; 128
    14ce:	8d 8f       	std	Y+29, r24	; 0x1d
    14d0:	9e 8f       	std	Y+30, r25	; 0x1e
    14d2:	af 8f       	std	Y+31, r26	; 0x1f
    14d4:	b8 a3       	std	Y+32, r27	; 0x20
    14d6:	83 e0       	ldi	r24, 0x03	; 3
    14d8:	89 8f       	std	Y+25, r24	; 0x19
    14da:	ce 01       	movw	r24, r28
    14dc:	49 96       	adiw	r24, 0x19	; 25
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <__mulsf3+0x1e2>
    14e0:	8c e7       	ldi	r24, 0x7C	; 124
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	a6 d2       	rcall	.+1356   	; 0x1a32 <__pack_f>
    14e6:	a0 96       	adiw	r28, 0x20	; 32
    14e8:	e2 e1       	ldi	r30, 0x12	; 18
    14ea:	97 c4       	rjmp	.+2350   	; 0x1e1a <__epilogue_restores__>

000014ec <__divsf3>:
    14ec:	a8 e1       	ldi	r26, 0x18	; 24
    14ee:	b0 e0       	ldi	r27, 0x00	; 0
    14f0:	eb e7       	ldi	r30, 0x7B	; 123
    14f2:	fa e0       	ldi	r31, 0x0A	; 10
    14f4:	7e c4       	rjmp	.+2300   	; 0x1df2 <__prologue_saves__+0x10>
    14f6:	69 83       	std	Y+1, r22	; 0x01
    14f8:	7a 83       	std	Y+2, r23	; 0x02
    14fa:	8b 83       	std	Y+3, r24	; 0x03
    14fc:	9c 83       	std	Y+4, r25	; 0x04
    14fe:	2d 83       	std	Y+5, r18	; 0x05
    1500:	3e 83       	std	Y+6, r19	; 0x06
    1502:	4f 83       	std	Y+7, r20	; 0x07
    1504:	58 87       	std	Y+8, r21	; 0x08
    1506:	8e 01       	movw	r16, r28
    1508:	07 5f       	subi	r16, 0xF7	; 247
    150a:	1f 4f       	sbci	r17, 0xFF	; 255
    150c:	ce 01       	movw	r24, r28
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	b8 01       	movw	r22, r16
    1512:	5c d3       	rcall	.+1720   	; 0x1bcc <__unpack_f>
    1514:	81 e1       	ldi	r24, 0x11	; 17
    1516:	e8 2e       	mov	r14, r24
    1518:	f1 2c       	mov	r15, r1
    151a:	ec 0e       	add	r14, r28
    151c:	fd 1e       	adc	r15, r29
    151e:	ce 01       	movw	r24, r28
    1520:	05 96       	adiw	r24, 0x05	; 5
    1522:	b7 01       	movw	r22, r14
    1524:	53 d3       	rcall	.+1702   	; 0x1bcc <__unpack_f>
    1526:	99 85       	ldd	r25, Y+9	; 0x09
    1528:	92 30       	cpi	r25, 0x02	; 2
    152a:	08 f4       	brcc	.+2      	; 0x152e <__divsf3+0x42>
    152c:	83 c0       	rjmp	.+262    	; 0x1634 <__divsf3+0x148>
    152e:	89 89       	ldd	r24, Y+17	; 0x11
    1530:	82 30       	cpi	r24, 0x02	; 2
    1532:	08 f4       	brcc	.+2      	; 0x1536 <__divsf3+0x4a>
    1534:	7b c0       	rjmp	.+246    	; 0x162c <__divsf3+0x140>
    1536:	2a 85       	ldd	r18, Y+10	; 0x0a
    1538:	3a 89       	ldd	r19, Y+18	; 0x12
    153a:	23 27       	eor	r18, r19
    153c:	2a 87       	std	Y+10, r18	; 0x0a
    153e:	94 30       	cpi	r25, 0x04	; 4
    1540:	11 f0       	breq	.+4      	; 0x1546 <__divsf3+0x5a>
    1542:	92 30       	cpi	r25, 0x02	; 2
    1544:	21 f4       	brne	.+8      	; 0x154e <__divsf3+0x62>
    1546:	98 17       	cp	r25, r24
    1548:	09 f0       	breq	.+2      	; 0x154c <__divsf3+0x60>
    154a:	6c c0       	rjmp	.+216    	; 0x1624 <__divsf3+0x138>
    154c:	71 c0       	rjmp	.+226    	; 0x1630 <__divsf3+0x144>
    154e:	84 30       	cpi	r24, 0x04	; 4
    1550:	39 f4       	brne	.+14     	; 0x1560 <__divsf3+0x74>
    1552:	1d 86       	std	Y+13, r1	; 0x0d
    1554:	1e 86       	std	Y+14, r1	; 0x0e
    1556:	1f 86       	std	Y+15, r1	; 0x0f
    1558:	18 8a       	std	Y+16, r1	; 0x10
    155a:	1c 86       	std	Y+12, r1	; 0x0c
    155c:	1b 86       	std	Y+11, r1	; 0x0b
    155e:	6a c0       	rjmp	.+212    	; 0x1634 <__divsf3+0x148>
    1560:	82 30       	cpi	r24, 0x02	; 2
    1562:	19 f4       	brne	.+6      	; 0x156a <__divsf3+0x7e>
    1564:	84 e0       	ldi	r24, 0x04	; 4
    1566:	89 87       	std	Y+9, r24	; 0x09
    1568:	65 c0       	rjmp	.+202    	; 0x1634 <__divsf3+0x148>
    156a:	8b 85       	ldd	r24, Y+11	; 0x0b
    156c:	9c 85       	ldd	r25, Y+12	; 0x0c
    156e:	2b 89       	ldd	r18, Y+19	; 0x13
    1570:	3c 89       	ldd	r19, Y+20	; 0x14
    1572:	82 1b       	sub	r24, r18
    1574:	93 0b       	sbc	r25, r19
    1576:	9c 87       	std	Y+12, r25	; 0x0c
    1578:	8b 87       	std	Y+11, r24	; 0x0b
    157a:	2d 85       	ldd	r18, Y+13	; 0x0d
    157c:	3e 85       	ldd	r19, Y+14	; 0x0e
    157e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1580:	58 89       	ldd	r21, Y+16	; 0x10
    1582:	ed 88       	ldd	r14, Y+21	; 0x15
    1584:	fe 88       	ldd	r15, Y+22	; 0x16
    1586:	0f 89       	ldd	r16, Y+23	; 0x17
    1588:	18 8d       	ldd	r17, Y+24	; 0x18
    158a:	2e 15       	cp	r18, r14
    158c:	3f 05       	cpc	r19, r15
    158e:	40 07       	cpc	r20, r16
    1590:	51 07       	cpc	r21, r17
    1592:	38 f4       	brcc	.+14     	; 0x15a2 <__divsf3+0xb6>
    1594:	22 0f       	add	r18, r18
    1596:	33 1f       	adc	r19, r19
    1598:	44 1f       	adc	r20, r20
    159a:	55 1f       	adc	r21, r21
    159c:	01 97       	sbiw	r24, 0x01	; 1
    159e:	9c 87       	std	Y+12, r25	; 0x0c
    15a0:	8b 87       	std	Y+11, r24	; 0x0b
    15a2:	6f e1       	ldi	r22, 0x1F	; 31
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	a1 2c       	mov	r10, r1
    15a8:	b1 2c       	mov	r11, r1
    15aa:	c1 2c       	mov	r12, r1
    15ac:	a0 e4       	ldi	r26, 0x40	; 64
    15ae:	da 2e       	mov	r13, r26
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	dc 01       	movw	r26, r24
    15b6:	2e 15       	cp	r18, r14
    15b8:	3f 05       	cpc	r19, r15
    15ba:	40 07       	cpc	r20, r16
    15bc:	51 07       	cpc	r21, r17
    15be:	40 f0       	brcs	.+16     	; 0x15d0 <__divsf3+0xe4>
    15c0:	8a 29       	or	r24, r10
    15c2:	9b 29       	or	r25, r11
    15c4:	ac 29       	or	r26, r12
    15c6:	bd 29       	or	r27, r13
    15c8:	2e 19       	sub	r18, r14
    15ca:	3f 09       	sbc	r19, r15
    15cc:	40 0b       	sbc	r20, r16
    15ce:	51 0b       	sbc	r21, r17
    15d0:	d6 94       	lsr	r13
    15d2:	c7 94       	ror	r12
    15d4:	b7 94       	ror	r11
    15d6:	a7 94       	ror	r10
    15d8:	22 0f       	add	r18, r18
    15da:	33 1f       	adc	r19, r19
    15dc:	44 1f       	adc	r20, r20
    15de:	55 1f       	adc	r21, r21
    15e0:	61 50       	subi	r22, 0x01	; 1
    15e2:	70 40       	sbci	r23, 0x00	; 0
    15e4:	41 f7       	brne	.-48     	; 0x15b6 <__divsf3+0xca>
    15e6:	6f e7       	ldi	r22, 0x7F	; 127
    15e8:	e6 2e       	mov	r14, r22
    15ea:	f1 2c       	mov	r15, r1
    15ec:	01 2d       	mov	r16, r1
    15ee:	11 2d       	mov	r17, r1
    15f0:	e8 22       	and	r14, r24
    15f2:	f9 22       	and	r15, r25
    15f4:	0a 23       	and	r16, r26
    15f6:	1b 23       	and	r17, r27
    15f8:	60 e4       	ldi	r22, 0x40	; 64
    15fa:	e6 16       	cp	r14, r22
    15fc:	f1 04       	cpc	r15, r1
    15fe:	01 05       	cpc	r16, r1
    1600:	11 05       	cpc	r17, r1
    1602:	61 f4       	brne	.+24     	; 0x161c <__divsf3+0x130>
    1604:	87 fd       	sbrc	r24, 7
    1606:	0a c0       	rjmp	.+20     	; 0x161c <__divsf3+0x130>
    1608:	21 15       	cp	r18, r1
    160a:	31 05       	cpc	r19, r1
    160c:	41 05       	cpc	r20, r1
    160e:	51 05       	cpc	r21, r1
    1610:	29 f0       	breq	.+10     	; 0x161c <__divsf3+0x130>
    1612:	80 5c       	subi	r24, 0xC0	; 192
    1614:	9f 4f       	sbci	r25, 0xFF	; 255
    1616:	af 4f       	sbci	r26, 0xFF	; 255
    1618:	bf 4f       	sbci	r27, 0xFF	; 255
    161a:	80 78       	andi	r24, 0x80	; 128
    161c:	8d 87       	std	Y+13, r24	; 0x0d
    161e:	9e 87       	std	Y+14, r25	; 0x0e
    1620:	af 87       	std	Y+15, r26	; 0x0f
    1622:	b8 8b       	std	Y+16, r27	; 0x10
    1624:	8e 01       	movw	r16, r28
    1626:	07 5f       	subi	r16, 0xF7	; 247
    1628:	1f 4f       	sbci	r17, 0xFF	; 255
    162a:	04 c0       	rjmp	.+8      	; 0x1634 <__divsf3+0x148>
    162c:	87 01       	movw	r16, r14
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <__divsf3+0x148>
    1630:	0c e7       	ldi	r16, 0x7C	; 124
    1632:	10 e0       	ldi	r17, 0x00	; 0
    1634:	c8 01       	movw	r24, r16
    1636:	fd d1       	rcall	.+1018   	; 0x1a32 <__pack_f>
    1638:	68 96       	adiw	r28, 0x18	; 24
    163a:	ea e0       	ldi	r30, 0x0A	; 10
    163c:	f6 c3       	rjmp	.+2028   	; 0x1e2a <__epilogue_restores__+0x10>

0000163e <__gtsf2>:
    163e:	a8 e1       	ldi	r26, 0x18	; 24
    1640:	b0 e0       	ldi	r27, 0x00	; 0
    1642:	e4 e2       	ldi	r30, 0x24	; 36
    1644:	fb e0       	ldi	r31, 0x0B	; 11
    1646:	d9 c3       	rjmp	.+1970   	; 0x1dfa <__prologue_saves__+0x18>
    1648:	69 83       	std	Y+1, r22	; 0x01
    164a:	7a 83       	std	Y+2, r23	; 0x02
    164c:	8b 83       	std	Y+3, r24	; 0x03
    164e:	9c 83       	std	Y+4, r25	; 0x04
    1650:	2d 83       	std	Y+5, r18	; 0x05
    1652:	3e 83       	std	Y+6, r19	; 0x06
    1654:	4f 83       	std	Y+7, r20	; 0x07
    1656:	58 87       	std	Y+8, r21	; 0x08
    1658:	8e 01       	movw	r16, r28
    165a:	07 5f       	subi	r16, 0xF7	; 247
    165c:	1f 4f       	sbci	r17, 0xFF	; 255
    165e:	ce 01       	movw	r24, r28
    1660:	01 96       	adiw	r24, 0x01	; 1
    1662:	b8 01       	movw	r22, r16
    1664:	b3 d2       	rcall	.+1382   	; 0x1bcc <__unpack_f>
    1666:	81 e1       	ldi	r24, 0x11	; 17
    1668:	e8 2e       	mov	r14, r24
    166a:	f1 2c       	mov	r15, r1
    166c:	ec 0e       	add	r14, r28
    166e:	fd 1e       	adc	r15, r29
    1670:	ce 01       	movw	r24, r28
    1672:	05 96       	adiw	r24, 0x05	; 5
    1674:	b7 01       	movw	r22, r14
    1676:	aa d2       	rcall	.+1364   	; 0x1bcc <__unpack_f>
    1678:	89 85       	ldd	r24, Y+9	; 0x09
    167a:	82 30       	cpi	r24, 0x02	; 2
    167c:	38 f0       	brcs	.+14     	; 0x168c <__gtsf2+0x4e>
    167e:	89 89       	ldd	r24, Y+17	; 0x11
    1680:	82 30       	cpi	r24, 0x02	; 2
    1682:	20 f0       	brcs	.+8      	; 0x168c <__gtsf2+0x4e>
    1684:	c8 01       	movw	r24, r16
    1686:	b7 01       	movw	r22, r14
    1688:	0a d3       	rcall	.+1556   	; 0x1c9e <__fpcmp_parts_f>
    168a:	01 c0       	rjmp	.+2      	; 0x168e <__gtsf2+0x50>
    168c:	8f ef       	ldi	r24, 0xFF	; 255
    168e:	68 96       	adiw	r28, 0x18	; 24
    1690:	e6 e0       	ldi	r30, 0x06	; 6
    1692:	cf c3       	rjmp	.+1950   	; 0x1e32 <__epilogue_restores__+0x18>

00001694 <__gesf2>:
    1694:	a8 e1       	ldi	r26, 0x18	; 24
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	ef e4       	ldi	r30, 0x4F	; 79
    169a:	fb e0       	ldi	r31, 0x0B	; 11
    169c:	ae c3       	rjmp	.+1884   	; 0x1dfa <__prologue_saves__+0x18>
    169e:	69 83       	std	Y+1, r22	; 0x01
    16a0:	7a 83       	std	Y+2, r23	; 0x02
    16a2:	8b 83       	std	Y+3, r24	; 0x03
    16a4:	9c 83       	std	Y+4, r25	; 0x04
    16a6:	2d 83       	std	Y+5, r18	; 0x05
    16a8:	3e 83       	std	Y+6, r19	; 0x06
    16aa:	4f 83       	std	Y+7, r20	; 0x07
    16ac:	58 87       	std	Y+8, r21	; 0x08
    16ae:	8e 01       	movw	r16, r28
    16b0:	07 5f       	subi	r16, 0xF7	; 247
    16b2:	1f 4f       	sbci	r17, 0xFF	; 255
    16b4:	ce 01       	movw	r24, r28
    16b6:	01 96       	adiw	r24, 0x01	; 1
    16b8:	b8 01       	movw	r22, r16
    16ba:	88 d2       	rcall	.+1296   	; 0x1bcc <__unpack_f>
    16bc:	81 e1       	ldi	r24, 0x11	; 17
    16be:	e8 2e       	mov	r14, r24
    16c0:	f1 2c       	mov	r15, r1
    16c2:	ec 0e       	add	r14, r28
    16c4:	fd 1e       	adc	r15, r29
    16c6:	ce 01       	movw	r24, r28
    16c8:	05 96       	adiw	r24, 0x05	; 5
    16ca:	b7 01       	movw	r22, r14
    16cc:	7f d2       	rcall	.+1278   	; 0x1bcc <__unpack_f>
    16ce:	89 85       	ldd	r24, Y+9	; 0x09
    16d0:	82 30       	cpi	r24, 0x02	; 2
    16d2:	38 f0       	brcs	.+14     	; 0x16e2 <__gesf2+0x4e>
    16d4:	89 89       	ldd	r24, Y+17	; 0x11
    16d6:	82 30       	cpi	r24, 0x02	; 2
    16d8:	20 f0       	brcs	.+8      	; 0x16e2 <__gesf2+0x4e>
    16da:	c8 01       	movw	r24, r16
    16dc:	b7 01       	movw	r22, r14
    16de:	df d2       	rcall	.+1470   	; 0x1c9e <__fpcmp_parts_f>
    16e0:	01 c0       	rjmp	.+2      	; 0x16e4 <__gesf2+0x50>
    16e2:	8f ef       	ldi	r24, 0xFF	; 255
    16e4:	68 96       	adiw	r28, 0x18	; 24
    16e6:	e6 e0       	ldi	r30, 0x06	; 6
    16e8:	a4 c3       	rjmp	.+1864   	; 0x1e32 <__epilogue_restores__+0x18>

000016ea <__ltsf2>:
    16ea:	a8 e1       	ldi	r26, 0x18	; 24
    16ec:	b0 e0       	ldi	r27, 0x00	; 0
    16ee:	ea e7       	ldi	r30, 0x7A	; 122
    16f0:	fb e0       	ldi	r31, 0x0B	; 11
    16f2:	83 c3       	rjmp	.+1798   	; 0x1dfa <__prologue_saves__+0x18>
    16f4:	69 83       	std	Y+1, r22	; 0x01
    16f6:	7a 83       	std	Y+2, r23	; 0x02
    16f8:	8b 83       	std	Y+3, r24	; 0x03
    16fa:	9c 83       	std	Y+4, r25	; 0x04
    16fc:	2d 83       	std	Y+5, r18	; 0x05
    16fe:	3e 83       	std	Y+6, r19	; 0x06
    1700:	4f 83       	std	Y+7, r20	; 0x07
    1702:	58 87       	std	Y+8, r21	; 0x08
    1704:	8e 01       	movw	r16, r28
    1706:	07 5f       	subi	r16, 0xF7	; 247
    1708:	1f 4f       	sbci	r17, 0xFF	; 255
    170a:	ce 01       	movw	r24, r28
    170c:	01 96       	adiw	r24, 0x01	; 1
    170e:	b8 01       	movw	r22, r16
    1710:	5d d2       	rcall	.+1210   	; 0x1bcc <__unpack_f>
    1712:	81 e1       	ldi	r24, 0x11	; 17
    1714:	e8 2e       	mov	r14, r24
    1716:	f1 2c       	mov	r15, r1
    1718:	ec 0e       	add	r14, r28
    171a:	fd 1e       	adc	r15, r29
    171c:	ce 01       	movw	r24, r28
    171e:	05 96       	adiw	r24, 0x05	; 5
    1720:	b7 01       	movw	r22, r14
    1722:	54 d2       	rcall	.+1192   	; 0x1bcc <__unpack_f>
    1724:	89 85       	ldd	r24, Y+9	; 0x09
    1726:	82 30       	cpi	r24, 0x02	; 2
    1728:	38 f0       	brcs	.+14     	; 0x1738 <__ltsf2+0x4e>
    172a:	89 89       	ldd	r24, Y+17	; 0x11
    172c:	82 30       	cpi	r24, 0x02	; 2
    172e:	20 f0       	brcs	.+8      	; 0x1738 <__ltsf2+0x4e>
    1730:	c8 01       	movw	r24, r16
    1732:	b7 01       	movw	r22, r14
    1734:	b4 d2       	rcall	.+1384   	; 0x1c9e <__fpcmp_parts_f>
    1736:	01 c0       	rjmp	.+2      	; 0x173a <__ltsf2+0x50>
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	68 96       	adiw	r28, 0x18	; 24
    173c:	e6 e0       	ldi	r30, 0x06	; 6
    173e:	79 c3       	rjmp	.+1778   	; 0x1e32 <__epilogue_restores__+0x18>

00001740 <__floatsisf>:
    1740:	a8 e0       	ldi	r26, 0x08	; 8
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	e5 ea       	ldi	r30, 0xA5	; 165
    1746:	fb e0       	ldi	r31, 0x0B	; 11
    1748:	58 c3       	rjmp	.+1712   	; 0x1dfa <__prologue_saves__+0x18>
    174a:	7b 01       	movw	r14, r22
    174c:	8c 01       	movw	r16, r24
    174e:	83 e0       	ldi	r24, 0x03	; 3
    1750:	89 83       	std	Y+1, r24	; 0x01
    1752:	d8 01       	movw	r26, r16
    1754:	c7 01       	movw	r24, r14
    1756:	88 27       	eor	r24, r24
    1758:	b7 fd       	sbrc	r27, 7
    175a:	83 95       	inc	r24
    175c:	99 27       	eor	r25, r25
    175e:	aa 27       	eor	r26, r26
    1760:	bb 27       	eor	r27, r27
    1762:	28 2f       	mov	r18, r24
    1764:	8a 83       	std	Y+2, r24	; 0x02
    1766:	e1 14       	cp	r14, r1
    1768:	f1 04       	cpc	r15, r1
    176a:	01 05       	cpc	r16, r1
    176c:	11 05       	cpc	r17, r1
    176e:	19 f4       	brne	.+6      	; 0x1776 <__floatsisf+0x36>
    1770:	82 e0       	ldi	r24, 0x02	; 2
    1772:	89 83       	std	Y+1, r24	; 0x01
    1774:	36 c0       	rjmp	.+108    	; 0x17e2 <__floatsisf+0xa2>
    1776:	8e e1       	ldi	r24, 0x1E	; 30
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	9c 83       	std	Y+4, r25	; 0x04
    177c:	8b 83       	std	Y+3, r24	; 0x03
    177e:	22 23       	and	r18, r18
    1780:	89 f0       	breq	.+34     	; 0x17a4 <__floatsisf+0x64>
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	e8 16       	cp	r14, r24
    1786:	80 e0       	ldi	r24, 0x00	; 0
    1788:	f8 06       	cpc	r15, r24
    178a:	80 e0       	ldi	r24, 0x00	; 0
    178c:	08 07       	cpc	r16, r24
    178e:	80 e8       	ldi	r24, 0x80	; 128
    1790:	18 07       	cpc	r17, r24
    1792:	59 f1       	breq	.+86     	; 0x17ea <__floatsisf+0xaa>
    1794:	10 95       	com	r17
    1796:	00 95       	com	r16
    1798:	f0 94       	com	r15
    179a:	e0 94       	com	r14
    179c:	e1 1c       	adc	r14, r1
    179e:	f1 1c       	adc	r15, r1
    17a0:	01 1d       	adc	r16, r1
    17a2:	11 1d       	adc	r17, r1
    17a4:	ed 82       	std	Y+5, r14	; 0x05
    17a6:	fe 82       	std	Y+6, r15	; 0x06
    17a8:	0f 83       	std	Y+7, r16	; 0x07
    17aa:	18 87       	std	Y+8, r17	; 0x08
    17ac:	c8 01       	movw	r24, r16
    17ae:	b7 01       	movw	r22, r14
    17b0:	e6 d0       	rcall	.+460    	; 0x197e <__clzsi2>
    17b2:	9c 01       	movw	r18, r24
    17b4:	21 50       	subi	r18, 0x01	; 1
    17b6:	30 40       	sbci	r19, 0x00	; 0
    17b8:	12 16       	cp	r1, r18
    17ba:	13 06       	cpc	r1, r19
    17bc:	94 f4       	brge	.+36     	; 0x17e2 <__floatsisf+0xa2>
    17be:	02 2e       	mov	r0, r18
    17c0:	04 c0       	rjmp	.+8      	; 0x17ca <__floatsisf+0x8a>
    17c2:	ee 0c       	add	r14, r14
    17c4:	ff 1c       	adc	r15, r15
    17c6:	00 1f       	adc	r16, r16
    17c8:	11 1f       	adc	r17, r17
    17ca:	0a 94       	dec	r0
    17cc:	d2 f7       	brpl	.-12     	; 0x17c2 <__floatsisf+0x82>
    17ce:	ed 82       	std	Y+5, r14	; 0x05
    17d0:	fe 82       	std	Y+6, r15	; 0x06
    17d2:	0f 83       	std	Y+7, r16	; 0x07
    17d4:	18 87       	std	Y+8, r17	; 0x08
    17d6:	8e e1       	ldi	r24, 0x1E	; 30
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	82 1b       	sub	r24, r18
    17dc:	93 0b       	sbc	r25, r19
    17de:	9c 83       	std	Y+4, r25	; 0x04
    17e0:	8b 83       	std	Y+3, r24	; 0x03
    17e2:	ce 01       	movw	r24, r28
    17e4:	01 96       	adiw	r24, 0x01	; 1
    17e6:	25 d1       	rcall	.+586    	; 0x1a32 <__pack_f>
    17e8:	04 c0       	rjmp	.+8      	; 0x17f2 <__floatsisf+0xb2>
    17ea:	60 e0       	ldi	r22, 0x00	; 0
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	9f ec       	ldi	r25, 0xCF	; 207
    17f2:	28 96       	adiw	r28, 0x08	; 8
    17f4:	e6 e0       	ldi	r30, 0x06	; 6
    17f6:	1d c3       	rjmp	.+1594   	; 0x1e32 <__epilogue_restores__+0x18>

000017f8 <__fixsfsi>:
    17f8:	ac e0       	ldi	r26, 0x0C	; 12
    17fa:	b0 e0       	ldi	r27, 0x00	; 0
    17fc:	e1 e0       	ldi	r30, 0x01	; 1
    17fe:	fc e0       	ldi	r31, 0x0C	; 12
    1800:	00 c3       	rjmp	.+1536   	; 0x1e02 <__prologue_saves__+0x20>
    1802:	69 83       	std	Y+1, r22	; 0x01
    1804:	7a 83       	std	Y+2, r23	; 0x02
    1806:	8b 83       	std	Y+3, r24	; 0x03
    1808:	9c 83       	std	Y+4, r25	; 0x04
    180a:	ce 01       	movw	r24, r28
    180c:	01 96       	adiw	r24, 0x01	; 1
    180e:	be 01       	movw	r22, r28
    1810:	6b 5f       	subi	r22, 0xFB	; 251
    1812:	7f 4f       	sbci	r23, 0xFF	; 255
    1814:	db d1       	rcall	.+950    	; 0x1bcc <__unpack_f>
    1816:	8d 81       	ldd	r24, Y+5	; 0x05
    1818:	82 30       	cpi	r24, 0x02	; 2
    181a:	81 f1       	breq	.+96     	; 0x187c <__fixsfsi+0x84>
    181c:	82 30       	cpi	r24, 0x02	; 2
    181e:	70 f1       	brcs	.+92     	; 0x187c <__fixsfsi+0x84>
    1820:	84 30       	cpi	r24, 0x04	; 4
    1822:	21 f4       	brne	.+8      	; 0x182c <__fixsfsi+0x34>
    1824:	8e 81       	ldd	r24, Y+6	; 0x06
    1826:	88 23       	and	r24, r24
    1828:	69 f1       	breq	.+90     	; 0x1884 <__fixsfsi+0x8c>
    182a:	0a c0       	rjmp	.+20     	; 0x1840 <__fixsfsi+0x48>
    182c:	2f 81       	ldd	r18, Y+7	; 0x07
    182e:	38 85       	ldd	r19, Y+8	; 0x08
    1830:	37 fd       	sbrc	r19, 7
    1832:	24 c0       	rjmp	.+72     	; 0x187c <__fixsfsi+0x84>
    1834:	6e 81       	ldd	r22, Y+6	; 0x06
    1836:	2f 31       	cpi	r18, 0x1F	; 31
    1838:	31 05       	cpc	r19, r1
    183a:	3c f0       	brlt	.+14     	; 0x184a <__fixsfsi+0x52>
    183c:	66 23       	and	r22, r22
    183e:	11 f1       	breq	.+68     	; 0x1884 <__fixsfsi+0x8c>
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	40 e0       	ldi	r20, 0x00	; 0
    1846:	50 e8       	ldi	r21, 0x80	; 128
    1848:	21 c0       	rjmp	.+66     	; 0x188c <__fixsfsi+0x94>
    184a:	8e e1       	ldi	r24, 0x1E	; 30
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	82 1b       	sub	r24, r18
    1850:	93 0b       	sbc	r25, r19
    1852:	29 85       	ldd	r18, Y+9	; 0x09
    1854:	3a 85       	ldd	r19, Y+10	; 0x0a
    1856:	4b 85       	ldd	r20, Y+11	; 0x0b
    1858:	5c 85       	ldd	r21, Y+12	; 0x0c
    185a:	04 c0       	rjmp	.+8      	; 0x1864 <__fixsfsi+0x6c>
    185c:	56 95       	lsr	r21
    185e:	47 95       	ror	r20
    1860:	37 95       	ror	r19
    1862:	27 95       	ror	r18
    1864:	8a 95       	dec	r24
    1866:	d2 f7       	brpl	.-12     	; 0x185c <__fixsfsi+0x64>
    1868:	66 23       	and	r22, r22
    186a:	81 f0       	breq	.+32     	; 0x188c <__fixsfsi+0x94>
    186c:	50 95       	com	r21
    186e:	40 95       	com	r20
    1870:	30 95       	com	r19
    1872:	21 95       	neg	r18
    1874:	3f 4f       	sbci	r19, 0xFF	; 255
    1876:	4f 4f       	sbci	r20, 0xFF	; 255
    1878:	5f 4f       	sbci	r21, 0xFF	; 255
    187a:	08 c0       	rjmp	.+16     	; 0x188c <__fixsfsi+0x94>
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	a9 01       	movw	r20, r18
    1882:	04 c0       	rjmp	.+8      	; 0x188c <__fixsfsi+0x94>
    1884:	2f ef       	ldi	r18, 0xFF	; 255
    1886:	3f ef       	ldi	r19, 0xFF	; 255
    1888:	4f ef       	ldi	r20, 0xFF	; 255
    188a:	5f e7       	ldi	r21, 0x7F	; 127
    188c:	b9 01       	movw	r22, r18
    188e:	ca 01       	movw	r24, r20
    1890:	2c 96       	adiw	r28, 0x0c	; 12
    1892:	e2 e0       	ldi	r30, 0x02	; 2
    1894:	d2 c2       	rjmp	.+1444   	; 0x1e3a <__epilogue_restores__+0x20>

00001896 <__floatunsisf>:
    1896:	a8 e0       	ldi	r26, 0x08	; 8
    1898:	b0 e0       	ldi	r27, 0x00	; 0
    189a:	e0 e5       	ldi	r30, 0x50	; 80
    189c:	fc e0       	ldi	r31, 0x0C	; 12
    189e:	ab c2       	rjmp	.+1366   	; 0x1df6 <__prologue_saves__+0x14>
    18a0:	7b 01       	movw	r14, r22
    18a2:	8c 01       	movw	r16, r24
    18a4:	1a 82       	std	Y+2, r1	; 0x02
    18a6:	61 15       	cp	r22, r1
    18a8:	71 05       	cpc	r23, r1
    18aa:	81 05       	cpc	r24, r1
    18ac:	91 05       	cpc	r25, r1
    18ae:	19 f4       	brne	.+6      	; 0x18b6 <__floatunsisf+0x20>
    18b0:	82 e0       	ldi	r24, 0x02	; 2
    18b2:	89 83       	std	Y+1, r24	; 0x01
    18b4:	5e c0       	rjmp	.+188    	; 0x1972 <__floatunsisf+0xdc>
    18b6:	83 e0       	ldi	r24, 0x03	; 3
    18b8:	89 83       	std	Y+1, r24	; 0x01
    18ba:	8e e1       	ldi	r24, 0x1E	; 30
    18bc:	c8 2e       	mov	r12, r24
    18be:	d1 2c       	mov	r13, r1
    18c0:	dc 82       	std	Y+4, r13	; 0x04
    18c2:	cb 82       	std	Y+3, r12	; 0x03
    18c4:	ed 82       	std	Y+5, r14	; 0x05
    18c6:	fe 82       	std	Y+6, r15	; 0x06
    18c8:	0f 83       	std	Y+7, r16	; 0x07
    18ca:	18 87       	std	Y+8, r17	; 0x08
    18cc:	c8 01       	movw	r24, r16
    18ce:	b7 01       	movw	r22, r14
    18d0:	56 d0       	rcall	.+172    	; 0x197e <__clzsi2>
    18d2:	fc 01       	movw	r30, r24
    18d4:	31 97       	sbiw	r30, 0x01	; 1
    18d6:	f7 ff       	sbrs	r31, 7
    18d8:	3a c0       	rjmp	.+116    	; 0x194e <__floatunsisf+0xb8>
    18da:	aa 27       	eor	r26, r26
    18dc:	bb 27       	eor	r27, r27
    18de:	ae 1b       	sub	r26, r30
    18e0:	bf 0b       	sbc	r27, r31
    18e2:	21 e0       	ldi	r18, 0x01	; 1
    18e4:	30 e0       	ldi	r19, 0x00	; 0
    18e6:	40 e0       	ldi	r20, 0x00	; 0
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	0a 2e       	mov	r0, r26
    18ec:	04 c0       	rjmp	.+8      	; 0x18f6 <__floatunsisf+0x60>
    18ee:	22 0f       	add	r18, r18
    18f0:	33 1f       	adc	r19, r19
    18f2:	44 1f       	adc	r20, r20
    18f4:	55 1f       	adc	r21, r21
    18f6:	0a 94       	dec	r0
    18f8:	d2 f7       	brpl	.-12     	; 0x18ee <__floatunsisf+0x58>
    18fa:	21 50       	subi	r18, 0x01	; 1
    18fc:	30 40       	sbci	r19, 0x00	; 0
    18fe:	40 40       	sbci	r20, 0x00	; 0
    1900:	50 40       	sbci	r21, 0x00	; 0
    1902:	2e 21       	and	r18, r14
    1904:	3f 21       	and	r19, r15
    1906:	40 23       	and	r20, r16
    1908:	51 23       	and	r21, r17
    190a:	61 e0       	ldi	r22, 0x01	; 1
    190c:	70 e0       	ldi	r23, 0x00	; 0
    190e:	80 e0       	ldi	r24, 0x00	; 0
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	21 15       	cp	r18, r1
    1914:	31 05       	cpc	r19, r1
    1916:	41 05       	cpc	r20, r1
    1918:	51 05       	cpc	r21, r1
    191a:	19 f4       	brne	.+6      	; 0x1922 <__floatunsisf+0x8c>
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	70 e0       	ldi	r23, 0x00	; 0
    1920:	cb 01       	movw	r24, r22
    1922:	04 c0       	rjmp	.+8      	; 0x192c <__floatunsisf+0x96>
    1924:	16 95       	lsr	r17
    1926:	07 95       	ror	r16
    1928:	f7 94       	ror	r15
    192a:	e7 94       	ror	r14
    192c:	aa 95       	dec	r26
    192e:	d2 f7       	brpl	.-12     	; 0x1924 <__floatunsisf+0x8e>
    1930:	e6 2a       	or	r14, r22
    1932:	f7 2a       	or	r15, r23
    1934:	08 2b       	or	r16, r24
    1936:	19 2b       	or	r17, r25
    1938:	ed 82       	std	Y+5, r14	; 0x05
    193a:	fe 82       	std	Y+6, r15	; 0x06
    193c:	0f 83       	std	Y+7, r16	; 0x07
    193e:	18 87       	std	Y+8, r17	; 0x08
    1940:	8e e1       	ldi	r24, 0x1E	; 30
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	8e 1b       	sub	r24, r30
    1946:	9f 0b       	sbc	r25, r31
    1948:	9c 83       	std	Y+4, r25	; 0x04
    194a:	8b 83       	std	Y+3, r24	; 0x03
    194c:	12 c0       	rjmp	.+36     	; 0x1972 <__floatunsisf+0xdc>
    194e:	30 97       	sbiw	r30, 0x00	; 0
    1950:	81 f0       	breq	.+32     	; 0x1972 <__floatunsisf+0xdc>
    1952:	0e 2e       	mov	r0, r30
    1954:	04 c0       	rjmp	.+8      	; 0x195e <__floatunsisf+0xc8>
    1956:	ee 0c       	add	r14, r14
    1958:	ff 1c       	adc	r15, r15
    195a:	00 1f       	adc	r16, r16
    195c:	11 1f       	adc	r17, r17
    195e:	0a 94       	dec	r0
    1960:	d2 f7       	brpl	.-12     	; 0x1956 <__floatunsisf+0xc0>
    1962:	ed 82       	std	Y+5, r14	; 0x05
    1964:	fe 82       	std	Y+6, r15	; 0x06
    1966:	0f 83       	std	Y+7, r16	; 0x07
    1968:	18 87       	std	Y+8, r17	; 0x08
    196a:	ce 1a       	sub	r12, r30
    196c:	df 0a       	sbc	r13, r31
    196e:	dc 82       	std	Y+4, r13	; 0x04
    1970:	cb 82       	std	Y+3, r12	; 0x03
    1972:	ce 01       	movw	r24, r28
    1974:	01 96       	adiw	r24, 0x01	; 1
    1976:	5d d0       	rcall	.+186    	; 0x1a32 <__pack_f>
    1978:	28 96       	adiw	r28, 0x08	; 8
    197a:	e8 e0       	ldi	r30, 0x08	; 8
    197c:	58 c2       	rjmp	.+1200   	; 0x1e2e <__epilogue_restores__+0x14>

0000197e <__clzsi2>:
    197e:	af 92       	push	r10
    1980:	bf 92       	push	r11
    1982:	cf 92       	push	r12
    1984:	df 92       	push	r13
    1986:	ef 92       	push	r14
    1988:	ff 92       	push	r15
    198a:	0f 93       	push	r16
    198c:	1f 93       	push	r17
    198e:	7b 01       	movw	r14, r22
    1990:	8c 01       	movw	r16, r24
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	e8 16       	cp	r14, r24
    1996:	80 e0       	ldi	r24, 0x00	; 0
    1998:	f8 06       	cpc	r15, r24
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	08 07       	cpc	r16, r24
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	18 07       	cpc	r17, r24
    19a2:	58 f4       	brcc	.+22     	; 0x19ba <__clzsi2+0x3c>
    19a4:	ef ef       	ldi	r30, 0xFF	; 255
    19a6:	ee 16       	cp	r14, r30
    19a8:	f1 04       	cpc	r15, r1
    19aa:	01 05       	cpc	r16, r1
    19ac:	11 05       	cpc	r17, r1
    19ae:	09 f0       	breq	.+2      	; 0x19b2 <__clzsi2+0x34>
    19b0:	90 f4       	brcc	.+36     	; 0x19d6 <__clzsi2+0x58>
    19b2:	80 e0       	ldi	r24, 0x00	; 0
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	dc 01       	movw	r26, r24
    19b8:	17 c0       	rjmp	.+46     	; 0x19e8 <__clzsi2+0x6a>
    19ba:	f0 e0       	ldi	r31, 0x00	; 0
    19bc:	ef 16       	cp	r14, r31
    19be:	f0 e0       	ldi	r31, 0x00	; 0
    19c0:	ff 06       	cpc	r15, r31
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	0f 07       	cpc	r16, r31
    19c6:	f1 e0       	ldi	r31, 0x01	; 1
    19c8:	1f 07       	cpc	r17, r31
    19ca:	50 f4       	brcc	.+20     	; 0x19e0 <__clzsi2+0x62>
    19cc:	80 e1       	ldi	r24, 0x10	; 16
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	a0 e0       	ldi	r26, 0x00	; 0
    19d2:	b0 e0       	ldi	r27, 0x00	; 0
    19d4:	09 c0       	rjmp	.+18     	; 0x19e8 <__clzsi2+0x6a>
    19d6:	88 e0       	ldi	r24, 0x08	; 8
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	a0 e0       	ldi	r26, 0x00	; 0
    19dc:	b0 e0       	ldi	r27, 0x00	; 0
    19de:	04 c0       	rjmp	.+8      	; 0x19e8 <__clzsi2+0x6a>
    19e0:	88 e1       	ldi	r24, 0x18	; 24
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	a0 e0       	ldi	r26, 0x00	; 0
    19e6:	b0 e0       	ldi	r27, 0x00	; 0
    19e8:	20 e2       	ldi	r18, 0x20	; 32
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	40 e0       	ldi	r20, 0x00	; 0
    19ee:	50 e0       	ldi	r21, 0x00	; 0
    19f0:	28 1b       	sub	r18, r24
    19f2:	39 0b       	sbc	r19, r25
    19f4:	4a 0b       	sbc	r20, r26
    19f6:	5b 0b       	sbc	r21, r27
    19f8:	57 01       	movw	r10, r14
    19fa:	68 01       	movw	r12, r16
    19fc:	04 c0       	rjmp	.+8      	; 0x1a06 <__clzsi2+0x88>
    19fe:	d6 94       	lsr	r13
    1a00:	c7 94       	ror	r12
    1a02:	b7 94       	ror	r11
    1a04:	a7 94       	ror	r10
    1a06:	8a 95       	dec	r24
    1a08:	d2 f7       	brpl	.-12     	; 0x19fe <__clzsi2+0x80>
    1a0a:	d6 01       	movw	r26, r12
    1a0c:	c5 01       	movw	r24, r10
    1a0e:	8c 57       	subi	r24, 0x7C	; 124
    1a10:	9f 4f       	sbci	r25, 0xFF	; 255
    1a12:	fc 01       	movw	r30, r24
    1a14:	80 81       	ld	r24, Z
    1a16:	28 1b       	sub	r18, r24
    1a18:	31 09       	sbc	r19, r1
    1a1a:	41 09       	sbc	r20, r1
    1a1c:	51 09       	sbc	r21, r1
    1a1e:	c9 01       	movw	r24, r18
    1a20:	1f 91       	pop	r17
    1a22:	0f 91       	pop	r16
    1a24:	ff 90       	pop	r15
    1a26:	ef 90       	pop	r14
    1a28:	df 90       	pop	r13
    1a2a:	cf 90       	pop	r12
    1a2c:	bf 90       	pop	r11
    1a2e:	af 90       	pop	r10
    1a30:	08 95       	ret

00001a32 <__pack_f>:
    1a32:	ef 92       	push	r14
    1a34:	ff 92       	push	r15
    1a36:	0f 93       	push	r16
    1a38:	1f 93       	push	r17
    1a3a:	cf 93       	push	r28
    1a3c:	df 93       	push	r29
    1a3e:	fc 01       	movw	r30, r24
    1a40:	24 81       	ldd	r18, Z+4	; 0x04
    1a42:	35 81       	ldd	r19, Z+5	; 0x05
    1a44:	46 81       	ldd	r20, Z+6	; 0x06
    1a46:	57 81       	ldd	r21, Z+7	; 0x07
    1a48:	61 81       	ldd	r22, Z+1	; 0x01
    1a4a:	80 81       	ld	r24, Z
    1a4c:	82 30       	cpi	r24, 0x02	; 2
    1a4e:	20 f4       	brcc	.+8      	; 0x1a58 <__pack_f+0x26>
    1a50:	40 61       	ori	r20, 0x10	; 16
    1a52:	ef ef       	ldi	r30, 0xFF	; 255
    1a54:	f0 e0       	ldi	r31, 0x00	; 0
    1a56:	a3 c0       	rjmp	.+326    	; 0x1b9e <__pack_f+0x16c>
    1a58:	84 30       	cpi	r24, 0x04	; 4
    1a5a:	09 f4       	brne	.+2      	; 0x1a5e <__pack_f+0x2c>
    1a5c:	9b c0       	rjmp	.+310    	; 0x1b94 <__pack_f+0x162>
    1a5e:	82 30       	cpi	r24, 0x02	; 2
    1a60:	09 f4       	brne	.+2      	; 0x1a64 <__pack_f+0x32>
    1a62:	92 c0       	rjmp	.+292    	; 0x1b88 <__pack_f+0x156>
    1a64:	21 15       	cp	r18, r1
    1a66:	31 05       	cpc	r19, r1
    1a68:	41 05       	cpc	r20, r1
    1a6a:	51 05       	cpc	r21, r1
    1a6c:	09 f4       	brne	.+2      	; 0x1a70 <__pack_f+0x3e>
    1a6e:	8f c0       	rjmp	.+286    	; 0x1b8e <__pack_f+0x15c>
    1a70:	02 80       	ldd	r0, Z+2	; 0x02
    1a72:	f3 81       	ldd	r31, Z+3	; 0x03
    1a74:	e0 2d       	mov	r30, r0
    1a76:	8f ef       	ldi	r24, 0xFF	; 255
    1a78:	e2 38       	cpi	r30, 0x82	; 130
    1a7a:	f8 07       	cpc	r31, r24
    1a7c:	0c f0       	brlt	.+2      	; 0x1a80 <__pack_f+0x4e>
    1a7e:	5a c0       	rjmp	.+180    	; 0x1b34 <__pack_f+0x102>
    1a80:	c2 e8       	ldi	r28, 0x82	; 130
    1a82:	df ef       	ldi	r29, 0xFF	; 255
    1a84:	ce 1b       	sub	r28, r30
    1a86:	df 0b       	sbc	r29, r31
    1a88:	ca 31       	cpi	r28, 0x1A	; 26
    1a8a:	d1 05       	cpc	r29, r1
    1a8c:	6c f5       	brge	.+90     	; 0x1ae8 <__pack_f+0xb6>
    1a8e:	79 01       	movw	r14, r18
    1a90:	8a 01       	movw	r16, r20
    1a92:	0c 2e       	mov	r0, r28
    1a94:	04 c0       	rjmp	.+8      	; 0x1a9e <__pack_f+0x6c>
    1a96:	16 95       	lsr	r17
    1a98:	07 95       	ror	r16
    1a9a:	f7 94       	ror	r15
    1a9c:	e7 94       	ror	r14
    1a9e:	0a 94       	dec	r0
    1aa0:	d2 f7       	brpl	.-12     	; 0x1a96 <__pack_f+0x64>
    1aa2:	81 e0       	ldi	r24, 0x01	; 1
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	a0 e0       	ldi	r26, 0x00	; 0
    1aa8:	b0 e0       	ldi	r27, 0x00	; 0
    1aaa:	0c 2e       	mov	r0, r28
    1aac:	04 c0       	rjmp	.+8      	; 0x1ab6 <__pack_f+0x84>
    1aae:	88 0f       	add	r24, r24
    1ab0:	99 1f       	adc	r25, r25
    1ab2:	aa 1f       	adc	r26, r26
    1ab4:	bb 1f       	adc	r27, r27
    1ab6:	0a 94       	dec	r0
    1ab8:	d2 f7       	brpl	.-12     	; 0x1aae <__pack_f+0x7c>
    1aba:	01 97       	sbiw	r24, 0x01	; 1
    1abc:	a1 09       	sbc	r26, r1
    1abe:	b1 09       	sbc	r27, r1
    1ac0:	82 23       	and	r24, r18
    1ac2:	93 23       	and	r25, r19
    1ac4:	a4 23       	and	r26, r20
    1ac6:	b5 23       	and	r27, r21
    1ac8:	21 e0       	ldi	r18, 0x01	; 1
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	40 e0       	ldi	r20, 0x00	; 0
    1ace:	50 e0       	ldi	r21, 0x00	; 0
    1ad0:	00 97       	sbiw	r24, 0x00	; 0
    1ad2:	a1 05       	cpc	r26, r1
    1ad4:	b1 05       	cpc	r27, r1
    1ad6:	19 f4       	brne	.+6      	; 0x1ade <__pack_f+0xac>
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	a9 01       	movw	r20, r18
    1ade:	2e 29       	or	r18, r14
    1ae0:	3f 29       	or	r19, r15
    1ae2:	40 2b       	or	r20, r16
    1ae4:	51 2b       	or	r21, r17
    1ae6:	03 c0       	rjmp	.+6      	; 0x1aee <__pack_f+0xbc>
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	a9 01       	movw	r20, r18
    1aee:	da 01       	movw	r26, r20
    1af0:	c9 01       	movw	r24, r18
    1af2:	8f 77       	andi	r24, 0x7F	; 127
    1af4:	90 70       	andi	r25, 0x00	; 0
    1af6:	a0 70       	andi	r26, 0x00	; 0
    1af8:	b0 70       	andi	r27, 0x00	; 0
    1afa:	80 34       	cpi	r24, 0x40	; 64
    1afc:	91 05       	cpc	r25, r1
    1afe:	a1 05       	cpc	r26, r1
    1b00:	b1 05       	cpc	r27, r1
    1b02:	39 f4       	brne	.+14     	; 0x1b12 <__pack_f+0xe0>
    1b04:	27 ff       	sbrs	r18, 7
    1b06:	09 c0       	rjmp	.+18     	; 0x1b1a <__pack_f+0xe8>
    1b08:	20 5c       	subi	r18, 0xC0	; 192
    1b0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b0c:	4f 4f       	sbci	r20, 0xFF	; 255
    1b0e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b10:	04 c0       	rjmp	.+8      	; 0x1b1a <__pack_f+0xe8>
    1b12:	21 5c       	subi	r18, 0xC1	; 193
    1b14:	3f 4f       	sbci	r19, 0xFF	; 255
    1b16:	4f 4f       	sbci	r20, 0xFF	; 255
    1b18:	5f 4f       	sbci	r21, 0xFF	; 255
    1b1a:	e1 e0       	ldi	r30, 0x01	; 1
    1b1c:	f0 e0       	ldi	r31, 0x00	; 0
    1b1e:	20 30       	cpi	r18, 0x00	; 0
    1b20:	80 e0       	ldi	r24, 0x00	; 0
    1b22:	38 07       	cpc	r19, r24
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	48 07       	cpc	r20, r24
    1b28:	80 e4       	ldi	r24, 0x40	; 64
    1b2a:	58 07       	cpc	r21, r24
    1b2c:	28 f5       	brcc	.+74     	; 0x1b78 <__pack_f+0x146>
    1b2e:	e0 e0       	ldi	r30, 0x00	; 0
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	22 c0       	rjmp	.+68     	; 0x1b78 <__pack_f+0x146>
    1b34:	e0 38       	cpi	r30, 0x80	; 128
    1b36:	f1 05       	cpc	r31, r1
    1b38:	6c f5       	brge	.+90     	; 0x1b94 <__pack_f+0x162>
    1b3a:	e1 58       	subi	r30, 0x81	; 129
    1b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3e:	da 01       	movw	r26, r20
    1b40:	c9 01       	movw	r24, r18
    1b42:	8f 77       	andi	r24, 0x7F	; 127
    1b44:	90 70       	andi	r25, 0x00	; 0
    1b46:	a0 70       	andi	r26, 0x00	; 0
    1b48:	b0 70       	andi	r27, 0x00	; 0
    1b4a:	80 34       	cpi	r24, 0x40	; 64
    1b4c:	91 05       	cpc	r25, r1
    1b4e:	a1 05       	cpc	r26, r1
    1b50:	b1 05       	cpc	r27, r1
    1b52:	39 f4       	brne	.+14     	; 0x1b62 <__pack_f+0x130>
    1b54:	27 ff       	sbrs	r18, 7
    1b56:	09 c0       	rjmp	.+18     	; 0x1b6a <__pack_f+0x138>
    1b58:	20 5c       	subi	r18, 0xC0	; 192
    1b5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b5c:	4f 4f       	sbci	r20, 0xFF	; 255
    1b5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b60:	04 c0       	rjmp	.+8      	; 0x1b6a <__pack_f+0x138>
    1b62:	21 5c       	subi	r18, 0xC1	; 193
    1b64:	3f 4f       	sbci	r19, 0xFF	; 255
    1b66:	4f 4f       	sbci	r20, 0xFF	; 255
    1b68:	5f 4f       	sbci	r21, 0xFF	; 255
    1b6a:	57 ff       	sbrs	r21, 7
    1b6c:	05 c0       	rjmp	.+10     	; 0x1b78 <__pack_f+0x146>
    1b6e:	56 95       	lsr	r21
    1b70:	47 95       	ror	r20
    1b72:	37 95       	ror	r19
    1b74:	27 95       	ror	r18
    1b76:	31 96       	adiw	r30, 0x01	; 1
    1b78:	87 e0       	ldi	r24, 0x07	; 7
    1b7a:	56 95       	lsr	r21
    1b7c:	47 95       	ror	r20
    1b7e:	37 95       	ror	r19
    1b80:	27 95       	ror	r18
    1b82:	8a 95       	dec	r24
    1b84:	d1 f7       	brne	.-12     	; 0x1b7a <__pack_f+0x148>
    1b86:	0b c0       	rjmp	.+22     	; 0x1b9e <__pack_f+0x16c>
    1b88:	e0 e0       	ldi	r30, 0x00	; 0
    1b8a:	f0 e0       	ldi	r31, 0x00	; 0
    1b8c:	05 c0       	rjmp	.+10     	; 0x1b98 <__pack_f+0x166>
    1b8e:	e0 e0       	ldi	r30, 0x00	; 0
    1b90:	f0 e0       	ldi	r31, 0x00	; 0
    1b92:	05 c0       	rjmp	.+10     	; 0x1b9e <__pack_f+0x16c>
    1b94:	ef ef       	ldi	r30, 0xFF	; 255
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	a9 01       	movw	r20, r18
    1b9e:	8e 2f       	mov	r24, r30
    1ba0:	87 95       	ror	r24
    1ba2:	88 27       	eor	r24, r24
    1ba4:	87 95       	ror	r24
    1ba6:	94 2f       	mov	r25, r20
    1ba8:	9f 77       	andi	r25, 0x7F	; 127
    1baa:	67 95       	ror	r22
    1bac:	66 27       	eor	r22, r22
    1bae:	67 95       	ror	r22
    1bb0:	e6 95       	lsr	r30
    1bb2:	e2 2e       	mov	r14, r18
    1bb4:	a9 2f       	mov	r26, r25
    1bb6:	a8 2b       	or	r26, r24
    1bb8:	fe 2f       	mov	r31, r30
    1bba:	f6 2b       	or	r31, r22
    1bbc:	62 2f       	mov	r22, r18
    1bbe:	73 2f       	mov	r23, r19
    1bc0:	8a 2f       	mov	r24, r26
    1bc2:	9f 2f       	mov	r25, r31
    1bc4:	cd b7       	in	r28, 0x3d	; 61
    1bc6:	de b7       	in	r29, 0x3e	; 62
    1bc8:	e6 e0       	ldi	r30, 0x06	; 6
    1bca:	33 c1       	rjmp	.+614    	; 0x1e32 <__epilogue_restores__+0x18>

00001bcc <__unpack_f>:
    1bcc:	dc 01       	movw	r26, r24
    1bce:	fb 01       	movw	r30, r22
    1bd0:	2c 91       	ld	r18, X
    1bd2:	11 96       	adiw	r26, 0x01	; 1
    1bd4:	3c 91       	ld	r19, X
    1bd6:	11 97       	sbiw	r26, 0x01	; 1
    1bd8:	12 96       	adiw	r26, 0x02	; 2
    1bda:	8c 91       	ld	r24, X
    1bdc:	12 97       	sbiw	r26, 0x02	; 2
    1bde:	48 2f       	mov	r20, r24
    1be0:	4f 77       	andi	r20, 0x7F	; 127
    1be2:	50 e0       	ldi	r21, 0x00	; 0
    1be4:	98 2f       	mov	r25, r24
    1be6:	99 1f       	adc	r25, r25
    1be8:	99 27       	eor	r25, r25
    1bea:	99 1f       	adc	r25, r25
    1bec:	13 96       	adiw	r26, 0x03	; 3
    1bee:	6c 91       	ld	r22, X
    1bf0:	13 97       	sbiw	r26, 0x03	; 3
    1bf2:	86 2f       	mov	r24, r22
    1bf4:	88 0f       	add	r24, r24
    1bf6:	89 2b       	or	r24, r25
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	66 1f       	adc	r22, r22
    1bfc:	66 27       	eor	r22, r22
    1bfe:	66 1f       	adc	r22, r22
    1c00:	61 83       	std	Z+1, r22	; 0x01
    1c02:	00 97       	sbiw	r24, 0x00	; 0
    1c04:	39 f5       	brne	.+78     	; 0x1c54 <__unpack_f+0x88>
    1c06:	21 15       	cp	r18, r1
    1c08:	31 05       	cpc	r19, r1
    1c0a:	41 05       	cpc	r20, r1
    1c0c:	51 05       	cpc	r21, r1
    1c0e:	11 f4       	brne	.+4      	; 0x1c14 <__unpack_f+0x48>
    1c10:	82 e0       	ldi	r24, 0x02	; 2
    1c12:	29 c0       	rjmp	.+82     	; 0x1c66 <__unpack_f+0x9a>
    1c14:	82 e8       	ldi	r24, 0x82	; 130
    1c16:	9f ef       	ldi	r25, 0xFF	; 255
    1c18:	93 83       	std	Z+3, r25	; 0x03
    1c1a:	82 83       	std	Z+2, r24	; 0x02
    1c1c:	67 e0       	ldi	r22, 0x07	; 7
    1c1e:	22 0f       	add	r18, r18
    1c20:	33 1f       	adc	r19, r19
    1c22:	44 1f       	adc	r20, r20
    1c24:	55 1f       	adc	r21, r21
    1c26:	6a 95       	dec	r22
    1c28:	d1 f7       	brne	.-12     	; 0x1c1e <__unpack_f+0x52>
    1c2a:	83 e0       	ldi	r24, 0x03	; 3
    1c2c:	80 83       	st	Z, r24
    1c2e:	09 c0       	rjmp	.+18     	; 0x1c42 <__unpack_f+0x76>
    1c30:	22 0f       	add	r18, r18
    1c32:	33 1f       	adc	r19, r19
    1c34:	44 1f       	adc	r20, r20
    1c36:	55 1f       	adc	r21, r21
    1c38:	82 81       	ldd	r24, Z+2	; 0x02
    1c3a:	93 81       	ldd	r25, Z+3	; 0x03
    1c3c:	01 97       	sbiw	r24, 0x01	; 1
    1c3e:	93 83       	std	Z+3, r25	; 0x03
    1c40:	82 83       	std	Z+2, r24	; 0x02
    1c42:	20 30       	cpi	r18, 0x00	; 0
    1c44:	80 e0       	ldi	r24, 0x00	; 0
    1c46:	38 07       	cpc	r19, r24
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	48 07       	cpc	r20, r24
    1c4c:	80 e4       	ldi	r24, 0x40	; 64
    1c4e:	58 07       	cpc	r21, r24
    1c50:	78 f3       	brcs	.-34     	; 0x1c30 <__unpack_f+0x64>
    1c52:	20 c0       	rjmp	.+64     	; 0x1c94 <__unpack_f+0xc8>
    1c54:	8f 3f       	cpi	r24, 0xFF	; 255
    1c56:	91 05       	cpc	r25, r1
    1c58:	79 f4       	brne	.+30     	; 0x1c78 <__unpack_f+0xac>
    1c5a:	21 15       	cp	r18, r1
    1c5c:	31 05       	cpc	r19, r1
    1c5e:	41 05       	cpc	r20, r1
    1c60:	51 05       	cpc	r21, r1
    1c62:	19 f4       	brne	.+6      	; 0x1c6a <__unpack_f+0x9e>
    1c64:	84 e0       	ldi	r24, 0x04	; 4
    1c66:	80 83       	st	Z, r24
    1c68:	08 95       	ret
    1c6a:	44 ff       	sbrs	r20, 4
    1c6c:	03 c0       	rjmp	.+6      	; 0x1c74 <__unpack_f+0xa8>
    1c6e:	81 e0       	ldi	r24, 0x01	; 1
    1c70:	80 83       	st	Z, r24
    1c72:	10 c0       	rjmp	.+32     	; 0x1c94 <__unpack_f+0xc8>
    1c74:	10 82       	st	Z, r1
    1c76:	0e c0       	rjmp	.+28     	; 0x1c94 <__unpack_f+0xc8>
    1c78:	8f 57       	subi	r24, 0x7F	; 127
    1c7a:	90 40       	sbci	r25, 0x00	; 0
    1c7c:	93 83       	std	Z+3, r25	; 0x03
    1c7e:	82 83       	std	Z+2, r24	; 0x02
    1c80:	83 e0       	ldi	r24, 0x03	; 3
    1c82:	80 83       	st	Z, r24
    1c84:	87 e0       	ldi	r24, 0x07	; 7
    1c86:	22 0f       	add	r18, r18
    1c88:	33 1f       	adc	r19, r19
    1c8a:	44 1f       	adc	r20, r20
    1c8c:	55 1f       	adc	r21, r21
    1c8e:	8a 95       	dec	r24
    1c90:	d1 f7       	brne	.-12     	; 0x1c86 <__unpack_f+0xba>
    1c92:	50 64       	ori	r21, 0x40	; 64
    1c94:	24 83       	std	Z+4, r18	; 0x04
    1c96:	35 83       	std	Z+5, r19	; 0x05
    1c98:	46 83       	std	Z+6, r20	; 0x06
    1c9a:	57 83       	std	Z+7, r21	; 0x07
    1c9c:	08 95       	ret

00001c9e <__fpcmp_parts_f>:
    1c9e:	fc 01       	movw	r30, r24
    1ca0:	db 01       	movw	r26, r22
    1ca2:	90 81       	ld	r25, Z
    1ca4:	92 30       	cpi	r25, 0x02	; 2
    1ca6:	08 f4       	brcc	.+2      	; 0x1caa <__fpcmp_parts_f+0xc>
    1ca8:	49 c0       	rjmp	.+146    	; 0x1d3c <__fpcmp_parts_f+0x9e>
    1caa:	8c 91       	ld	r24, X
    1cac:	82 30       	cpi	r24, 0x02	; 2
    1cae:	08 f4       	brcc	.+2      	; 0x1cb2 <__fpcmp_parts_f+0x14>
    1cb0:	45 c0       	rjmp	.+138    	; 0x1d3c <__fpcmp_parts_f+0x9e>
    1cb2:	94 30       	cpi	r25, 0x04	; 4
    1cb4:	51 f4       	brne	.+20     	; 0x1cca <__fpcmp_parts_f+0x2c>
    1cb6:	61 81       	ldd	r22, Z+1	; 0x01
    1cb8:	84 30       	cpi	r24, 0x04	; 4
    1cba:	b1 f5       	brne	.+108    	; 0x1d28 <__fpcmp_parts_f+0x8a>
    1cbc:	11 96       	adiw	r26, 0x01	; 1
    1cbe:	2c 91       	ld	r18, X
    1cc0:	11 97       	sbiw	r26, 0x01	; 1
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	26 1b       	sub	r18, r22
    1cc6:	31 09       	sbc	r19, r1
    1cc8:	41 c0       	rjmp	.+130    	; 0x1d4c <__fpcmp_parts_f+0xae>
    1cca:	84 30       	cpi	r24, 0x04	; 4
    1ccc:	21 f0       	breq	.+8      	; 0x1cd6 <__fpcmp_parts_f+0x38>
    1cce:	92 30       	cpi	r25, 0x02	; 2
    1cd0:	41 f4       	brne	.+16     	; 0x1ce2 <__fpcmp_parts_f+0x44>
    1cd2:	82 30       	cpi	r24, 0x02	; 2
    1cd4:	b1 f1       	breq	.+108    	; 0x1d42 <__fpcmp_parts_f+0xa4>
    1cd6:	11 96       	adiw	r26, 0x01	; 1
    1cd8:	8c 91       	ld	r24, X
    1cda:	11 97       	sbiw	r26, 0x01	; 1
    1cdc:	88 23       	and	r24, r24
    1cde:	a1 f1       	breq	.+104    	; 0x1d48 <__fpcmp_parts_f+0xaa>
    1ce0:	2d c0       	rjmp	.+90     	; 0x1d3c <__fpcmp_parts_f+0x9e>
    1ce2:	61 81       	ldd	r22, Z+1	; 0x01
    1ce4:	82 30       	cpi	r24, 0x02	; 2
    1ce6:	01 f1       	breq	.+64     	; 0x1d28 <__fpcmp_parts_f+0x8a>
    1ce8:	11 96       	adiw	r26, 0x01	; 1
    1cea:	8c 91       	ld	r24, X
    1cec:	11 97       	sbiw	r26, 0x01	; 1
    1cee:	68 17       	cp	r22, r24
    1cf0:	d9 f4       	brne	.+54     	; 0x1d28 <__fpcmp_parts_f+0x8a>
    1cf2:	22 81       	ldd	r18, Z+2	; 0x02
    1cf4:	33 81       	ldd	r19, Z+3	; 0x03
    1cf6:	12 96       	adiw	r26, 0x02	; 2
    1cf8:	8d 91       	ld	r24, X+
    1cfa:	9c 91       	ld	r25, X
    1cfc:	13 97       	sbiw	r26, 0x03	; 3
    1cfe:	82 17       	cp	r24, r18
    1d00:	93 07       	cpc	r25, r19
    1d02:	94 f0       	brlt	.+36     	; 0x1d28 <__fpcmp_parts_f+0x8a>
    1d04:	28 17       	cp	r18, r24
    1d06:	39 07       	cpc	r19, r25
    1d08:	bc f0       	brlt	.+46     	; 0x1d38 <__fpcmp_parts_f+0x9a>
    1d0a:	24 81       	ldd	r18, Z+4	; 0x04
    1d0c:	35 81       	ldd	r19, Z+5	; 0x05
    1d0e:	46 81       	ldd	r20, Z+6	; 0x06
    1d10:	57 81       	ldd	r21, Z+7	; 0x07
    1d12:	14 96       	adiw	r26, 0x04	; 4
    1d14:	8d 91       	ld	r24, X+
    1d16:	9d 91       	ld	r25, X+
    1d18:	0d 90       	ld	r0, X+
    1d1a:	bc 91       	ld	r27, X
    1d1c:	a0 2d       	mov	r26, r0
    1d1e:	82 17       	cp	r24, r18
    1d20:	93 07       	cpc	r25, r19
    1d22:	a4 07       	cpc	r26, r20
    1d24:	b5 07       	cpc	r27, r21
    1d26:	18 f4       	brcc	.+6      	; 0x1d2e <__fpcmp_parts_f+0x90>
    1d28:	66 23       	and	r22, r22
    1d2a:	41 f0       	breq	.+16     	; 0x1d3c <__fpcmp_parts_f+0x9e>
    1d2c:	0d c0       	rjmp	.+26     	; 0x1d48 <__fpcmp_parts_f+0xaa>
    1d2e:	28 17       	cp	r18, r24
    1d30:	39 07       	cpc	r19, r25
    1d32:	4a 07       	cpc	r20, r26
    1d34:	5b 07       	cpc	r21, r27
    1d36:	28 f4       	brcc	.+10     	; 0x1d42 <__fpcmp_parts_f+0xa4>
    1d38:	66 23       	and	r22, r22
    1d3a:	31 f0       	breq	.+12     	; 0x1d48 <__fpcmp_parts_f+0xaa>
    1d3c:	21 e0       	ldi	r18, 0x01	; 1
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	05 c0       	rjmp	.+10     	; 0x1d4c <__fpcmp_parts_f+0xae>
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	02 c0       	rjmp	.+4      	; 0x1d4c <__fpcmp_parts_f+0xae>
    1d48:	2f ef       	ldi	r18, 0xFF	; 255
    1d4a:	3f ef       	ldi	r19, 0xFF	; 255
    1d4c:	c9 01       	movw	r24, r18
    1d4e:	08 95       	ret

00001d50 <__udivmodhi4>:
    1d50:	aa 1b       	sub	r26, r26
    1d52:	bb 1b       	sub	r27, r27
    1d54:	51 e1       	ldi	r21, 0x11	; 17
    1d56:	07 c0       	rjmp	.+14     	; 0x1d66 <__udivmodhi4_ep>

00001d58 <__udivmodhi4_loop>:
    1d58:	aa 1f       	adc	r26, r26
    1d5a:	bb 1f       	adc	r27, r27
    1d5c:	a6 17       	cp	r26, r22
    1d5e:	b7 07       	cpc	r27, r23
    1d60:	10 f0       	brcs	.+4      	; 0x1d66 <__udivmodhi4_ep>
    1d62:	a6 1b       	sub	r26, r22
    1d64:	b7 0b       	sbc	r27, r23

00001d66 <__udivmodhi4_ep>:
    1d66:	88 1f       	adc	r24, r24
    1d68:	99 1f       	adc	r25, r25
    1d6a:	5a 95       	dec	r21
    1d6c:	a9 f7       	brne	.-22     	; 0x1d58 <__udivmodhi4_loop>
    1d6e:	80 95       	com	r24
    1d70:	90 95       	com	r25
    1d72:	bc 01       	movw	r22, r24
    1d74:	cd 01       	movw	r24, r26
    1d76:	08 95       	ret

00001d78 <__divmodhi4>:
    1d78:	97 fb       	bst	r25, 7
    1d7a:	09 2e       	mov	r0, r25
    1d7c:	07 26       	eor	r0, r23
    1d7e:	0a d0       	rcall	.+20     	; 0x1d94 <__divmodhi4_neg1>
    1d80:	77 fd       	sbrc	r23, 7
    1d82:	04 d0       	rcall	.+8      	; 0x1d8c <__divmodhi4_neg2>
    1d84:	e5 df       	rcall	.-54     	; 0x1d50 <__udivmodhi4>
    1d86:	06 d0       	rcall	.+12     	; 0x1d94 <__divmodhi4_neg1>
    1d88:	00 20       	and	r0, r0
    1d8a:	1a f4       	brpl	.+6      	; 0x1d92 <__divmodhi4_exit>

00001d8c <__divmodhi4_neg2>:
    1d8c:	70 95       	com	r23
    1d8e:	61 95       	neg	r22
    1d90:	7f 4f       	sbci	r23, 0xFF	; 255

00001d92 <__divmodhi4_exit>:
    1d92:	08 95       	ret

00001d94 <__divmodhi4_neg1>:
    1d94:	f6 f7       	brtc	.-4      	; 0x1d92 <__divmodhi4_exit>
    1d96:	90 95       	com	r25
    1d98:	81 95       	neg	r24
    1d9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d9c:	08 95       	ret

00001d9e <__udivmodsi4>:
    1d9e:	a1 e2       	ldi	r26, 0x21	; 33
    1da0:	1a 2e       	mov	r1, r26
    1da2:	aa 1b       	sub	r26, r26
    1da4:	bb 1b       	sub	r27, r27
    1da6:	fd 01       	movw	r30, r26
    1da8:	0d c0       	rjmp	.+26     	; 0x1dc4 <__udivmodsi4_ep>

00001daa <__udivmodsi4_loop>:
    1daa:	aa 1f       	adc	r26, r26
    1dac:	bb 1f       	adc	r27, r27
    1dae:	ee 1f       	adc	r30, r30
    1db0:	ff 1f       	adc	r31, r31
    1db2:	a2 17       	cp	r26, r18
    1db4:	b3 07       	cpc	r27, r19
    1db6:	e4 07       	cpc	r30, r20
    1db8:	f5 07       	cpc	r31, r21
    1dba:	20 f0       	brcs	.+8      	; 0x1dc4 <__udivmodsi4_ep>
    1dbc:	a2 1b       	sub	r26, r18
    1dbe:	b3 0b       	sbc	r27, r19
    1dc0:	e4 0b       	sbc	r30, r20
    1dc2:	f5 0b       	sbc	r31, r21

00001dc4 <__udivmodsi4_ep>:
    1dc4:	66 1f       	adc	r22, r22
    1dc6:	77 1f       	adc	r23, r23
    1dc8:	88 1f       	adc	r24, r24
    1dca:	99 1f       	adc	r25, r25
    1dcc:	1a 94       	dec	r1
    1dce:	69 f7       	brne	.-38     	; 0x1daa <__udivmodsi4_loop>
    1dd0:	60 95       	com	r22
    1dd2:	70 95       	com	r23
    1dd4:	80 95       	com	r24
    1dd6:	90 95       	com	r25
    1dd8:	9b 01       	movw	r18, r22
    1dda:	ac 01       	movw	r20, r24
    1ddc:	bd 01       	movw	r22, r26
    1dde:	cf 01       	movw	r24, r30
    1de0:	08 95       	ret

00001de2 <__prologue_saves__>:
    1de2:	2f 92       	push	r2
    1de4:	3f 92       	push	r3
    1de6:	4f 92       	push	r4
    1de8:	5f 92       	push	r5
    1dea:	6f 92       	push	r6
    1dec:	7f 92       	push	r7
    1dee:	8f 92       	push	r8
    1df0:	9f 92       	push	r9
    1df2:	af 92       	push	r10
    1df4:	bf 92       	push	r11
    1df6:	cf 92       	push	r12
    1df8:	df 92       	push	r13
    1dfa:	ef 92       	push	r14
    1dfc:	ff 92       	push	r15
    1dfe:	0f 93       	push	r16
    1e00:	1f 93       	push	r17
    1e02:	cf 93       	push	r28
    1e04:	df 93       	push	r29
    1e06:	cd b7       	in	r28, 0x3d	; 61
    1e08:	de b7       	in	r29, 0x3e	; 62
    1e0a:	ca 1b       	sub	r28, r26
    1e0c:	db 0b       	sbc	r29, r27
    1e0e:	0f b6       	in	r0, 0x3f	; 63
    1e10:	f8 94       	cli
    1e12:	de bf       	out	0x3e, r29	; 62
    1e14:	0f be       	out	0x3f, r0	; 63
    1e16:	cd bf       	out	0x3d, r28	; 61
    1e18:	09 94       	ijmp

00001e1a <__epilogue_restores__>:
    1e1a:	2a 88       	ldd	r2, Y+18	; 0x12
    1e1c:	39 88       	ldd	r3, Y+17	; 0x11
    1e1e:	48 88       	ldd	r4, Y+16	; 0x10
    1e20:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e22:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e24:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e26:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e28:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e2a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e2c:	b9 84       	ldd	r11, Y+9	; 0x09
    1e2e:	c8 84       	ldd	r12, Y+8	; 0x08
    1e30:	df 80       	ldd	r13, Y+7	; 0x07
    1e32:	ee 80       	ldd	r14, Y+6	; 0x06
    1e34:	fd 80       	ldd	r15, Y+5	; 0x05
    1e36:	0c 81       	ldd	r16, Y+4	; 0x04
    1e38:	1b 81       	ldd	r17, Y+3	; 0x03
    1e3a:	aa 81       	ldd	r26, Y+2	; 0x02
    1e3c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e3e:	ce 0f       	add	r28, r30
    1e40:	d1 1d       	adc	r29, r1
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	de bf       	out	0x3e, r29	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	cd bf       	out	0x3d, r28	; 61
    1e4c:	ed 01       	movw	r28, r26
    1e4e:	08 95       	ret

00001e50 <memset>:
    1e50:	dc 01       	movw	r26, r24
    1e52:	01 c0       	rjmp	.+2      	; 0x1e56 <memset+0x6>
    1e54:	6d 93       	st	X+, r22
    1e56:	41 50       	subi	r20, 0x01	; 1
    1e58:	50 40       	sbci	r21, 0x00	; 0
    1e5a:	e0 f7       	brcc	.-8      	; 0x1e54 <memset+0x4>
    1e5c:	08 95       	ret

00001e5e <__eerd_block_m8>:
    1e5e:	dc 01       	movw	r26, r24
    1e60:	cb 01       	movw	r24, r22

00001e62 <__eerd_blraw_m8>:
    1e62:	fc 01       	movw	r30, r24
    1e64:	e1 99       	sbic	0x1c, 1	; 28
    1e66:	fe cf       	rjmp	.-4      	; 0x1e64 <__eerd_blraw_m8+0x2>
    1e68:	06 c0       	rjmp	.+12     	; 0x1e76 <__eerd_blraw_m8+0x14>
    1e6a:	ff bb       	out	0x1f, r31	; 31
    1e6c:	ee bb       	out	0x1e, r30	; 30
    1e6e:	e0 9a       	sbi	0x1c, 0	; 28
    1e70:	31 96       	adiw	r30, 0x01	; 1
    1e72:	0d b2       	in	r0, 0x1d	; 29
    1e74:	0d 92       	st	X+, r0
    1e76:	41 50       	subi	r20, 0x01	; 1
    1e78:	50 40       	sbci	r21, 0x00	; 0
    1e7a:	b8 f7       	brcc	.-18     	; 0x1e6a <__eerd_blraw_m8+0x8>
    1e7c:	08 95       	ret

00001e7e <__eeupd_block_m8>:
    1e7e:	dc 01       	movw	r26, r24
    1e80:	a4 0f       	add	r26, r20
    1e82:	b5 1f       	adc	r27, r21
    1e84:	41 50       	subi	r20, 0x01	; 1
    1e86:	50 40       	sbci	r21, 0x00	; 0
    1e88:	40 f0       	brcs	.+16     	; 0x1e9a <__eeupd_block_m8+0x1c>
    1e8a:	cb 01       	movw	r24, r22
    1e8c:	84 0f       	add	r24, r20
    1e8e:	95 1f       	adc	r25, r21
    1e90:	2e 91       	ld	r18, -X
    1e92:	05 d0       	rcall	.+10     	; 0x1e9e <__eeupd_r18_m8>
    1e94:	41 50       	subi	r20, 0x01	; 1
    1e96:	50 40       	sbci	r21, 0x00	; 0
    1e98:	d8 f7       	brcc	.-10     	; 0x1e90 <__eeupd_block_m8+0x12>
    1e9a:	08 95       	ret

00001e9c <__eeupd_byte_m8>:
    1e9c:	26 2f       	mov	r18, r22

00001e9e <__eeupd_r18_m8>:
    1e9e:	e1 99       	sbic	0x1c, 1	; 28
    1ea0:	fe cf       	rjmp	.-4      	; 0x1e9e <__eeupd_r18_m8>
    1ea2:	9f bb       	out	0x1f, r25	; 31
    1ea4:	8e bb       	out	0x1e, r24	; 30
    1ea6:	e0 9a       	sbi	0x1c, 0	; 28
    1ea8:	01 97       	sbiw	r24, 0x01	; 1
    1eaa:	0d b2       	in	r0, 0x1d	; 29
    1eac:	02 16       	cp	r0, r18
    1eae:	31 f0       	breq	.+12     	; 0x1ebc <__eeupd_r18_m8+0x1e>
    1eb0:	2d bb       	out	0x1d, r18	; 29
    1eb2:	0f b6       	in	r0, 0x3f	; 63
    1eb4:	f8 94       	cli
    1eb6:	e2 9a       	sbi	0x1c, 2	; 28
    1eb8:	e1 9a       	sbi	0x1c, 1	; 28
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	08 95       	ret

00001ebe <_exit>:
    1ebe:	f8 94       	cli

00001ec0 <__stop_program>:
    1ec0:	ff cf       	rjmp	.-2      	; 0x1ec0 <__stop_program>
