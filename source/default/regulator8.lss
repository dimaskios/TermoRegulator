
regulator8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ee2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000124  00800060  00001ee2  00001f96  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000057  00800184  00800184  000020ba  2**0
                  ALLOC
  3 .eeprom       0000001b  00810000  00810000  000020ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000260  00000000  00000000  000020d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000674  00000000  00000000  00002335  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000389f  00000000  00000000  000029a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001ad5  00000000  00000000  00006248  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000244f  00000000  00000000  00007d1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000480  00000000  00000000  0000a16c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000073c  00000000  00000000  0000a5ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000103e  00000000  00000000  0000ad28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  0000bd66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	11 e0       	ldi	r17, 0x01	; 1
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	e2 ee       	ldi	r30, 0xE2	; 226
      3a:	fe e1       	ldi	r31, 0x1E	; 30
      3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
      42:	a4 38       	cpi	r26, 0x84	; 132
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
      48:	11 e0       	ldi	r17, 0x01	; 1
      4a:	a4 e8       	ldi	r26, 0x84	; 132
      4c:	b1 e0       	ldi	r27, 0x01	; 1
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	ab 3d       	cpi	r26, 0xDB	; 219
      54:	b1 07       	cpc	r27, r17
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	ff d3       	rcall	.+2046   	; 0x858 <main>
      5a:	41 cf       	rjmp	.-382    	; 0xfffffede <__eeprom_end+0xff7efec3>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <BTN1_Pressed>:
	LCD_2buffer_end();
	iterations = 1;
}

void BTN1_Pressed()
{
      5e:	0f 93       	push	r16
      60:	1f 93       	push	r17
	switch(current_status)
      62:	80 91 84 01 	lds	r24, 0x0184
      66:	8a 30       	cpi	r24, 0x0A	; 10
      68:	21 f0       	breq	.+8      	; 0x72 <BTN1_Pressed+0x14>
      6a:	84 31       	cpi	r24, 0x14	; 20
      6c:	09 f0       	breq	.+2      	; 0x70 <BTN1_Pressed+0x12>
      6e:	57 c0       	rjmp	.+174    	; 0x11e <BTN1_Pressed+0xc0>
      70:	0d c0       	rjmp	.+26     	; 0x8c <BTN1_Pressed+0x2e>
	{
		case STATUS_MAIN_MAENU:
			if(sub_current_status==0)
      72:	80 91 85 01 	lds	r24, 0x0185
      76:	88 23       	and	r24, r24
      78:	19 f4       	brne	.+6      	; 0x80 <BTN1_Pressed+0x22>
				sub_current_status = 3;
      7a:	83 e0       	ldi	r24, 0x03	; 3
      7c:	80 93 85 01 	sts	0x0185, r24
			sub_current_status--;
      80:	80 91 85 01 	lds	r24, 0x0185
      84:	81 50       	subi	r24, 0x01	; 1
      86:	80 93 85 01 	sts	0x0185, r24
      8a:	49 c0       	rjmp	.+146    	; 0x11e <BTN1_Pressed+0xc0>
			
		break;
		case STATUS_SETTINGS:
			if (settings_item2==0)
      8c:	80 91 ac 01 	lds	r24, 0x01AC
      90:	88 23       	and	r24, r24
      92:	69 f4       	brne	.+26     	; 0xae <BTN1_Pressed+0x50>
			{
				if(settings_item1==0)
      94:	80 91 b6 01 	lds	r24, 0x01B6
      98:	88 23       	and	r24, r24
      9a:	19 f4       	brne	.+6      	; 0xa2 <BTN1_Pressed+0x44>
					settings_item1 = 3;
      9c:	83 e0       	ldi	r24, 0x03	; 3
      9e:	80 93 b6 01 	sts	0x01B6, r24
				settings_item1--;
      a2:	80 91 b6 01 	lds	r24, 0x01B6
      a6:	81 50       	subi	r24, 0x01	; 1
      a8:	80 93 b6 01 	sts	0x01B6, r24
      ac:	38 c0       	rjmp	.+112    	; 0x11e <BTN1_Pressed+0xc0>
			}
			if (settings_item2==1)
      ae:	81 30       	cpi	r24, 0x01	; 1
      b0:	a1 f4       	brne	.+40     	; 0xda <BTN1_Pressed+0x7c>
			{
				settings->temp-=0.1;
      b2:	00 91 8c 01 	lds	r16, 0x018C
      b6:	10 91 8d 01 	lds	r17, 0x018D
      ba:	f8 01       	movw	r30, r16
      bc:	60 81       	ld	r22, Z
      be:	71 81       	ldd	r23, Z+1	; 0x01
      c0:	82 81       	ldd	r24, Z+2	; 0x02
      c2:	93 81       	ldd	r25, Z+3	; 0x03
      c4:	2d ec       	ldi	r18, 0xCD	; 205
      c6:	3c ec       	ldi	r19, 0xCC	; 204
      c8:	4c ec       	ldi	r20, 0xCC	; 204
      ca:	5d e3       	ldi	r21, 0x3D	; 61
      cc:	cd d8       	rcall	.-3686   	; 0xfffff268 <__eeprom_end+0xff7ef24d>
      ce:	f8 01       	movw	r30, r16
      d0:	60 83       	st	Z, r22
      d2:	71 83       	std	Z+1, r23	; 0x01
      d4:	82 83       	std	Z+2, r24	; 0x02
      d6:	93 83       	std	Z+3, r25	; 0x03
      d8:	22 c0       	rjmp	.+68     	; 0x11e <BTN1_Pressed+0xc0>
			}
			if (settings_item2==2)
      da:	82 30       	cpi	r24, 0x02	; 2
      dc:	a1 f4       	brne	.+40     	; 0x106 <BTN1_Pressed+0xa8>
			{
				settings->d-=0.1;
      de:	00 91 8c 01 	lds	r16, 0x018C
      e2:	10 91 8d 01 	lds	r17, 0x018D
      e6:	f8 01       	movw	r30, r16
      e8:	64 81       	ldd	r22, Z+4	; 0x04
      ea:	75 81       	ldd	r23, Z+5	; 0x05
      ec:	86 81       	ldd	r24, Z+6	; 0x06
      ee:	97 81       	ldd	r25, Z+7	; 0x07
      f0:	2d ec       	ldi	r18, 0xCD	; 205
      f2:	3c ec       	ldi	r19, 0xCC	; 204
      f4:	4c ec       	ldi	r20, 0xCC	; 204
      f6:	5d e3       	ldi	r21, 0x3D	; 61
      f8:	b7 d8       	rcall	.-3730   	; 0xfffff268 <__eeprom_end+0xff7ef24d>
      fa:	f8 01       	movw	r30, r16
      fc:	64 83       	std	Z+4, r22	; 0x04
      fe:	75 83       	std	Z+5, r23	; 0x05
     100:	86 83       	std	Z+6, r24	; 0x06
     102:	97 83       	std	Z+7, r25	; 0x07
     104:	0c c0       	rjmp	.+24     	; 0x11e <BTN1_Pressed+0xc0>
			}
			if (settings_item2==3)
     106:	83 30       	cpi	r24, 0x03	; 3
     108:	51 f4       	brne	.+20     	; 0x11e <BTN1_Pressed+0xc0>
			{
				settings->direction = !settings->direction;
     10a:	e0 91 8c 01 	lds	r30, 0x018C
     10e:	f0 91 8d 01 	lds	r31, 0x018D
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	80 85       	ldd	r24, Z+8	; 0x08
     116:	88 23       	and	r24, r24
     118:	09 f4       	brne	.+2      	; 0x11c <BTN1_Pressed+0xbe>
     11a:	91 e0       	ldi	r25, 0x01	; 1
     11c:	90 87       	std	Z+8, r25	; 0x08
			}
		break;
	}
	iterations = 0;
     11e:	10 92 86 01 	sts	0x0186, r1
     122:	10 92 87 01 	sts	0x0187, r1
     126:	10 92 88 01 	sts	0x0188, r1
     12a:	10 92 89 01 	sts	0x0189, r1
}
     12e:	1f 91       	pop	r17
     130:	0f 91       	pop	r16
     132:	08 95       	ret

00000134 <BTN2_Pressed>:
void BTN2_Pressed()
{
     134:	0f 93       	push	r16
     136:	1f 93       	push	r17
	switch(current_status)
     138:	80 91 84 01 	lds	r24, 0x0184
     13c:	8a 30       	cpi	r24, 0x0A	; 10
     13e:	21 f0       	breq	.+8      	; 0x148 <BTN2_Pressed+0x14>
     140:	84 31       	cpi	r24, 0x14	; 20
     142:	09 f0       	breq	.+2      	; 0x146 <BTN2_Pressed+0x12>
     144:	52 c0       	rjmp	.+164    	; 0x1ea <BTN2_Pressed+0xb6>
     146:	0b c0       	rjmp	.+22     	; 0x15e <BTN2_Pressed+0x2a>
	{
		case STATUS_MAIN_MAENU:
			sub_current_status++;
     148:	80 91 85 01 	lds	r24, 0x0185
     14c:	8f 5f       	subi	r24, 0xFF	; 255
     14e:	80 93 85 01 	sts	0x0185, r24
			if(sub_current_status==3)
     152:	83 30       	cpi	r24, 0x03	; 3
     154:	09 f0       	breq	.+2      	; 0x158 <BTN2_Pressed+0x24>
     156:	49 c0       	rjmp	.+146    	; 0x1ea <BTN2_Pressed+0xb6>
				sub_current_status = 0;
     158:	10 92 85 01 	sts	0x0185, r1
     15c:	46 c0       	rjmp	.+140    	; 0x1ea <BTN2_Pressed+0xb6>
			
		break;
		case STATUS_SETTINGS:
			if (settings_item2==0)
     15e:	80 91 ac 01 	lds	r24, 0x01AC
     162:	88 23       	and	r24, r24
     164:	51 f4       	brne	.+20     	; 0x17a <BTN2_Pressed+0x46>
			{	
				settings_item1++;
     166:	80 91 b6 01 	lds	r24, 0x01B6
     16a:	8f 5f       	subi	r24, 0xFF	; 255
     16c:	80 93 b6 01 	sts	0x01B6, r24
				if(settings_item1==3)
     170:	83 30       	cpi	r24, 0x03	; 3
     172:	d9 f5       	brne	.+118    	; 0x1ea <BTN2_Pressed+0xb6>
					settings_item1 = 0;
     174:	10 92 b6 01 	sts	0x01B6, r1
     178:	38 c0       	rjmp	.+112    	; 0x1ea <BTN2_Pressed+0xb6>
			}
			if (settings_item2==1)
     17a:	81 30       	cpi	r24, 0x01	; 1
     17c:	a1 f4       	brne	.+40     	; 0x1a6 <BTN2_Pressed+0x72>
			{
				settings->temp += 0.1;
     17e:	00 91 8c 01 	lds	r16, 0x018C
     182:	10 91 8d 01 	lds	r17, 0x018D
     186:	f8 01       	movw	r30, r16
     188:	60 81       	ld	r22, Z
     18a:	71 81       	ldd	r23, Z+1	; 0x01
     18c:	82 81       	ldd	r24, Z+2	; 0x02
     18e:	93 81       	ldd	r25, Z+3	; 0x03
     190:	2d ec       	ldi	r18, 0xCD	; 205
     192:	3c ec       	ldi	r19, 0xCC	; 204
     194:	4c ec       	ldi	r20, 0xCC	; 204
     196:	5d e3       	ldi	r21, 0x3D	; 61
     198:	92 d8       	rcall	.-3804   	; 0xfffff2be <__eeprom_end+0xff7ef2a3>
     19a:	f8 01       	movw	r30, r16
     19c:	60 83       	st	Z, r22
     19e:	71 83       	std	Z+1, r23	; 0x01
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
     1a4:	22 c0       	rjmp	.+68     	; 0x1ea <BTN2_Pressed+0xb6>
			}
			if (settings_item2==2)
     1a6:	82 30       	cpi	r24, 0x02	; 2
     1a8:	a1 f4       	brne	.+40     	; 0x1d2 <BTN2_Pressed+0x9e>
			{
				settings->d+= 0.1;
     1aa:	00 91 8c 01 	lds	r16, 0x018C
     1ae:	10 91 8d 01 	lds	r17, 0x018D
     1b2:	f8 01       	movw	r30, r16
     1b4:	64 81       	ldd	r22, Z+4	; 0x04
     1b6:	75 81       	ldd	r23, Z+5	; 0x05
     1b8:	86 81       	ldd	r24, Z+6	; 0x06
     1ba:	97 81       	ldd	r25, Z+7	; 0x07
     1bc:	2d ec       	ldi	r18, 0xCD	; 205
     1be:	3c ec       	ldi	r19, 0xCC	; 204
     1c0:	4c ec       	ldi	r20, 0xCC	; 204
     1c2:	5d e3       	ldi	r21, 0x3D	; 61
     1c4:	7c d8       	rcall	.-3848   	; 0xfffff2be <__eeprom_end+0xff7ef2a3>
     1c6:	f8 01       	movw	r30, r16
     1c8:	64 83       	std	Z+4, r22	; 0x04
     1ca:	75 83       	std	Z+5, r23	; 0x05
     1cc:	86 83       	std	Z+6, r24	; 0x06
     1ce:	97 83       	std	Z+7, r25	; 0x07
     1d0:	0c c0       	rjmp	.+24     	; 0x1ea <BTN2_Pressed+0xb6>
			}
			if (settings_item2==3)
     1d2:	83 30       	cpi	r24, 0x03	; 3
     1d4:	51 f4       	brne	.+20     	; 0x1ea <BTN2_Pressed+0xb6>
			{
				settings->direction = !settings->direction;
     1d6:	e0 91 8c 01 	lds	r30, 0x018C
     1da:	f0 91 8d 01 	lds	r31, 0x018D
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	80 85       	ldd	r24, Z+8	; 0x08
     1e2:	88 23       	and	r24, r24
     1e4:	09 f4       	brne	.+2      	; 0x1e8 <BTN2_Pressed+0xb4>
     1e6:	91 e0       	ldi	r25, 0x01	; 1
     1e8:	90 87       	std	Z+8, r25	; 0x08
			}
		break;
	}
	iterations = 0;
     1ea:	10 92 86 01 	sts	0x0186, r1
     1ee:	10 92 87 01 	sts	0x0187, r1
     1f2:	10 92 88 01 	sts	0x0188, r1
     1f6:	10 92 89 01 	sts	0x0189, r1
}
     1fa:	1f 91       	pop	r17
     1fc:	0f 91       	pop	r16
     1fe:	08 95       	ret

00000200 <BTN1_Long_Pressed>:
		break;
	}
}

void BTN1_Long_Pressed()
{
     200:	0f 93       	push	r16
     202:	1f 93       	push	r17
	switch(current_status)
     204:	80 91 84 01 	lds	r24, 0x0184
     208:	84 31       	cpi	r24, 0x14	; 20
     20a:	69 f5       	brne	.+90     	; 0x266 <BTN1_Long_Pressed+0x66>
	{
		case STATUS_SETTINGS:
			if (settings_item2==1)
     20c:	80 91 ac 01 	lds	r24, 0x01AC
     210:	81 30       	cpi	r24, 0x01	; 1
     212:	a1 f4       	brne	.+40     	; 0x23c <BTN1_Long_Pressed+0x3c>
			{
				settings->temp -= 5;
     214:	00 91 8c 01 	lds	r16, 0x018C
     218:	10 91 8d 01 	lds	r17, 0x018D
     21c:	f8 01       	movw	r30, r16
     21e:	60 81       	ld	r22, Z
     220:	71 81       	ldd	r23, Z+1	; 0x01
     222:	82 81       	ldd	r24, Z+2	; 0x02
     224:	93 81       	ldd	r25, Z+3	; 0x03
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	40 ea       	ldi	r20, 0xA0	; 160
     22c:	50 e4       	ldi	r21, 0x40	; 64
     22e:	1c d8       	rcall	.-4040   	; 0xfffff268 <__eeprom_end+0xff7ef24d>
     230:	f8 01       	movw	r30, r16
     232:	60 83       	st	Z, r22
     234:	71 83       	std	Z+1, r23	; 0x01
     236:	82 83       	std	Z+2, r24	; 0x02
     238:	93 83       	std	Z+3, r25	; 0x03
     23a:	15 c0       	rjmp	.+42     	; 0x266 <BTN1_Long_Pressed+0x66>
			}
			if (settings_item2==2)
     23c:	82 30       	cpi	r24, 0x02	; 2
     23e:	99 f4       	brne	.+38     	; 0x266 <BTN1_Long_Pressed+0x66>
			{
				settings->d -= 5;
     240:	00 91 8c 01 	lds	r16, 0x018C
     244:	10 91 8d 01 	lds	r17, 0x018D
     248:	f8 01       	movw	r30, r16
     24a:	64 81       	ldd	r22, Z+4	; 0x04
     24c:	75 81       	ldd	r23, Z+5	; 0x05
     24e:	86 81       	ldd	r24, Z+6	; 0x06
     250:	97 81       	ldd	r25, Z+7	; 0x07
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	40 ea       	ldi	r20, 0xA0	; 160
     258:	50 e4       	ldi	r21, 0x40	; 64
     25a:	06 d8       	rcall	.-4084   	; 0xfffff268 <__eeprom_end+0xff7ef24d>
     25c:	f8 01       	movw	r30, r16
     25e:	64 83       	std	Z+4, r22	; 0x04
     260:	75 83       	std	Z+5, r23	; 0x05
     262:	86 83       	std	Z+6, r24	; 0x06
     264:	97 83       	std	Z+7, r25	; 0x07
			}
		break;
	}
}
     266:	1f 91       	pop	r17
     268:	0f 91       	pop	r16
     26a:	08 95       	ret

0000026c <BTN2_Long_Pressed>:

void BTN2_Long_Pressed()
{
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
	switch(current_status)
     270:	80 91 84 01 	lds	r24, 0x0184
     274:	84 31       	cpi	r24, 0x14	; 20
     276:	69 f5       	brne	.+90     	; 0x2d2 <BTN2_Long_Pressed+0x66>
	{
		case STATUS_SETTINGS:
			if (settings_item2==1)
     278:	80 91 ac 01 	lds	r24, 0x01AC
     27c:	81 30       	cpi	r24, 0x01	; 1
     27e:	a1 f4       	brne	.+40     	; 0x2a8 <BTN2_Long_Pressed+0x3c>
			{
				settings->temp += 5;
     280:	00 91 8c 01 	lds	r16, 0x018C
     284:	10 91 8d 01 	lds	r17, 0x018D
     288:	f8 01       	movw	r30, r16
     28a:	60 81       	ld	r22, Z
     28c:	71 81       	ldd	r23, Z+1	; 0x01
     28e:	82 81       	ldd	r24, Z+2	; 0x02
     290:	93 81       	ldd	r25, Z+3	; 0x03
     292:	20 e0       	ldi	r18, 0x00	; 0
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	40 ea       	ldi	r20, 0xA0	; 160
     298:	50 e4       	ldi	r21, 0x40	; 64
     29a:	11 d8       	rcall	.-4062   	; 0xfffff2be <__eeprom_end+0xff7ef2a3>
     29c:	f8 01       	movw	r30, r16
     29e:	60 83       	st	Z, r22
     2a0:	71 83       	std	Z+1, r23	; 0x01
     2a2:	82 83       	std	Z+2, r24	; 0x02
     2a4:	93 83       	std	Z+3, r25	; 0x03
     2a6:	15 c0       	rjmp	.+42     	; 0x2d2 <BTN2_Long_Pressed+0x66>
			}
			if (settings_item2==2)
     2a8:	82 30       	cpi	r24, 0x02	; 2
     2aa:	99 f4       	brne	.+38     	; 0x2d2 <BTN2_Long_Pressed+0x66>
			{
				settings->d += 5;
     2ac:	00 91 8c 01 	lds	r16, 0x018C
     2b0:	10 91 8d 01 	lds	r17, 0x018D
     2b4:	f8 01       	movw	r30, r16
     2b6:	64 81       	ldd	r22, Z+4	; 0x04
     2b8:	75 81       	ldd	r23, Z+5	; 0x05
     2ba:	86 81       	ldd	r24, Z+6	; 0x06
     2bc:	97 81       	ldd	r25, Z+7	; 0x07
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	40 ea       	ldi	r20, 0xA0	; 160
     2c4:	50 e4       	ldi	r21, 0x40	; 64
     2c6:	fb d7       	rcall	.+4086   	; 0x12be <__addsf3>
     2c8:	f8 01       	movw	r30, r16
     2ca:	64 83       	std	Z+4, r22	; 0x04
     2cc:	75 83       	std	Z+5, r23	; 0x05
     2ce:	86 83       	std	Z+6, r24	; 0x06
     2d0:	97 83       	std	Z+7, r25	; 0x07
			}

		break;
	}
}
     2d2:	1f 91       	pop	r17
     2d4:	0f 91       	pop	r16
     2d6:	08 95       	ret

000002d8 <BTN3_Long_Pressed>:

void BTN3_Long_Pressed()
{
	//LCD_printStr("HELLO");
	if (current_status==STATUS_DEFAULT)
     2d8:	80 91 84 01 	lds	r24, 0x0184
     2dc:	88 23       	and	r24, r24
     2de:	31 f4       	brne	.+12     	; 0x2ec <BTN3_Long_Pressed+0x14>
	{
		current_status = STATUS_MAIN_MAENU;
     2e0:	8a e0       	ldi	r24, 0x0A	; 10
     2e2:	80 93 84 01 	sts	0x0184, r24
		sub_current_status = 0;
     2e6:	10 92 85 01 	sts	0x0185, r1
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <BTN3_Long_Pressed+0x18>
		
	}else
	{
		current_status = STATUS_DEFAULT;
     2ec:	10 92 84 01 	sts	0x0184, r1
		
	}
	iterations=0;
     2f0:	10 92 86 01 	sts	0x0186, r1
     2f4:	10 92 87 01 	sts	0x0187, r1
     2f8:	10 92 88 01 	sts	0x0188, r1
     2fc:	10 92 89 01 	sts	0x0189, r1
}
     300:	08 95       	ret

00000302 <BTN_Init>:

void BTN_Init()
{
	BTN1_status = 0;
     302:	10 92 8e 01 	sts	0x018E, r1
     306:	10 92 8f 01 	sts	0x018F, r1
     30a:	10 92 90 01 	sts	0x0190, r1
     30e:	10 92 91 01 	sts	0x0191, r1
	BTN2_status = 0;
     312:	10 92 9b 01 	sts	0x019B, r1
     316:	10 92 9c 01 	sts	0x019C, r1
     31a:	10 92 9d 01 	sts	0x019D, r1
     31e:	10 92 9e 01 	sts	0x019E, r1
	BTN3_status = 0;
     322:	10 92 9f 01 	sts	0x019F, r1
     326:	10 92 a0 01 	sts	0x01A0, r1
     32a:	10 92 a1 01 	sts	0x01A1, r1
     32e:	10 92 a2 01 	sts	0x01A2, r1

	Off(BTNDDR, BTN1); 
     332:	a0 98       	cbi	0x14, 0	; 20
	Off(BTNDDR, BTN2); 
     334:	a2 98       	cbi	0x14, 2	; 20
	Off(BTNDDR, BTN3); 
     336:	a1 98       	cbi	0x14, 1	; 20

	On(BTNPORT, BTN1); 
     338:	a8 9a       	sbi	0x15, 0	; 21
	On(BTNPORT, BTN2); 
     33a:	aa 9a       	sbi	0x15, 2	; 21
	On(BTNPORT, BTN3); 
     33c:	a9 9a       	sbi	0x15, 1	; 21

	//Led_On_time = 0;
}
     33e:	08 95       	ret

00000340 <BTN3_Pressed>:
	}
	iterations = 0;
}
void BTN3_Pressed()
{
	switch(current_status)
     340:	80 91 84 01 	lds	r24, 0x0184
     344:	8a 30       	cpi	r24, 0x0A	; 10
     346:	19 f0       	breq	.+6      	; 0x34e <BTN3_Pressed+0xe>
     348:	84 31       	cpi	r24, 0x14	; 20
     34a:	09 f5       	brne	.+66     	; 0x38e <BTN3_Pressed+0x4e>
     34c:	10 c0       	rjmp	.+32     	; 0x36e <BTN3_Pressed+0x2e>
	{
		case STATUS_MAIN_MAENU:
			current_status = STATUS_SETTINGS;
     34e:	84 e1       	ldi	r24, 0x14	; 20
     350:	80 93 84 01 	sts	0x0184, r24
			iterations = 0;
     354:	10 92 86 01 	sts	0x0186, r1
     358:	10 92 87 01 	sts	0x0187, r1
     35c:	10 92 88 01 	sts	0x0188, r1
     360:	10 92 89 01 	sts	0x0189, r1
			settings_item1 = 0;
     364:	10 92 b6 01 	sts	0x01B6, r1
			settings_item2 = 0;
     368:	10 92 ac 01 	sts	0x01AC, r1
     36c:	08 95       	ret
		break;

		case STATUS_SETTINGS:
			if (settings_item2==0)
     36e:	80 91 ac 01 	lds	r24, 0x01AC
     372:	88 23       	and	r24, r24
     374:	31 f4       	brne	.+12     	; 0x382 <BTN3_Pressed+0x42>
			{
				settings_item2 = settings_item1+1;
     376:	80 91 b6 01 	lds	r24, 0x01B6
     37a:	8f 5f       	subi	r24, 0xFF	; 255
     37c:	80 93 ac 01 	sts	0x01AC, r24
     380:	08 95       	ret
			}else
			{	
				settings_item2 = 0;
     382:	10 92 ac 01 	sts	0x01AC, r1
				Settings_Write(sub_current_status+1);
     386:	80 91 85 01 	lds	r24, 0x0185
     38a:	8f 5f       	subi	r24, 0xFF	; 255
     38c:	3e d5       	rcall	.+2684   	; 0xe0a <Settings_Write>
     38e:	08 95       	ret

00000390 <BTN_Process>:
	//Led_On_time = 0;
}

void BTN_Process()
{
	if ((BTNPIN & (1<<BTN1))==0)
     390:	98 99       	sbic	0x13, 0	; 19
     392:	15 c0       	rjmp	.+42     	; 0x3be <BTN_Process+0x2e>
	{
		if (BTN1_status>=0)
     394:	80 91 8e 01 	lds	r24, 0x018E
     398:	90 91 8f 01 	lds	r25, 0x018F
     39c:	a0 91 90 01 	lds	r26, 0x0190
     3a0:	b0 91 91 01 	lds	r27, 0x0191
     3a4:	b7 fd       	sbrc	r27, 7
     3a6:	0b c0       	rjmp	.+22     	; 0x3be <BTN_Process+0x2e>
			BTN1_status ++;
     3a8:	01 96       	adiw	r24, 0x01	; 1
     3aa:	a1 1d       	adc	r26, r1
     3ac:	b1 1d       	adc	r27, r1
     3ae:	80 93 8e 01 	sts	0x018E, r24
     3b2:	90 93 8f 01 	sts	0x018F, r25
     3b6:	a0 93 90 01 	sts	0x0190, r26
     3ba:	b0 93 91 01 	sts	0x0191, r27
		//Led_On_time = 0;
	}

	if ((BTNPIN & (1<<BTN2))==0)
     3be:	9a 99       	sbic	0x13, 2	; 19
     3c0:	15 c0       	rjmp	.+42     	; 0x3ec <BTN_Process+0x5c>
	{
		if (BTN2_status>=0)
     3c2:	80 91 9b 01 	lds	r24, 0x019B
     3c6:	90 91 9c 01 	lds	r25, 0x019C
     3ca:	a0 91 9d 01 	lds	r26, 0x019D
     3ce:	b0 91 9e 01 	lds	r27, 0x019E
     3d2:	b7 fd       	sbrc	r27, 7
     3d4:	0b c0       	rjmp	.+22     	; 0x3ec <BTN_Process+0x5c>
			BTN2_status ++;
     3d6:	01 96       	adiw	r24, 0x01	; 1
     3d8:	a1 1d       	adc	r26, r1
     3da:	b1 1d       	adc	r27, r1
     3dc:	80 93 9b 01 	sts	0x019B, r24
     3e0:	90 93 9c 01 	sts	0x019C, r25
     3e4:	a0 93 9d 01 	sts	0x019D, r26
     3e8:	b0 93 9e 01 	sts	0x019E, r27
		//Led_On_time = 0;
	}

	if ((BTNPIN & (1<<BTN3))==0)
     3ec:	99 99       	sbic	0x13, 1	; 19
     3ee:	15 c0       	rjmp	.+42     	; 0x41a <BTN_Process+0x8a>
	{
		if (BTN3_status>=0)
     3f0:	80 91 9f 01 	lds	r24, 0x019F
     3f4:	90 91 a0 01 	lds	r25, 0x01A0
     3f8:	a0 91 a1 01 	lds	r26, 0x01A1
     3fc:	b0 91 a2 01 	lds	r27, 0x01A2
     400:	b7 fd       	sbrc	r27, 7
     402:	0b c0       	rjmp	.+22     	; 0x41a <BTN_Process+0x8a>
			BTN3_status ++;
     404:	01 96       	adiw	r24, 0x01	; 1
     406:	a1 1d       	adc	r26, r1
     408:	b1 1d       	adc	r27, r1
     40a:	80 93 9f 01 	sts	0x019F, r24
     40e:	90 93 a0 01 	sts	0x01A0, r25
     412:	a0 93 a1 01 	sts	0x01A1, r26
     416:	b0 93 a2 01 	sts	0x01A2, r27
		//Led_On_time = 0;
	}

	if (BTN1_status>BTN_long_time)
     41a:	80 91 8e 01 	lds	r24, 0x018E
     41e:	90 91 8f 01 	lds	r25, 0x018F
     422:	a0 91 90 01 	lds	r26, 0x0190
     426:	b0 91 91 01 	lds	r27, 0x0191
     42a:	89 5e       	subi	r24, 0xE9	; 233
     42c:	93 40       	sbci	r25, 0x03	; 3
     42e:	a0 40       	sbci	r26, 0x00	; 0
     430:	b0 40       	sbci	r27, 0x00	; 0
     432:	6c f0       	brlt	.+26     	; 0x44e <BTN_Process+0xbe>
	{
		if (BTN1_status>=0)
			BTN1_Long_Pressed();
     434:	e5 de       	rcall	.-566    	; 0x200 <BTN1_Long_Pressed>
		BTN1_status = -1;
     436:	8f ef       	ldi	r24, 0xFF	; 255
     438:	9f ef       	ldi	r25, 0xFF	; 255
     43a:	af ef       	ldi	r26, 0xFF	; 255
     43c:	bf ef       	ldi	r27, 0xFF	; 255
     43e:	80 93 8e 01 	sts	0x018E, r24
     442:	90 93 8f 01 	sts	0x018F, r25
     446:	a0 93 90 01 	sts	0x0190, r26
     44a:	b0 93 91 01 	sts	0x0191, r27
	}
	
	if (BTN2_status>BTN_long_time)
     44e:	80 91 9b 01 	lds	r24, 0x019B
     452:	90 91 9c 01 	lds	r25, 0x019C
     456:	a0 91 9d 01 	lds	r26, 0x019D
     45a:	b0 91 9e 01 	lds	r27, 0x019E
     45e:	89 5e       	subi	r24, 0xE9	; 233
     460:	93 40       	sbci	r25, 0x03	; 3
     462:	a0 40       	sbci	r26, 0x00	; 0
     464:	b0 40       	sbci	r27, 0x00	; 0
     466:	6c f0       	brlt	.+26     	; 0x482 <__stack+0x23>
	{
		if (BTN2_status>=0)
			BTN2_Long_Pressed();
     468:	01 df       	rcall	.-510    	; 0x26c <BTN2_Long_Pressed>
		BTN2_status = -1;
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	af ef       	ldi	r26, 0xFF	; 255
     470:	bf ef       	ldi	r27, 0xFF	; 255
     472:	80 93 9b 01 	sts	0x019B, r24
     476:	90 93 9c 01 	sts	0x019C, r25
     47a:	a0 93 9d 01 	sts	0x019D, r26
     47e:	b0 93 9e 01 	sts	0x019E, r27
	}

	if (BTN3_status>BTN_long_time)
     482:	80 91 9f 01 	lds	r24, 0x019F
     486:	90 91 a0 01 	lds	r25, 0x01A0
     48a:	a0 91 a1 01 	lds	r26, 0x01A1
     48e:	b0 91 a2 01 	lds	r27, 0x01A2
     492:	89 5e       	subi	r24, 0xE9	; 233
     494:	93 40       	sbci	r25, 0x03	; 3
     496:	a0 40       	sbci	r26, 0x00	; 0
     498:	b0 40       	sbci	r27, 0x00	; 0
     49a:	6c f0       	brlt	.+26     	; 0x4b6 <__stack+0x57>
	{
		if (BTN3_status>=0)
			BTN3_Long_Pressed();
     49c:	1d df       	rcall	.-454    	; 0x2d8 <BTN3_Long_Pressed>
		BTN3_status = -1;
     49e:	8f ef       	ldi	r24, 0xFF	; 255
     4a0:	9f ef       	ldi	r25, 0xFF	; 255
     4a2:	af ef       	ldi	r26, 0xFF	; 255
     4a4:	bf ef       	ldi	r27, 0xFF	; 255
     4a6:	80 93 9f 01 	sts	0x019F, r24
     4aa:	90 93 a0 01 	sts	0x01A0, r25
     4ae:	a0 93 a1 01 	sts	0x01A1, r26
     4b2:	b0 93 a2 01 	sts	0x01A2, r27
	}

	if ((BTNPIN & (1<<BTN1))!=0)
     4b6:	98 9b       	sbis	0x13, 0	; 19
     4b8:	19 c0       	rjmp	.+50     	; 0x4ec <__stack+0x8d>
	{
		if ((BTN1_status>0)&&(BTN1_status<BTN_long_time))
     4ba:	80 91 8e 01 	lds	r24, 0x018E
     4be:	90 91 8f 01 	lds	r25, 0x018F
     4c2:	a0 91 90 01 	lds	r26, 0x0190
     4c6:	b0 91 91 01 	lds	r27, 0x0191
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	a1 09       	sbc	r26, r1
     4ce:	b1 09       	sbc	r27, r1
     4d0:	87 5e       	subi	r24, 0xE7	; 231
     4d2:	93 40       	sbci	r25, 0x03	; 3
     4d4:	a0 40       	sbci	r26, 0x00	; 0
     4d6:	b0 40       	sbci	r27, 0x00	; 0
     4d8:	08 f4       	brcc	.+2      	; 0x4dc <__stack+0x7d>
		{
			BTN1_Pressed();
     4da:	c1 dd       	rcall	.-1150   	; 0x5e <BTN1_Pressed>
		}
		BTN1_status = 0;
     4dc:	10 92 8e 01 	sts	0x018E, r1
     4e0:	10 92 8f 01 	sts	0x018F, r1
     4e4:	10 92 90 01 	sts	0x0190, r1
     4e8:	10 92 91 01 	sts	0x0191, r1
	}

	if ((BTNPIN & (1<<BTN2))!=0)
     4ec:	9a 9b       	sbis	0x13, 2	; 19
     4ee:	19 c0       	rjmp	.+50     	; 0x522 <__stack+0xc3>
	{
		if ((BTN2_status>0)&&(BTN2_status<BTN_long_time))
     4f0:	80 91 9b 01 	lds	r24, 0x019B
     4f4:	90 91 9c 01 	lds	r25, 0x019C
     4f8:	a0 91 9d 01 	lds	r26, 0x019D
     4fc:	b0 91 9e 01 	lds	r27, 0x019E
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	a1 09       	sbc	r26, r1
     504:	b1 09       	sbc	r27, r1
     506:	87 5e       	subi	r24, 0xE7	; 231
     508:	93 40       	sbci	r25, 0x03	; 3
     50a:	a0 40       	sbci	r26, 0x00	; 0
     50c:	b0 40       	sbci	r27, 0x00	; 0
     50e:	08 f4       	brcc	.+2      	; 0x512 <__stack+0xb3>
		{
			BTN2_Pressed();
     510:	11 de       	rcall	.-990    	; 0x134 <BTN2_Pressed>
		}
		BTN2_status = 0;
     512:	10 92 9b 01 	sts	0x019B, r1
     516:	10 92 9c 01 	sts	0x019C, r1
     51a:	10 92 9d 01 	sts	0x019D, r1
     51e:	10 92 9e 01 	sts	0x019E, r1
	}

	if ((BTNPIN & (1<<BTN3))!=0)
     522:	99 9b       	sbis	0x13, 1	; 19
     524:	19 c0       	rjmp	.+50     	; 0x558 <__stack+0xf9>
	{
		if ((BTN3_status>0)&&(BTN3_status<BTN_long_time))
     526:	80 91 9f 01 	lds	r24, 0x019F
     52a:	90 91 a0 01 	lds	r25, 0x01A0
     52e:	a0 91 a1 01 	lds	r26, 0x01A1
     532:	b0 91 a2 01 	lds	r27, 0x01A2
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	a1 09       	sbc	r26, r1
     53a:	b1 09       	sbc	r27, r1
     53c:	87 5e       	subi	r24, 0xE7	; 231
     53e:	93 40       	sbci	r25, 0x03	; 3
     540:	a0 40       	sbci	r26, 0x00	; 0
     542:	b0 40       	sbci	r27, 0x00	; 0
     544:	08 f4       	brcc	.+2      	; 0x548 <__stack+0xe9>
		{
			BTN3_Pressed();
     546:	fc de       	rcall	.-520    	; 0x340 <BTN3_Pressed>
		}
		BTN3_status = 0;
     548:	10 92 9f 01 	sts	0x019F, r1
     54c:	10 92 a0 01 	sts	0x01A0, r1
     550:	10 92 a1 01 	sts	0x01A1, r1
     554:	10 92 a2 01 	sts	0x01A2, r1
     558:	08 95       	ret

0000055a <ShowSettings>:
	//_delay_ms(1);
	iterations = 1;
}

void ShowSettings()
{
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
	if (iterations%500!=0)
     562:	e0 90 86 01 	lds	r14, 0x0186
     566:	f0 90 87 01 	lds	r15, 0x0187
     56a:	00 91 88 01 	lds	r16, 0x0188
     56e:	10 91 89 01 	lds	r17, 0x0189
     572:	c8 01       	movw	r24, r16
     574:	b7 01       	movw	r22, r14
     576:	24 ef       	ldi	r18, 0xF4	; 244
     578:	31 e0       	ldi	r19, 0x01	; 1
     57a:	40 e0       	ldi	r20, 0x00	; 0
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	1f dc       	rcall	.-1986   	; 0xfffffdbe <__eeprom_end+0xff7efda3>
     580:	61 15       	cp	r22, r1
     582:	71 05       	cpc	r23, r1
     584:	81 05       	cpc	r24, r1
     586:	91 05       	cpc	r25, r1
     588:	71 f0       	breq	.+28     	; 0x5a6 <ShowSettings+0x4c>
		{
			iterations++;
     58a:	08 94       	sec
     58c:	e1 1c       	adc	r14, r1
     58e:	f1 1c       	adc	r15, r1
     590:	01 1d       	adc	r16, r1
     592:	11 1d       	adc	r17, r1
     594:	e0 92 86 01 	sts	0x0186, r14
     598:	f0 92 87 01 	sts	0x0187, r15
     59c:	00 93 88 01 	sts	0x0188, r16
     5a0:	10 93 89 01 	sts	0x0189, r17
     5a4:	7a c0       	rjmp	.+244    	; 0x69a <ShowSettings+0x140>
			//_delay_ms(1);
			return;
		}

	
	switch(sub_current_status)
     5a6:	80 91 85 01 	lds	r24, 0x0185
     5aa:	81 30       	cpi	r24, 0x01	; 1
     5ac:	41 f0       	breq	.+16     	; 0x5be <ShowSettings+0x64>
     5ae:	81 30       	cpi	r24, 0x01	; 1
     5b0:	18 f0       	brcs	.+6      	; 0x5b8 <ShowSettings+0x5e>
     5b2:	82 30       	cpi	r24, 0x02	; 2
     5b4:	69 f4       	brne	.+26     	; 0x5d0 <ShowSettings+0x76>
     5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <ShowSettings+0x6a>
	{
		case 0: settings = &setting1; break;	
     5b8:	82 e9       	ldi	r24, 0x92	; 146
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <ShowSettings+0x6e>
		case 1: settings = &setting2; break;
     5be:	83 ea       	ldi	r24, 0xA3	; 163
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <ShowSettings+0x6e>
		case 2: settings = &setting3; break;	
     5c4:	8d ea       	ldi	r24, 0xAD	; 173
     5c6:	91 e0       	ldi	r25, 0x01	; 1
     5c8:	90 93 8d 01 	sts	0x018D, r25
     5cc:	80 93 8c 01 	sts	0x018C, r24
	}

	blinker = !blinker;
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	80 91 8a 01 	lds	r24, 0x018A
     5d6:	88 23       	and	r24, r24
     5d8:	09 f4       	brne	.+2      	; 0x5dc <ShowSettings+0x82>
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	90 93 8a 01 	sts	0x018A, r25

	LCD_2buffer_begin();
     5e0:	0a d4       	rcall	.+2068   	; 0xdf6 <LCD_2buffer_begin>
	if ((blinker)||(settings_item2!=1))
     5e2:	80 91 8a 01 	lds	r24, 0x018A
     5e6:	88 23       	and	r24, r24
     5e8:	21 f4       	brne	.+8      	; 0x5f2 <ShowSettings+0x98>
     5ea:	80 91 ac 01 	lds	r24, 0x01AC
     5ee:	81 30       	cpi	r24, 0x01	; 1
     5f0:	59 f0       	breq	.+22     	; 0x608 <ShowSettings+0xae>
	{
		LCD_2buffer_Move_Cursor(1);
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	4a d3       	rcall	.+1684   	; 0xc8a <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(settings->temp);
     5f6:	e0 91 8c 01 	lds	r30, 0x018C
     5fa:	f0 91 8d 01 	lds	r31, 0x018D
     5fe:	60 81       	ld	r22, Z
     600:	71 81       	ldd	r23, Z+1	; 0x01
     602:	82 81       	ldd	r24, Z+2	; 0x02
     604:	93 81       	ldd	r25, Z+3	; 0x03
     606:	ad d3       	rcall	.+1882   	; 0xd62 <LCD_2buffer_Show_FloatTemperature1>
	}
	
	if ((blinker)||(settings_item2!=2))
     608:	80 91 8a 01 	lds	r24, 0x018A
     60c:	88 23       	and	r24, r24
     60e:	21 f4       	brne	.+8      	; 0x618 <ShowSettings+0xbe>
     610:	80 91 ac 01 	lds	r24, 0x01AC
     614:	82 30       	cpi	r24, 0x02	; 2
     616:	59 f0       	breq	.+22     	; 0x62e <ShowSettings+0xd4>
	{
		LCD_2buffer_Move_Cursor(9);
     618:	89 e0       	ldi	r24, 0x09	; 9
     61a:	37 d3       	rcall	.+1646   	; 0xc8a <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(settings->d);
     61c:	e0 91 8c 01 	lds	r30, 0x018C
     620:	f0 91 8d 01 	lds	r31, 0x018D
     624:	64 81       	ldd	r22, Z+4	; 0x04
     626:	75 81       	ldd	r23, Z+5	; 0x05
     628:	86 81       	ldd	r24, Z+6	; 0x06
     62a:	97 81       	ldd	r25, Z+7	; 0x07
     62c:	9a d3       	rcall	.+1844   	; 0xd62 <LCD_2buffer_Show_FloatTemperature1>
	}
	if ((blinker)||(settings_item2!=3))
     62e:	80 91 8a 01 	lds	r24, 0x018A
     632:	88 23       	and	r24, r24
     634:	21 f4       	brne	.+8      	; 0x63e <ShowSettings+0xe4>
     636:	80 91 ac 01 	lds	r24, 0x01AC
     63a:	83 30       	cpi	r24, 0x03	; 3
     63c:	79 f0       	breq	.+30     	; 0x65c <ShowSettings+0x102>
	{
		LCD_2buffer_Move_Cursor(17);
     63e:	81 e1       	ldi	r24, 0x11	; 17
     640:	24 d3       	rcall	.+1608   	; 0xc8a <LCD_2buffer_Move_Cursor>
		if(settings->direction)
     642:	e0 91 8c 01 	lds	r30, 0x018C
     646:	f0 91 8d 01 	lds	r31, 0x018D
     64a:	80 85       	ldd	r24, Z+8	; 0x08
     64c:	88 23       	and	r24, r24
     64e:	19 f0       	breq	.+6      	; 0x656 <ShowSettings+0xfc>
		{
			LCD_2buffer_printStr("UP");
     650:	80 e6       	ldi	r24, 0x60	; 96
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	02 c0       	rjmp	.+4      	; 0x65a <ShowSettings+0x100>
		}else
		{
			LCD_2buffer_printStr("DOWN");
     656:	83 e6       	ldi	r24, 0x63	; 99
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	06 d3       	rcall	.+1548   	; 0xc68 <LCD_2buffer_printStr>
		}
	}

	switch(	settings_item1)
     65c:	80 91 b6 01 	lds	r24, 0x01B6
     660:	81 30       	cpi	r24, 0x01	; 1
     662:	39 f0       	breq	.+14     	; 0x672 <ShowSettings+0x118>
     664:	81 30       	cpi	r24, 0x01	; 1
     666:	18 f0       	brcs	.+6      	; 0x66e <ShowSettings+0x114>
     668:	82 30       	cpi	r24, 0x02	; 2
     66a:	39 f4       	brne	.+14     	; 0x67a <ShowSettings+0x120>
     66c:	04 c0       	rjmp	.+8      	; 0x676 <ShowSettings+0x11c>
	{
		case 0:
			LCD_2buffer_Move_Cursor(0);
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	03 c0       	rjmp	.+6      	; 0x678 <ShowSettings+0x11e>
		break;

		case 1:
			LCD_2buffer_Move_Cursor(8);
     672:	88 e0       	ldi	r24, 0x08	; 8
     674:	01 c0       	rjmp	.+2      	; 0x678 <ShowSettings+0x11e>
		break;

		case 2:
			LCD_2buffer_Move_Cursor(16);
     676:	80 e1       	ldi	r24, 0x10	; 16
     678:	08 d3       	rcall	.+1552   	; 0xc8a <LCD_2buffer_Move_Cursor>
		break;
	}
	LCD_2buffer_printStr(">");
     67a:	88 e6       	ldi	r24, 0x68	; 104
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	f4 d2       	rcall	.+1512   	; 0xc68 <LCD_2buffer_printStr>
	LCD_2buffer_end();
     680:	dc d2       	rcall	.+1464   	; 0xc3a <LCD_2buffer_end>
	iterations = 1;
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	a0 e0       	ldi	r26, 0x00	; 0
     688:	b0 e0       	ldi	r27, 0x00	; 0
     68a:	80 93 86 01 	sts	0x0186, r24
     68e:	90 93 87 01 	sts	0x0187, r25
     692:	a0 93 88 01 	sts	0x0188, r26
     696:	b0 93 89 01 	sts	0x0189, r27
}
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	08 95       	ret

000006a4 <ShowMainMenu>:
		iterations = 1;
		_delay_us(100);
}

void ShowMainMenu()
{
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	0f 93       	push	r16
     6aa:	1f 93       	push	r17
	if (iterations%12000!=0)
     6ac:	e0 90 86 01 	lds	r14, 0x0186
     6b0:	f0 90 87 01 	lds	r15, 0x0187
     6b4:	00 91 88 01 	lds	r16, 0x0188
     6b8:	10 91 89 01 	lds	r17, 0x0189
     6bc:	c8 01       	movw	r24, r16
     6be:	b7 01       	movw	r22, r14
     6c0:	20 ee       	ldi	r18, 0xE0	; 224
     6c2:	3e e2       	ldi	r19, 0x2E	; 46
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	7a db       	rcall	.-2316   	; 0xfffffdbe <__eeprom_end+0xff7efda3>
     6ca:	61 15       	cp	r22, r1
     6cc:	71 05       	cpc	r23, r1
     6ce:	81 05       	cpc	r24, r1
     6d0:	91 05       	cpc	r25, r1
     6d2:	71 f0       	breq	.+28     	; 0x6f0 <ShowMainMenu+0x4c>
		{
			iterations++;
     6d4:	08 94       	sec
     6d6:	e1 1c       	adc	r14, r1
     6d8:	f1 1c       	adc	r15, r1
     6da:	01 1d       	adc	r16, r1
     6dc:	11 1d       	adc	r17, r1
     6de:	e0 92 86 01 	sts	0x0186, r14
     6e2:	f0 92 87 01 	sts	0x0187, r15
     6e6:	00 93 88 01 	sts	0x0188, r16
     6ea:	10 93 89 01 	sts	0x0189, r17
     6ee:	2f c0       	rjmp	.+94     	; 0x74e <ShowMainMenu+0xaa>
			//_delay_ms(1);
			return;
		}
	LCD_2buffer_begin();
     6f0:	82 d3       	rcall	.+1796   	; 0xdf6 <LCD_2buffer_begin>
	LCD_2buffer_Move_Cursor(1);
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	ca d2       	rcall	.+1428   	; 0xc8a <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp1");
     6f6:	8a e6       	ldi	r24, 0x6A	; 106
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	b6 d2       	rcall	.+1388   	; 0xc68 <LCD_2buffer_printStr>

	LCD_2buffer_Move_Cursor(9);
     6fc:	89 e0       	ldi	r24, 0x09	; 9
     6fe:	c5 d2       	rcall	.+1418   	; 0xc8a <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp2");
     700:	80 e7       	ldi	r24, 0x70	; 112
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	b1 d2       	rcall	.+1378   	; 0xc68 <LCD_2buffer_printStr>

	LCD_2buffer_Move_Cursor(17);
     706:	81 e1       	ldi	r24, 0x11	; 17
     708:	c0 d2       	rcall	.+1408   	; 0xc8a <LCD_2buffer_Move_Cursor>
	LCD_2buffer_printStr("Temp3");
     70a:	86 e7       	ldi	r24, 0x76	; 118
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	ac d2       	rcall	.+1368   	; 0xc68 <LCD_2buffer_printStr>

	switch(	sub_current_status)
     710:	80 91 85 01 	lds	r24, 0x0185
     714:	81 30       	cpi	r24, 0x01	; 1
     716:	39 f0       	breq	.+14     	; 0x726 <ShowMainMenu+0x82>
     718:	81 30       	cpi	r24, 0x01	; 1
     71a:	18 f0       	brcs	.+6      	; 0x722 <ShowMainMenu+0x7e>
     71c:	82 30       	cpi	r24, 0x02	; 2
     71e:	39 f4       	brne	.+14     	; 0x72e <ShowMainMenu+0x8a>
     720:	04 c0       	rjmp	.+8      	; 0x72a <ShowMainMenu+0x86>
	{
		case 0:
			LCD_2buffer_Move_Cursor(0);
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	03 c0       	rjmp	.+6      	; 0x72c <ShowMainMenu+0x88>
		break;

		case 1:
			LCD_2buffer_Move_Cursor(8);
     726:	88 e0       	ldi	r24, 0x08	; 8
     728:	01 c0       	rjmp	.+2      	; 0x72c <ShowMainMenu+0x88>
		break;

		case 2:
			LCD_2buffer_Move_Cursor(16);
     72a:	80 e1       	ldi	r24, 0x10	; 16
     72c:	ae d2       	rcall	.+1372   	; 0xc8a <LCD_2buffer_Move_Cursor>
		break;
	}
	
	LCD_2buffer_printStr(">");
     72e:	88 e6       	ldi	r24, 0x68	; 104
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	9a d2       	rcall	.+1332   	; 0xc68 <LCD_2buffer_printStr>

	LCD_2buffer_end();
     734:	82 d2       	rcall	.+1284   	; 0xc3a <LCD_2buffer_end>
	//LCD_Clear_Display();
	//LCD_printStr("HELLO");
	//_delay_ms(1);
	iterations = 1;
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	a0 e0       	ldi	r26, 0x00	; 0
     73c:	b0 e0       	ldi	r27, 0x00	; 0
     73e:	80 93 86 01 	sts	0x0186, r24
     742:	90 93 87 01 	sts	0x0187, r25
     746:	a0 93 88 01 	sts	0x0188, r26
     74a:	b0 93 89 01 	sts	0x0189, r27
}
     74e:	1f 91       	pop	r17
     750:	0f 91       	pop	r16
     752:	ff 90       	pop	r15
     754:	ef 90       	pop	r14
     756:	08 95       	ret

00000758 <DoWork>:
	}
	return 0;
}

void DoWork()
{
     758:	6f 92       	push	r6
     75a:	7f 92       	push	r7
     75c:	8f 92       	push	r8
     75e:	9f 92       	push	r9
     760:	af 92       	push	r10
     762:	bf 92       	push	r11
     764:	cf 92       	push	r12
     766:	df 92       	push	r13
     768:	ef 92       	push	r14
     76a:	ff 92       	push	r15
     76c:	0f 93       	push	r16
     76e:	1f 93       	push	r17

	//LCD_Clear_Display();
	if (iterations%500!=0)
     770:	e0 90 86 01 	lds	r14, 0x0186
     774:	f0 90 87 01 	lds	r15, 0x0187
     778:	00 91 88 01 	lds	r16, 0x0188
     77c:	10 91 89 01 	lds	r17, 0x0189
     780:	c8 01       	movw	r24, r16
     782:	b7 01       	movw	r22, r14
     784:	24 ef       	ldi	r18, 0xF4	; 244
     786:	31 e0       	ldi	r19, 0x01	; 1
     788:	40 e0       	ldi	r20, 0x00	; 0
     78a:	50 e0       	ldi	r21, 0x00	; 0
     78c:	18 db       	rcall	.-2512   	; 0xfffffdbe <__eeprom_end+0xff7efda3>
     78e:	61 15       	cp	r22, r1
     790:	71 05       	cpc	r23, r1
     792:	81 05       	cpc	r24, r1
     794:	91 05       	cpc	r25, r1
     796:	71 f0       	breq	.+28     	; 0x7b4 <DoWork+0x5c>
		{
			iterations++;
     798:	08 94       	sec
     79a:	e1 1c       	adc	r14, r1
     79c:	f1 1c       	adc	r15, r1
     79e:	01 1d       	adc	r16, r1
     7a0:	11 1d       	adc	r17, r1
     7a2:	e0 92 86 01 	sts	0x0186, r14
     7a6:	f0 92 87 01 	sts	0x0187, r15
     7aa:	00 93 88 01 	sts	0x0188, r16
     7ae:	10 93 89 01 	sts	0x0189, r17
     7b2:	45 c0       	rjmp	.+138    	; 0x83e <DoWork+0xe6>

	
	//LCD_printStr("Waiting...");
	//return ;
	//DS_Init(DSBIT1);
	DS_Init(DSBIT1);
     7b4:	85 e0       	ldi	r24, 0x05	; 5
     7b6:	c3 d0       	rcall	.+390    	; 0x93e <DS_Init>
	DS_Init(DSBIT2);
     7b8:	84 e0       	ldi	r24, 0x04	; 4
     7ba:	c1 d0       	rcall	.+386    	; 0x93e <DS_Init>
	DS_Init(DSBIT3);
     7bc:	83 e0       	ldi	r24, 0x03	; 3
     7be:	bf d0       	rcall	.+382    	; 0x93e <DS_Init>

		float t1 = DS_getFloatTemperature(DSBIT1);
     7c0:	85 e0       	ldi	r24, 0x05	; 5
     7c2:	46 d1       	rcall	.+652    	; 0xa50 <DS_getFloatTemperature>
     7c4:	7b 01       	movw	r14, r22
     7c6:	8c 01       	movw	r16, r24


		//DS_Init(DSBIT2);
		float t2 = DS_getFloatTemperature(DSBIT2);
     7c8:	84 e0       	ldi	r24, 0x04	; 4
     7ca:	42 d1       	rcall	.+644    	; 0xa50 <DS_getFloatTemperature>
     7cc:	5b 01       	movw	r10, r22
     7ce:	6c 01       	movw	r12, r24


		//DS_Init(DSBIT3);
		float t3 = DS_getFloatTemperature(DSBIT3);
     7d0:	83 e0       	ldi	r24, 0x03	; 3
     7d2:	3e d1       	rcall	.+636    	; 0xa50 <DS_getFloatTemperature>
     7d4:	3b 01       	movw	r6, r22
     7d6:	4c 01       	movw	r8, r24

		HandleRelay(&setting1, t1, RELAY1);
     7d8:	82 e9       	ldi	r24, 0x92	; 146
     7da:	91 e0       	ldi	r25, 0x01	; 1
     7dc:	b8 01       	movw	r22, r16
     7de:	a7 01       	movw	r20, r14
     7e0:	22 e0       	ldi	r18, 0x02	; 2
     7e2:	57 d3       	rcall	.+1710   	; 0xe92 <HandleRelay>
		HandleRelay(&setting2, t2, RELAY2);
     7e4:	83 ea       	ldi	r24, 0xA3	; 163
     7e6:	91 e0       	ldi	r25, 0x01	; 1
     7e8:	b6 01       	movw	r22, r12
     7ea:	a5 01       	movw	r20, r10
     7ec:	21 e0       	ldi	r18, 0x01	; 1
     7ee:	51 d3       	rcall	.+1698   	; 0xe92 <HandleRelay>
		HandleRelay(&setting3, t3, RELAY3);
     7f0:	8d ea       	ldi	r24, 0xAD	; 173
     7f2:	91 e0       	ldi	r25, 0x01	; 1
     7f4:	b4 01       	movw	r22, r8
     7f6:	a3 01       	movw	r20, r6
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	4b d3       	rcall	.+1686   	; 0xe92 <HandleRelay>

		LCD_2buffer_begin();
     7fc:	fc d2       	rcall	.+1528   	; 0xdf6 <LCD_2buffer_begin>
		//LCD_Clear_Display();
		LCD_2buffer_Move_Cursor(0);
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	44 d2       	rcall	.+1160   	; 0xc8a <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t1);
     802:	c8 01       	movw	r24, r16
     804:	b7 01       	movw	r22, r14
     806:	ad d2       	rcall	.+1370   	; 0xd62 <LCD_2buffer_Show_FloatTemperature1>

		LCD_2buffer_Move_Cursor(8);
     808:	88 e0       	ldi	r24, 0x08	; 8
     80a:	3f d2       	rcall	.+1150   	; 0xc8a <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t2);
     80c:	c6 01       	movw	r24, r12
     80e:	b5 01       	movw	r22, r10
     810:	a8 d2       	rcall	.+1360   	; 0xd62 <LCD_2buffer_Show_FloatTemperature1>

		LCD_2buffer_Move_Cursor(16);
     812:	80 e1       	ldi	r24, 0x10	; 16
     814:	3a d2       	rcall	.+1140   	; 0xc8a <LCD_2buffer_Move_Cursor>
		LCD_2buffer_Show_FloatTemperature1(t3);
     816:	c4 01       	movw	r24, r8
     818:	b3 01       	movw	r22, r6
     81a:	a3 d2       	rcall	.+1350   	; 0xd62 <LCD_2buffer_Show_FloatTemperature1>
		LCD_2buffer_end();
     81c:	0e d2       	rcall	.+1052   	; 0xc3a <LCD_2buffer_end>
		iterations = 1;
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	a0 e0       	ldi	r26, 0x00	; 0
     824:	b0 e0       	ldi	r27, 0x00	; 0
     826:	80 93 86 01 	sts	0x0186, r24
     82a:	90 93 87 01 	sts	0x0187, r25
     82e:	a0 93 88 01 	sts	0x0188, r26
     832:	b0 93 89 01 	sts	0x0189, r27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     836:	80 e9       	ldi	r24, 0x90	; 144
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	f1 f7       	brne	.-4      	; 0x83a <DoWork+0xe2>
		_delay_us(100);
}
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	ff 90       	pop	r15
     844:	ef 90       	pop	r14
     846:	df 90       	pop	r13
     848:	cf 90       	pop	r12
     84a:	bf 90       	pop	r11
     84c:	af 90       	pop	r10
     84e:	9f 90       	pop	r9
     850:	8f 90       	pop	r8
     852:	7f 90       	pop	r7
     854:	6f 90       	pop	r6
     856:	08 95       	ret

00000858 <main>:
uint8_t blinker = 0;

Settings * settings;

int main()
{
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
	
	int turn = 0;
	LCD_Init();
     85c:	a1 d1       	rcall	.+834    	; 0xba0 <LCD_Init>
	BTN_Init();
     85e:	51 dd       	rcall	.-1374   	; 0x302 <BTN_Init>
	Settings_Init();
     860:	0a d3       	rcall	.+1556   	; 0xe76 <Settings_Init>
	Relay_Init();
     862:	10 d3       	rcall	.+1568   	; 0xe84 <Relay_Init>

	ledON;
     864:	94 9a       	sbi	0x12, 4	; 18
	LCD_Clear_Display();
     866:	99 d1       	rcall	.+818    	; 0xb9a <LCD_Clear_Display>
     868:	c0 ea       	ldi	r28, 0xA0	; 160
     86a:	df e0       	ldi	r29, 0x0F	; 15
	
	
	while (1)
	{
		BTN_Process();
     86c:	91 dd       	rcall	.-1246   	; 0x390 <BTN_Process>
     86e:	ce 01       	movw	r24, r28
     870:	01 97       	sbiw	r24, 0x01	; 1
     872:	f1 f7       	brne	.-4      	; 0x870 <main+0x18>
		_delay_ms(1);
		//LCD_Clear_Display();
		switch(current_status)
     874:	80 91 84 01 	lds	r24, 0x0184
     878:	8a 30       	cpi	r24, 0x0A	; 10
     87a:	31 f0       	breq	.+12     	; 0x888 <main+0x30>
     87c:	84 31       	cpi	r24, 0x14	; 20
     87e:	31 f0       	breq	.+12     	; 0x88c <main+0x34>
     880:	88 23       	and	r24, r24
     882:	a1 f7       	brne	.-24     	; 0x86c <main+0x14>
		{
			case STATUS_DEFAULT:
				DoWork();
     884:	69 df       	rcall	.-302    	; 0x758 <DoWork>
     886:	f2 cf       	rjmp	.-28     	; 0x86c <main+0x14>
			break;
			case STATUS_MAIN_MAENU:
				ShowMainMenu();
     888:	0d df       	rcall	.-486    	; 0x6a4 <ShowMainMenu>
     88a:	f0 cf       	rjmp	.-32     	; 0x86c <main+0x14>
			break; 
			case STATUS_SETTINGS:
				ShowSettings();
     88c:	66 de       	rcall	.-820    	; 0x55a <ShowSettings>
     88e:	ee cf       	rjmp	.-36     	; 0x86c <main+0x14>

00000890 <DS_isPresent>:
#include "ds18b20.h"

int DS_isPresent(byte DSBIT)
{
	byte r = 0;
	DSDDR |= 1<<DSBIT;
     890:	94 b3       	in	r25, 0x14	; 20
     892:	21 e0       	ldi	r18, 0x01	; 1
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	02 c0       	rjmp	.+4      	; 0x89c <DS_isPresent+0xc>
     898:	22 0f       	add	r18, r18
     89a:	33 1f       	adc	r19, r19
     89c:	8a 95       	dec	r24
     89e:	e2 f7       	brpl	.-8      	; 0x898 <DS_isPresent+0x8>
     8a0:	92 2b       	or	r25, r18
     8a2:	94 bb       	out	0x14, r25	; 20
	DSPORT &= ~(1<<DSBIT);
     8a4:	85 b3       	in	r24, 0x15	; 21
     8a6:	20 95       	com	r18
     8a8:	82 23       	and	r24, r18
     8aa:	85 bb       	out	0x15, r24	; 21
     8ac:	80 ed       	ldi	r24, 0xD0	; 208
     8ae:	97 e0       	ldi	r25, 0x07	; 7
     8b0:	01 97       	sbiw	r24, 0x01	; 1
     8b2:	f1 f7       	brne	.-4      	; 0x8b0 <DS_isPresent+0x20>
	_delay_us(500);
	DSDDR &= ~(1<<DSBIT);
     8b4:	84 b3       	in	r24, 0x14	; 20
     8b6:	28 23       	and	r18, r24
     8b8:	24 bb       	out	0x14, r18	; 20
     8ba:	88 e1       	ldi	r24, 0x18	; 24
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	01 97       	sbiw	r24, 0x01	; 1
     8c0:	f1 f7       	brne	.-4      	; 0x8be <DS_isPresent+0x2e>
	_delay_us(70);
	if (DSPIN&(1<<DSBIT))
     8c2:	83 b3       	in	r24, 0x13	; 19
     8c4:	80 e9       	ldi	r24, 0x90	; 144
     8c6:	96 e0       	ldi	r25, 0x06	; 6
     8c8:	01 97       	sbiw	r24, 0x01	; 1
     8ca:	f1 f7       	brne	.-4      	; 0x8c8 <DS_isPresent+0x38>
		r = 0;
	}
	r = 1;
	_delay_us(420);
	return r;
}
     8cc:	81 e0       	ldi	r24, 0x01	; 1
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	08 95       	ret

000008d2 <DS_Send_Byte>:
{
	for (int i=0; i<8; i++)
	{
		if (b&0x01)
		{
			DSDDR |= 1<<DSBIT;
     8d2:	21 e0       	ldi	r18, 0x01	; 1
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	02 c0       	rjmp	.+4      	; 0x8dc <DS_Send_Byte+0xa>
     8d8:	22 0f       	add	r18, r18
     8da:	33 1f       	adc	r19, r19
     8dc:	8a 95       	dec	r24
     8de:	e2 f7       	brpl	.-8      	; 0x8d8 <DS_Send_Byte+0x6>
			DSPORT &= ~(1<<DSBIT);
     8e0:	72 2f       	mov	r23, r18
     8e2:	70 95       	com	r23
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	a0 ef       	ldi	r26, 0xF0	; 240
     8ea:	b0 e0       	ldi	r27, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     8ec:	3a e1       	ldi	r19, 0x1A	; 26
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     8ee:	ec ed       	ldi	r30, 0xDC	; 220
     8f0:	f0 e0       	ldi	r31, 0x00	; 0

void DS_Send_Byte(byte DSBIT, byte b)
{
	for (int i=0; i<8; i++)
	{
		if (b&0x01)
     8f2:	60 ff       	sbrs	r22, 0
     8f4:	10 c0       	rjmp	.+32     	; 0x916 <DS_Send_Byte+0x44>
		{
			DSDDR |= 1<<DSBIT;
     8f6:	84 b3       	in	r24, 0x14	; 20
     8f8:	82 2b       	or	r24, r18
     8fa:	84 bb       	out	0x14, r24	; 20
			DSPORT &= ~(1<<DSBIT);
     8fc:	85 b3       	in	r24, 0x15	; 21
     8fe:	87 23       	and	r24, r23
     900:	85 bb       	out	0x15, r24	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     902:	83 2f       	mov	r24, r19
     904:	8a 95       	dec	r24
     906:	f1 f7       	brne	.-4      	; 0x904 <DS_Send_Byte+0x32>
			_delay_us(5);
			DSDDR &= ~(1<<DSBIT);
     908:	84 b3       	in	r24, 0x14	; 20
     90a:	87 23       	and	r24, r23
     90c:	84 bb       	out	0x14, r24	; 20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     90e:	cf 01       	movw	r24, r30
     910:	01 97       	sbiw	r24, 0x01	; 1
     912:	f1 f7       	brne	.-4      	; 0x910 <DS_Send_Byte+0x3e>
     914:	0c c0       	rjmp	.+24     	; 0x92e <DS_Send_Byte+0x5c>
			_delay_us(55);
		}else
		{
			DSDDR |= 1<<DSBIT;
     916:	84 b3       	in	r24, 0x14	; 20
     918:	82 2b       	or	r24, r18
     91a:	84 bb       	out	0x14, r24	; 20
			DSPORT &= ~(1<<DSBIT);
     91c:	85 b3       	in	r24, 0x15	; 21
     91e:	87 23       	and	r24, r23
     920:	85 bb       	out	0x15, r24	; 21
     922:	cd 01       	movw	r24, r26
     924:	01 97       	sbiw	r24, 0x01	; 1
     926:	f1 f7       	brne	.-4      	; 0x924 <DS_Send_Byte+0x52>
			_delay_us(60);
			DSDDR &= ~(1<<DSBIT);
     928:	84 b3       	in	r24, 0x14	; 20
     92a:	87 23       	and	r24, r23
     92c:	84 bb       	out	0x14, r24	; 20
	return res;
}

void DS_Send_Byte(byte DSBIT, byte b)
{
	for (int i=0; i<8; i++)
     92e:	4f 5f       	subi	r20, 0xFF	; 255
     930:	5f 4f       	sbci	r21, 0xFF	; 255
     932:	48 30       	cpi	r20, 0x08	; 8
     934:	51 05       	cpc	r21, r1
     936:	11 f0       	breq	.+4      	; 0x93c <DS_Send_Byte+0x6a>
			DSPORT &= ~(1<<DSBIT);
			_delay_us(60);
			DSDDR &= ~(1<<DSBIT);
			//_delay_us(10);
		}
		b = b >> 1;
     938:	66 95       	lsr	r22
     93a:	db cf       	rjmp	.-74     	; 0x8f2 <DS_Send_Byte+0x20>
     93c:	08 95       	ret

0000093e <DS_Init>:
	_delay_us(420);
	return r;
}

void DS_Init(byte DSBIT)
{
     93e:	1f 93       	push	r17
     940:	18 2f       	mov	r17, r24
	if (DS_isPresent(DSBIT))
     942:	a6 df       	rcall	.-180    	; 0x890 <DS_isPresent>
     944:	89 2b       	or	r24, r25
     946:	99 f0       	breq	.+38     	; 0x96e <DS_Init+0x30>
     948:	80 ea       	ldi	r24, 0xA0	; 160
     94a:	9f e0       	ldi	r25, 0x0F	; 15
     94c:	01 97       	sbiw	r24, 0x01	; 1
     94e:	f1 f7       	brne	.-4      	; 0x94c <DS_Init+0xe>
	{
		_delay_ms(1);
		//DS_Send_Byte(0x33);
		DS_Send_Byte(DSBIT, 0xCC);
     950:	81 2f       	mov	r24, r17
     952:	6c ec       	ldi	r22, 0xCC	; 204
     954:	be df       	rcall	.-132    	; 0x8d2 <DS_Send_Byte>
		DS_Send_Byte(DSBIT, 0x44);
     956:	81 2f       	mov	r24, r17
     958:	64 e4       	ldi	r22, 0x44	; 68
     95a:	bb df       	rcall	.-138    	; 0x8d2 <DS_Send_Byte>
     95c:	80 e1       	ldi	r24, 0x10	; 16
     95e:	97 e2       	ldi	r25, 0x27	; 39
     960:	20 e9       	ldi	r18, 0x90	; 144
     962:	31 e0       	ldi	r19, 0x01	; 1
     964:	f9 01       	movw	r30, r18
     966:	31 97       	sbiw	r30, 0x01	; 1
     968:	f1 f7       	brne	.-4      	; 0x966 <DS_Init+0x28>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     96a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     96c:	d9 f7       	brne	.-10     	; 0x964 <DS_Init+0x26>
		_delay_ms(1000);
		//while (!DS_Read_Bit()){}
	}
}
     96e:	1f 91       	pop	r17
     970:	08 95       	ret

00000972 <DS_Read_Bit>:
		b = b >> 1;
	}
}

byte DS_Read_Bit(byte DSBIT)
{
     972:	38 2f       	mov	r19, r24
	byte r = 0;
		DSDDR |= 1<<DSBIT;
     974:	24 b3       	in	r18, 0x14	; 20
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	03 2e       	mov	r0, r19
     97c:	02 c0       	rjmp	.+4      	; 0x982 <DS_Read_Bit+0x10>
     97e:	88 0f       	add	r24, r24
     980:	99 1f       	adc	r25, r25
     982:	0a 94       	dec	r0
     984:	e2 f7       	brpl	.-8      	; 0x97e <DS_Read_Bit+0xc>
     986:	28 2b       	or	r18, r24
     988:	24 bb       	out	0x14, r18	; 20
		DSPORT &= ~(1<<DSBIT);
     98a:	25 b3       	in	r18, 0x15	; 21
     98c:	80 95       	com	r24
     98e:	28 23       	and	r18, r24
     990:	25 bb       	out	0x15, r18	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     992:	95 e0       	ldi	r25, 0x05	; 5
     994:	9a 95       	dec	r25
     996:	f1 f7       	brne	.-4      	; 0x994 <DS_Read_Bit+0x22>
		_delay_us(1);
		DSDDR &= ~(1<<DSBIT);
     998:	24 b3       	in	r18, 0x14	; 20
     99a:	82 23       	and	r24, r18
     99c:	84 bb       	out	0x14, r24	; 20
     99e:	85 e3       	ldi	r24, 0x35	; 53
     9a0:	8a 95       	dec	r24
     9a2:	f1 f7       	brne	.-4      	; 0x9a0 <DS_Read_Bit+0x2e>
		_delay_us(10);
		if (DSPIN&(1<<DSBIT))
     9a4:	83 b3       	in	r24, 0x13	; 19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9a6:	e8 ec       	ldi	r30, 0xC8	; 200
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	31 97       	sbiw	r30, 0x01	; 1
     9ac:	f1 f7       	brne	.-4      	; 0x9aa <DS_Read_Bit+0x38>
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	02 c0       	rjmp	.+4      	; 0x9b6 <DS_Read_Bit+0x44>
     9b2:	95 95       	asr	r25
     9b4:	87 95       	ror	r24
     9b6:	3a 95       	dec	r19
     9b8:	e2 f7       	brpl	.-8      	; 0x9b2 <DS_Read_Bit+0x40>
		{
			r = 1;
		}
		_delay_us(50);
		return r;
}
     9ba:	81 70       	andi	r24, 0x01	; 1
     9bc:	08 95       	ret

000009be <DS_Read_Byte>:

byte DS_Read_Byte(byte DSBIT)
{
     9be:	0f 93       	push	r16
     9c0:	1f 93       	push	r17
     9c2:	cf 93       	push	r28
     9c4:	df 93       	push	r29
     9c6:	08 2f       	mov	r16, r24
     9c8:	10 e0       	ldi	r17, 0x00	; 0
     9ca:	c0 e0       	ldi	r28, 0x00	; 0
     9cc:	d0 e0       	ldi	r29, 0x00	; 0
	byte b = 0;
	for (int i=0; i<8; i++)
	{
		b = b >> 1;
		b = b | (DS_Read_Bit(DSBIT)<<7);
     9ce:	80 2f       	mov	r24, r16
     9d0:	d0 df       	rcall	.-96     	; 0x972 <DS_Read_Bit>
     9d2:	91 2f       	mov	r25, r17
     9d4:	96 95       	lsr	r25
     9d6:	18 2f       	mov	r17, r24
     9d8:	17 95       	ror	r17
     9da:	11 27       	eor	r17, r17
     9dc:	17 95       	ror	r17
     9de:	19 2b       	or	r17, r25
}

byte DS_Read_Byte(byte DSBIT)
{
	byte b = 0;
	for (int i=0; i<8; i++)
     9e0:	21 96       	adiw	r28, 0x01	; 1
     9e2:	c8 30       	cpi	r28, 0x08	; 8
     9e4:	d1 05       	cpc	r29, r1
     9e6:	99 f7       	brne	.-26     	; 0x9ce <DS_Read_Byte+0x10>
	{
		b = b >> 1;
		b = b | (DS_Read_Bit(DSBIT)<<7);
	}
	return b;
}
     9e8:	81 2f       	mov	r24, r17
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	1f 91       	pop	r17
     9f0:	0f 91       	pop	r16
     9f2:	08 95       	ret

000009f4 <DS_getTemperature>:
		//while (!DS_Read_Bit()){}
	}
}

uint16_t DS_getTemperature(byte DSBIT)
{
     9f4:	ff 92       	push	r15
     9f6:	0f 93       	push	r16
     9f8:	1f 93       	push	r17
     9fa:	f8 2e       	mov	r15, r24
	if (DS_isPresent(DSBIT))
     9fc:	49 df       	rcall	.-366    	; 0x890 <DS_isPresent>
     9fe:	89 2b       	or	r24, r25
     a00:	19 f4       	brne	.+6      	; 0xa08 <DS_getTemperature+0x14>
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	1f c0       	rjmp	.+62     	; 0xa46 <DS_getTemperature+0x52>
	{
		//LCD_Clear_Display();
		//_delay_ms(1);
		//DS_Send_Byte(0x33);
		DS_Send_Byte(DSBIT, 0xCC);
     a08:	8f 2d       	mov	r24, r15
     a0a:	6c ec       	ldi	r22, 0xCC	; 204
     a0c:	62 df       	rcall	.-316    	; 0x8d2 <DS_Send_Byte>
		DS_Send_Byte(DSBIT, 0xBE);
     a0e:	8f 2d       	mov	r24, r15
     a10:	6e eb       	ldi	r22, 0xBE	; 190
     a12:	5f df       	rcall	.-322    	; 0x8d2 <DS_Send_Byte>
		{
			byte b = DS_Read_Byte();
			LCD_Show_Byte(b);
		}*/
		
		byte b0 = DS_Read_Byte(DSBIT);
     a14:	8f 2d       	mov	r24, r15
     a16:	d3 df       	rcall	.-90     	; 0x9be <DS_Read_Byte>
     a18:	08 2f       	mov	r16, r24
		byte b1 = DS_Read_Byte(DSBIT);
     a1a:	8f 2d       	mov	r24, r15
     a1c:	d0 df       	rcall	.-96     	; 0x9be <DS_Read_Byte>
     a1e:	18 2f       	mov	r17, r24
		byte b2 = DS_Read_Byte(DSBIT);
     a20:	8f 2d       	mov	r24, r15
     a22:	cd df       	rcall	.-102    	; 0x9be <DS_Read_Byte>
		byte b3 = DS_Read_Byte(DSBIT);
     a24:	8f 2d       	mov	r24, r15
     a26:	cb df       	rcall	.-106    	; 0x9be <DS_Read_Byte>
		byte b4 = DS_Read_Byte(DSBIT);
     a28:	8f 2d       	mov	r24, r15
     a2a:	c9 df       	rcall	.-110    	; 0x9be <DS_Read_Byte>
		byte b5 = DS_Read_Byte(DSBIT);
     a2c:	8f 2d       	mov	r24, r15
     a2e:	c7 df       	rcall	.-114    	; 0x9be <DS_Read_Byte>
		byte b6 = DS_Read_Byte(DSBIT);
     a30:	8f 2d       	mov	r24, r15
     a32:	c5 df       	rcall	.-118    	; 0x9be <DS_Read_Byte>
		byte b7 = DS_Read_Byte(DSBIT);
     a34:	8f 2d       	mov	r24, r15
     a36:	c3 df       	rcall	.-122    	; 0x9be <DS_Read_Byte>
		byte b8 = DS_Read_Byte(DSBIT);
     a38:	8f 2d       	mov	r24, r15
     a3a:	c1 df       	rcall	.-126    	; 0x9be <DS_Read_Byte>
		//float temp = 0;
		uint16_t tempInt = (b1<<8)+b0;
		//temp = (tempInt>>4)&0x7F;
		return (b1<<8)+b0;
     a3c:	91 2f       	mov	r25, r17
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	9c 01       	movw	r18, r24
     a42:	20 0f       	add	r18, r16
     a44:	31 1d       	adc	r19, r1
	}
	return 0;
}
     a46:	c9 01       	movw	r24, r18
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	ff 90       	pop	r15
     a4e:	08 95       	ret

00000a50 <DS_getFloatTemperature>:

float DS_getFloatTemperature(byte DSBIT)
{
     a50:	8f 92       	push	r8
     a52:	9f 92       	push	r9
     a54:	af 92       	push	r10
     a56:	bf 92       	push	r11
     a58:	cf 92       	push	r12
     a5a:	df 92       	push	r13
     a5c:	ef 92       	push	r14
     a5e:	ff 92       	push	r15
     a60:	0f 93       	push	r16
     a62:	1f 93       	push	r17
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
	float res;
	uint16_t temp = DS_getTemperature(DSBIT);
     a68:	c5 df       	rcall	.-118    	; 0x9f4 <DS_getTemperature>
     a6a:	ec 01       	movw	r28, r24
	float sign = 1;
	if ((temp&(1<<15))!=0)
     a6c:	97 fd       	sbrc	r25, 7
     a6e:	0b c0       	rjmp	.+22     	; 0xa86 <DS_getFloatTemperature+0x36>
     a70:	0f 2e       	mov	r0, r31
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	8f 2e       	mov	r8, r31
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	9f 2e       	mov	r9, r31
     a7a:	f0 e8       	ldi	r31, 0x80	; 128
     a7c:	af 2e       	mov	r10, r31
     a7e:	ff e3       	ldi	r31, 0x3F	; 63
     a80:	bf 2e       	mov	r11, r31
     a82:	f0 2d       	mov	r31, r0
     a84:	0d c0       	rjmp	.+26     	; 0xaa0 <DS_getFloatTemperature+0x50>
	{
		sign = -1;
		temp = 0xFFFF-(unsigned int)temp;
		temp++;
     a86:	d0 95       	com	r29
     a88:	c1 95       	neg	r28
     a8a:	df 4f       	sbci	r29, 0xFF	; 255
     a8c:	0f 2e       	mov	r0, r31
     a8e:	f0 e0       	ldi	r31, 0x00	; 0
     a90:	8f 2e       	mov	r8, r31
     a92:	f0 e0       	ldi	r31, 0x00	; 0
     a94:	9f 2e       	mov	r9, r31
     a96:	f0 e8       	ldi	r31, 0x80	; 128
     a98:	af 2e       	mov	r10, r31
     a9a:	ff eb       	ldi	r31, 0xBF	; 191
     a9c:	bf 2e       	mov	r11, r31
     a9e:	f0 2d       	mov	r31, r0
	}
	
	int drob = temp&0x0F;
     aa0:	9e 01       	movw	r18, r28
     aa2:	2f 70       	andi	r18, 0x0F	; 15
     aa4:	30 70       	andi	r19, 0x00	; 0
	drob = drob * 625;
     aa6:	81 e7       	ldi	r24, 0x71	; 113
     aa8:	92 e0       	ldi	r25, 0x02	; 2
     aaa:	28 9f       	mul	r18, r24
     aac:	f0 01       	movw	r30, r0
     aae:	29 9f       	mul	r18, r25
     ab0:	f0 0d       	add	r31, r0
     ab2:	38 9f       	mul	r19, r24
     ab4:	f0 0d       	add	r31, r0
     ab6:	11 24       	eor	r1, r1
	int ss = drob % 1000;
	drob = drob / 1000;
     ab8:	cf 01       	movw	r24, r30
     aba:	68 ee       	ldi	r22, 0xE8	; 232
     abc:	73 e0       	ldi	r23, 0x03	; 3
     abe:	6c d9       	rcall	.-3368   	; 0xfffffd98 <__eeprom_end+0xff7efd7d>
     ac0:	6b 01       	movw	r12, r22
	if (ss>=500)
     ac2:	cf 01       	movw	r24, r30
     ac4:	68 ee       	ldi	r22, 0xE8	; 232
     ac6:	73 e0       	ldi	r23, 0x03	; 3
     ac8:	67 d9       	rcall	.-3378   	; 0xfffffd98 <__eeprom_end+0xff7efd7d>
     aca:	84 5f       	subi	r24, 0xF4	; 244
     acc:	91 40       	sbci	r25, 0x01	; 1
     ace:	1c f0       	brlt	.+6      	; 0xad6 <DS_getFloatTemperature+0x86>
		drob++;
     ad0:	08 94       	sec
     ad2:	c1 1c       	adc	r12, r1
     ad4:	d1 1c       	adc	r13, r1
	temp = (temp>>4)&0x7F;
     ad6:	84 e0       	ldi	r24, 0x04	; 4
     ad8:	d6 95       	lsr	r29
     ada:	c7 95       	ror	r28
     adc:	8a 95       	dec	r24
     ade:	e1 f7       	brne	.-8      	; 0xad8 <DS_getFloatTemperature+0x88>
	res = temp+(drob/10.0);
     ae0:	cf 77       	andi	r28, 0x7F	; 127
     ae2:	d0 70       	andi	r29, 0x00	; 0
     ae4:	be 01       	movw	r22, r28
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	d8 d6       	rcall	.+3504   	; 0x189c <__floatunsisf>
     aec:	7b 01       	movw	r14, r22
     aee:	8c 01       	movw	r16, r24
     af0:	b6 01       	movw	r22, r12
     af2:	88 27       	eor	r24, r24
     af4:	77 fd       	sbrc	r23, 7
     af6:	80 95       	com	r24
     af8:	98 2f       	mov	r25, r24
     afa:	25 d6       	rcall	.+3146   	; 0x1746 <__floatsisf>
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	40 e2       	ldi	r20, 0x20	; 32
     b02:	51 e4       	ldi	r21, 0x41	; 65
     b04:	f8 d4       	rcall	.+2544   	; 0x14f6 <__divsf3>
     b06:	9b 01       	movw	r18, r22
     b08:	ac 01       	movw	r20, r24
     b0a:	c8 01       	movw	r24, r16
     b0c:	b7 01       	movw	r22, r14
     b0e:	d7 d3       	rcall	.+1966   	; 0x12be <__addsf3>
     b10:	a5 01       	movw	r20, r10
     b12:	94 01       	movw	r18, r8
     b14:	fb d3       	rcall	.+2038   	; 0x130c <__mulsf3>
	res = res*sign;
	return res;
}
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	1f 91       	pop	r17
     b1c:	0f 91       	pop	r16
     b1e:	ff 90       	pop	r15
     b20:	ef 90       	pop	r14
     b22:	df 90       	pop	r13
     b24:	cf 90       	pop	r12
     b26:	bf 90       	pop	r11
     b28:	af 90       	pop	r10
     b2a:	9f 90       	pop	r9
     b2c:	8f 90       	pop	r8
     b2e:	08 95       	ret

00000b30 <LCD_Send_Data_Instruction>:
	LCD_Send_Instruction(p);
}

void LCD_Send_Data_Instruction(byte q)
{
	Write_Lcd;	
     b30:	96 98       	cbi	0x12, 6	; 18
	CONTROL_PORT&= 0xF0;
     b32:	92 b3       	in	r25, 0x12	; 18
     b34:	90 7f       	andi	r25, 0xF0	; 240
     b36:	92 bb       	out	0x12, r25	; 18
	CONTROL_PORT|= (q>>4)&0x0F;
     b38:	22 b3       	in	r18, 0x12	; 18
     b3a:	98 2f       	mov	r25, r24
     b3c:	92 95       	swap	r25
     b3e:	9f 70       	andi	r25, 0x0F	; 15
     b40:	92 2b       	or	r25, r18
     b42:	92 bb       	out	0x12, r25	; 18
	Set_Enable;
     b44:	95 9a       	sbi	0x12, 5	; 18
     b46:	20 ea       	ldi	r18, 0xA0	; 160
     b48:	3f e0       	ldi	r19, 0x0F	; 15
     b4a:	f9 01       	movw	r30, r18
     b4c:	31 97       	sbiw	r30, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <LCD_Send_Data_Instruction+0x1c>
	_delay_ms(1);
	Clear_Enable;
     b50:	95 98       	cbi	0x12, 5	; 18
     b52:	e0 ec       	ldi	r30, 0xC0	; 192
     b54:	fd e5       	ldi	r31, 0x5D	; 93
     b56:	31 97       	sbiw	r30, 0x01	; 1
     b58:	f1 f7       	brne	.-4      	; 0xb56 <LCD_Send_Data_Instruction+0x26>
	_delay_ms(6);
	CONTROL_PORT&= 0xF0;
     b5a:	92 b3       	in	r25, 0x12	; 18
     b5c:	90 7f       	andi	r25, 0xF0	; 240
     b5e:	92 bb       	out	0x12, r25	; 18
	CONTROL_PORT|= q&0x0F;
     b60:	92 b3       	in	r25, 0x12	; 18
     b62:	8f 70       	andi	r24, 0x0F	; 15
     b64:	98 2b       	or	r25, r24
     b66:	92 bb       	out	0x12, r25	; 18
	Set_Enable;
     b68:	95 9a       	sbi	0x12, 5	; 18
     b6a:	c9 01       	movw	r24, r18
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	f1 f7       	brne	.-4      	; 0xb6c <LCD_Send_Data_Instruction+0x3c>
	_delay_ms(1);
	Clear_Enable;
     b70:	95 98       	cbi	0x12, 5	; 18
}
     b72:	08 95       	ret

00000b74 <LCD_Send_Data>:


void LCD_Send_Data(byte q)
{
	Select_DataRegister;
     b74:	97 9a       	sbi	0x12, 7	; 18
	CONTROL_PORT&= 0xF0;
	CONTROL_PORT|= q&0x0F;
	Set_Enable;
	_delay_ms(1);
	Clear_Enable;*/
	LCD_Send_Data_Instruction(q);
     b76:	dc df       	rcall	.-72     	; 0xb30 <LCD_Send_Data_Instruction>
}
     b78:	08 95       	ret

00000b7a <LCD_Send_Instruction>:

void LCD_Send_Instruction(byte q)
{
	Select_InstructionRegister;
     b7a:	97 98       	cbi	0x12, 7	; 18
	CONTROL_PORT&= 0xF0;
	CONTROL_PORT|= q&0x0F;
	Set_Enable;
	_delay_ms(1);
	Clear_Enable;*/
	LCD_Send_Data_Instruction(q);
     b7c:	d9 df       	rcall	.-78     	; 0xb30 <LCD_Send_Data_Instruction>
     b7e:	80 ec       	ldi	r24, 0xC0	; 192
     b80:	9d e5       	ldi	r25, 0x5D	; 93
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	f1 f7       	brne	.-4      	; 0xb82 <LCD_Send_Instruction+0x8>
	_delay_ms(6);	
}
     b86:	08 95       	ret

00000b88 <LCD_Move_Cursor>:
}

void LCD_Move_Cursor(byte position)
{
	byte p = 128;
	if (position>15)
     b88:	80 31       	cpi	r24, 0x10	; 16
     b8a:	10 f4       	brcc	.+4      	; 0xb90 <LCD_Move_Cursor+0x8>
     b8c:	90 e8       	ldi	r25, 0x80	; 128
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <LCD_Move_Cursor+0xc>
	{
		p = p+LCD_2ROW_OFFSET;//40
		position = position-16;
     b90:	80 51       	subi	r24, 0x10	; 16
     b92:	90 ec       	ldi	r25, 0xC0	; 192
	}
	p = p+position;
	LCD_Send_Instruction(p);
     b94:	89 0f       	add	r24, r25
     b96:	f1 df       	rcall	.-30     	; 0xb7a <LCD_Send_Instruction>
}
     b98:	08 95       	ret

00000b9a <LCD_Clear_Display>:
	LCD_Send_Instruction(0x0C);
}

void LCD_Clear_Display()
{
	LCD_Send_Instruction(0x01);
     b9a:	81 e0       	ldi	r24, 0x01	; 1
     b9c:	ee df       	rcall	.-36     	; 0xb7a <LCD_Send_Instruction>
}
     b9e:	08 95       	ret

00000ba0 <LCD_Init>:
	return d+'A'-10;
}*/

void LCD_Init(void)
{
	CONTROL_DDR = 0xFF;
     ba0:	8f ef       	ldi	r24, 0xFF	; 255
     ba2:	81 bb       	out	0x11, r24	; 17
	CONTROL_PORT = 0x00;
     ba4:	12 ba       	out	0x12, r1	; 18
     ba6:	8c e2       	ldi	r24, 0x2C	; 44
     ba8:	91 e0       	ldi	r25, 0x01	; 1
     baa:	20 e9       	ldi	r18, 0x90	; 144
     bac:	31 e0       	ldi	r19, 0x01	; 1
     bae:	f9 01       	movw	r30, r18
     bb0:	31 97       	sbiw	r30, 0x01	; 1
     bb2:	f1 f7       	brne	.-4      	; 0xbb0 <LCD_Init+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bb4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bb6:	d9 f7       	brne	.-10     	; 0xbae <LCD_Init+0xe>
	_delay_ms(30);
	Select_InstructionRegister;
     bb8:	97 98       	cbi	0x12, 7	; 18
	Write_Lcd;	
     bba:	96 98       	cbi	0x12, 6	; 18
	CONTROL_PORT&= 0xF0;
     bbc:	82 b3       	in	r24, 0x12	; 18
     bbe:	80 7f       	andi	r24, 0xF0	; 240
     bc0:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     bc2:	82 b3       	in	r24, 0x12	; 18
     bc4:	83 60       	ori	r24, 0x03	; 3
     bc6:	82 bb       	out	0x12, r24	; 18
     bc8:	20 e2       	ldi	r18, 0x20	; 32
     bca:	3e e4       	ldi	r19, 0x4E	; 78
     bcc:	c9 01       	movw	r24, r18
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	f1 f7       	brne	.-4      	; 0xbce <LCD_Init+0x2e>
	_delay_ms(5);
	CONTROL_PORT&= 0xF0;
     bd2:	82 b3       	in	r24, 0x12	; 18
     bd4:	80 7f       	andi	r24, 0xF0	; 240
     bd6:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     bd8:	82 b3       	in	r24, 0x12	; 18
     bda:	83 60       	ori	r24, 0x03	; 3
     bdc:	82 bb       	out	0x12, r24	; 18
     bde:	88 ee       	ldi	r24, 0xE8	; 232
     be0:	93 e0       	ldi	r25, 0x03	; 3
     be2:	01 97       	sbiw	r24, 0x01	; 1
     be4:	f1 f7       	brne	.-4      	; 0xbe2 <LCD_Init+0x42>
	_delay_us(250);

	CONTROL_PORT&= 0xF0;
     be6:	82 b3       	in	r24, 0x12	; 18
     be8:	80 7f       	andi	r24, 0xF0	; 240
     bea:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x03;
     bec:	82 b3       	in	r24, 0x12	; 18
     bee:	83 60       	ori	r24, 0x03	; 3
     bf0:	82 bb       	out	0x12, r24	; 18
     bf2:	c9 01       	movw	r24, r18
     bf4:	01 97       	sbiw	r24, 0x01	; 1
     bf6:	f1 f7       	brne	.-4      	; 0xbf4 <LCD_Init+0x54>
	_delay_ms(5);

	CONTROL_PORT&= 0xF0;
     bf8:	82 b3       	in	r24, 0x12	; 18
     bfa:	80 7f       	andi	r24, 0xF0	; 240
     bfc:	82 bb       	out	0x12, r24	; 18
	CONTROL_PORT|= 0x02;
     bfe:	91 9a       	sbi	0x12, 1	; 18
	//_delay_ms(6);
	Set_Enable;
     c00:	95 9a       	sbi	0x12, 5	; 18
     c02:	80 ec       	ldi	r24, 0xC0	; 192
     c04:	9d e5       	ldi	r25, 0x5D	; 93
     c06:	01 97       	sbiw	r24, 0x01	; 1
     c08:	f1 f7       	brne	.-4      	; 0xc06 <LCD_Init+0x66>
	_delay_ms(6);
	Clear_Enable;
     c0a:	95 98       	cbi	0x12, 5	; 18
	LCD_Send_Instruction(0x28);
     c0c:	88 e2       	ldi	r24, 0x28	; 40
     c0e:	b5 df       	rcall	.-150    	; 0xb7a <LCD_Send_Instruction>
	LCD_Send_Instruction(0x08);
     c10:	88 e0       	ldi	r24, 0x08	; 8
     c12:	b3 df       	rcall	.-154    	; 0xb7a <LCD_Send_Instruction>
	LCD_Send_Instruction(0x01);
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	b1 df       	rcall	.-158    	; 0xb7a <LCD_Send_Instruction>
	LCD_Send_Instruction(0x06);
     c18:	86 e0       	ldi	r24, 0x06	; 6
     c1a:	af df       	rcall	.-162    	; 0xb7a <LCD_Send_Instruction>
	LCD_Send_Instruction(0x0C);
     c1c:	8c e0       	ldi	r24, 0x0C	; 12
     c1e:	ad df       	rcall	.-166    	; 0xb7a <LCD_Send_Instruction>
}
     c20:	08 95       	ret

00000c22 <LCD_printStr>:
	LCD_Send_Data_Instruction(q);
	_delay_ms(6);	
}

void LCD_printStr(char * s)
{
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	ec 01       	movw	r28, r24
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <LCD_printStr+0xc>
	while (*s)
	{
		LCD_Send_Data(*s);
     c2a:	a4 df       	rcall	.-184    	; 0xb74 <LCD_Send_Data>
		s++;
     c2c:	21 96       	adiw	r28, 0x01	; 1
	_delay_ms(6);	
}

void LCD_printStr(char * s)
{
	while (*s)
     c2e:	88 81       	ld	r24, Y
     c30:	88 23       	and	r24, r24
     c32:	d9 f7       	brne	.-10     	; 0xc2a <LCD_printStr+0x8>
	{
		LCD_Send_Data(*s);
		s++;
	}
}
     c34:	df 91       	pop	r29
     c36:	cf 91       	pop	r28
     c38:	08 95       	ret

00000c3a <LCD_2buffer_end>:
{
	memset(LCD_buffer, ' ', 40);
	LCD_pointer = 0;
}
void LCD_2buffer_end()
{	
     c3a:	cf 93       	push	r28
     c3c:	df 93       	push	r29
	int i;
	LCD_Move_Cursor(0);
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	a3 df       	rcall	.-186    	; 0xb88 <LCD_Move_Cursor>
     c42:	cb eb       	ldi	r28, 0xBB	; 187
     c44:	d1 e0       	ldi	r29, 0x01	; 1
	for (i=0; i<16; i++)
	{	
		LCD_Send_Data(LCD_buffer[i]);
     c46:	89 91       	ld	r24, Y+
     c48:	95 df       	rcall	.-214    	; 0xb74 <LCD_Send_Data>
}
void LCD_2buffer_end()
{	
	int i;
	LCD_Move_Cursor(0);
	for (i=0; i<16; i++)
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	cb 3c       	cpi	r28, 0xCB	; 203
     c4e:	d8 07       	cpc	r29, r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <LCD_2buffer_end+0xc>
	{	
		LCD_Send_Data(LCD_buffer[i]);
	}

	LCD_Move_Cursor(16);
     c52:	80 e1       	ldi	r24, 0x10	; 16
     c54:	99 df       	rcall	.-206    	; 0xb88 <LCD_Move_Cursor>
	for (i=0; i<16; i++)
	{	
		LCD_Send_Data(LCD_buffer[16+i]);
     c56:	89 91       	ld	r24, Y+
     c58:	8d df       	rcall	.-230    	; 0xb74 <LCD_Send_Data>
	{	
		LCD_Send_Data(LCD_buffer[i]);
	}

	LCD_Move_Cursor(16);
	for (i=0; i<16; i++)
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	cb 3d       	cpi	r28, 0xDB	; 219
     c5e:	d8 07       	cpc	r29, r24
     c60:	d1 f7       	brne	.-12     	; 0xc56 <LCD_2buffer_end+0x1c>
	{	
		LCD_Send_Data(LCD_buffer[16+i]);
	}
}
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	08 95       	ret

00000c68 <LCD_2buffer_printStr>:

void LCD_2buffer_printStr(char * s)
{
     c68:	dc 01       	movw	r26, r24
     c6a:	0b c0       	rjmp	.+22     	; 0xc82 <LCD_2buffer_printStr+0x1a>
	while (*s)
	{
		LCD_buffer[LCD_pointer++] = *s;
     c6c:	80 91 8b 01 	lds	r24, 0x018B
     c70:	e8 2f       	mov	r30, r24
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	e5 54       	subi	r30, 0x45	; 69
     c76:	fe 4f       	sbci	r31, 0xFE	; 254
     c78:	90 83       	st	Z, r25
     c7a:	8f 5f       	subi	r24, 0xFF	; 255
     c7c:	80 93 8b 01 	sts	0x018B, r24
		s++;
     c80:	11 96       	adiw	r26, 0x01	; 1
	}
}

void LCD_2buffer_printStr(char * s)
{
	while (*s)
     c82:	9c 91       	ld	r25, X
     c84:	99 23       	and	r25, r25
     c86:	91 f7       	brne	.-28     	; 0xc6c <LCD_2buffer_printStr+0x4>
	{
		LCD_buffer[LCD_pointer++] = *s;
		s++;
	}
}
     c88:	08 95       	ret

00000c8a <LCD_2buffer_Move_Cursor>:

void LCD_2buffer_Move_Cursor(byte position)
{
	LCD_pointer = position;
     c8a:	80 93 8b 01 	sts	0x018B, r24
}
     c8e:	08 95       	ret

00000c90 <LCD_2buffer_Print_Number>:

void LCD_2buffer_Print_Number(int16_t f)
{
     c90:	ef 92       	push	r14
     c92:	ff 92       	push	r15
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	df 93       	push	r29
     c9a:	cf 93       	push	r28
     c9c:	00 d0       	rcall	.+0      	; 0xc9e <LCD_2buffer_Print_Number+0xe>
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <LCD_2buffer_Print_Number+0x10>
     ca0:	00 d0       	rcall	.+0      	; 0xca2 <LCD_2buffer_Print_Number+0x12>
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	9c 01       	movw	r18, r24
	byte buffer[6];
	int n = 0;
	if (f==0)
     ca8:	00 97       	sbiw	r24, 0x00	; 0
     caa:	61 f4       	brne	.+24     	; 0xcc4 <LCD_2buffer_Print_Number+0x34>
	{
		LCD_buffer[LCD_pointer++] = '0';
     cac:	80 91 8b 01 	lds	r24, 0x018B
     cb0:	e8 2f       	mov	r30, r24
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	e5 54       	subi	r30, 0x45	; 69
     cb6:	fe 4f       	sbci	r31, 0xFE	; 254
     cb8:	90 e3       	ldi	r25, 0x30	; 48
     cba:	90 83       	st	Z, r25
     cbc:	8f 5f       	subi	r24, 0xFF	; 255
     cbe:	80 93 8b 01 	sts	0x018B, r24
     cc2:	42 c0       	rjmp	.+132    	; 0xd48 <LCD_2buffer_Print_Number+0xb8>
		return;
	}
	if (f<0)
     cc4:	97 ff       	sbrs	r25, 7
     cc6:	0e c0       	rjmp	.+28     	; 0xce4 <LCD_2buffer_Print_Number+0x54>
	{
		LCD_buffer[LCD_pointer++] = '-';
     cc8:	80 91 8b 01 	lds	r24, 0x018B
     ccc:	e8 2f       	mov	r30, r24
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	e5 54       	subi	r30, 0x45	; 69
     cd2:	fe 4f       	sbci	r31, 0xFE	; 254
     cd4:	9d e2       	ldi	r25, 0x2D	; 45
     cd6:	90 83       	st	Z, r25
     cd8:	8f 5f       	subi	r24, 0xFF	; 255
     cda:	80 93 8b 01 	sts	0x018B, r24
		f = -f;
     cde:	30 95       	com	r19
     ce0:	21 95       	neg	r18
     ce2:	3f 4f       	sbci	r19, 0xFF	; 255
     ce4:	00 e0       	ldi	r16, 0x00	; 0
     ce6:	10 e0       	ldi	r17, 0x00	; 0
	}
	while (f>0)
	{
		buffer[n++] = f%10;
     ce8:	7e 01       	movw	r14, r28
     cea:	08 94       	sec
     cec:	e1 1c       	adc	r14, r1
     cee:	f1 1c       	adc	r15, r1
     cf0:	f7 01       	movw	r30, r14
     cf2:	e0 0f       	add	r30, r16
     cf4:	f1 1f       	adc	r31, r17
     cf6:	c9 01       	movw	r24, r18
     cf8:	6a e0       	ldi	r22, 0x0A	; 10
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	4d d8       	rcall	.-3942   	; 0xfffffd98 <__eeprom_end+0xff7efd7d>
     cfe:	80 83       	st	Z, r24
     d00:	0f 5f       	subi	r16, 0xFF	; 255
     d02:	1f 4f       	sbci	r17, 0xFF	; 255
		f = f/10;
     d04:	c9 01       	movw	r24, r18
     d06:	6a e0       	ldi	r22, 0x0A	; 10
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	46 d8       	rcall	.-3956   	; 0xfffffd98 <__eeprom_end+0xff7efd7d>
     d0c:	9b 01       	movw	r18, r22
	if (f<0)
	{
		LCD_buffer[LCD_pointer++] = '-';
		f = -f;
	}
	while (f>0)
     d0e:	61 15       	cp	r22, r1
     d10:	71 05       	cpc	r23, r1
     d12:	71 f7       	brne	.-36     	; 0xcf0 <LCD_2buffer_Print_Number+0x60>
     d14:	20 91 8b 01 	lds	r18, 0x018B
     d18:	01 50       	subi	r16, 0x01	; 1
     d1a:	10 40       	sbci	r17, 0x00	; 0
     d1c:	d7 01       	movw	r26, r14
     d1e:	a0 0f       	add	r26, r16
     d20:	b1 1f       	adc	r27, r17
     d22:	0f 5f       	subi	r16, 0xFF	; 255
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	92 2f       	mov	r25, r18
     d28:	09 c0       	rjmp	.+18     	; 0xd3c <LCD_2buffer_Print_Number+0xac>
		buffer[n++] = f%10;
		f = f/10;
	}
	for (int i = n-1; i>=0; i--)
	{
		LCD_buffer[LCD_pointer++] = buffer[i]+'0';
     d2a:	e9 2f       	mov	r30, r25
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	e5 54       	subi	r30, 0x45	; 69
     d30:	fe 4f       	sbci	r31, 0xFE	; 254
     d32:	8c 91       	ld	r24, X
     d34:	80 5d       	subi	r24, 0xD0	; 208
     d36:	80 83       	st	Z, r24
     d38:	9f 5f       	subi	r25, 0xFF	; 255
     d3a:	11 97       	sbiw	r26, 0x01	; 1
	while (f>0)
	{
		buffer[n++] = f%10;
		f = f/10;
	}
	for (int i = n-1; i>=0; i--)
     d3c:	ac 17       	cp	r26, r28
     d3e:	bd 07       	cpc	r27, r29
     d40:	a1 f7       	brne	.-24     	; 0xd2a <LCD_2buffer_Print_Number+0x9a>
     d42:	20 0f       	add	r18, r16
     d44:	20 93 8b 01 	sts	0x018B, r18
	{
		LCD_buffer[LCD_pointer++] = buffer[i]+'0';
		//LCD_Send_Data(buffer[i]+'0');
	}
}
     d48:	26 96       	adiw	r28, 0x06	; 6
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	cf 91       	pop	r28
     d56:	df 91       	pop	r29
     d58:	1f 91       	pop	r17
     d5a:	0f 91       	pop	r16
     d5c:	ff 90       	pop	r15
     d5e:	ef 90       	pop	r14
     d60:	08 95       	ret

00000d62 <LCD_2buffer_Show_FloatTemperature1>:

void LCD_2buffer_Show_FloatTemperature1(float f)
{
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	7b 01       	movw	r14, r22
     d6c:	8c 01       	movw	r16, r24
	if (f<0)
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	bc d4       	rcall	.+2424   	; 0x16f0 <__ltsf2>
     d78:	90 91 8b 01 	lds	r25, 0x018B
     d7c:	88 23       	and	r24, r24
     d7e:	74 f4       	brge	.+28     	; 0xd9c <LCD_2buffer_Show_FloatTemperature1+0x3a>
	{
		LCD_buffer[LCD_pointer++]='-';
     d80:	e9 2f       	mov	r30, r25
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	e5 54       	subi	r30, 0x45	; 69
     d86:	fe 4f       	sbci	r31, 0xFE	; 254
     d88:	8d e2       	ldi	r24, 0x2D	; 45
     d8a:	80 83       	st	Z, r24
     d8c:	9f 5f       	subi	r25, 0xFF	; 255
     d8e:	90 93 8b 01 	sts	0x018B, r25
		f = -f;
     d92:	17 fb       	bst	r17, 7
     d94:	10 95       	com	r17
     d96:	17 f9       	bld	r17, 7
     d98:	10 95       	com	r17
     d9a:	09 c0       	rjmp	.+18     	; 0xdae <LCD_2buffer_Show_FloatTemperature1+0x4c>
	}else
	{
		LCD_buffer[LCD_pointer++]='+';
     d9c:	e9 2f       	mov	r30, r25
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	e5 54       	subi	r30, 0x45	; 69
     da2:	fe 4f       	sbci	r31, 0xFE	; 254
     da4:	8b e2       	ldi	r24, 0x2B	; 43
     da6:	80 83       	st	Z, r24
     da8:	9f 5f       	subi	r25, 0xFF	; 255
     daa:	90 93 8b 01 	sts	0x018B, r25
	}
	uint16_t first = (uint16_t)f;
	uint16_t second = ((uint16_t)(f*10))%10;
	LCD_2buffer_Print_Number(first);
     dae:	c8 01       	movw	r24, r16
     db0:	b7 01       	movw	r22, r14
     db2:	e8 d0       	rcall	.+464    	; 0xf84 <__fixunssfsi>
     db4:	dc 01       	movw	r26, r24
     db6:	cb 01       	movw	r24, r22
     db8:	6b df       	rcall	.-298    	; 0xc90 <LCD_2buffer_Print_Number>
	LCD_buffer[LCD_pointer++]='.';
     dba:	90 91 8b 01 	lds	r25, 0x018B
     dbe:	e9 2f       	mov	r30, r25
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	e5 54       	subi	r30, 0x45	; 69
     dc4:	fe 4f       	sbci	r31, 0xFE	; 254
     dc6:	8e e2       	ldi	r24, 0x2E	; 46
     dc8:	80 83       	st	Z, r24
     dca:	9f 5f       	subi	r25, 0xFF	; 255
     dcc:	90 93 8b 01 	sts	0x018B, r25
	LCD_2buffer_Print_Number(second);
     dd0:	c8 01       	movw	r24, r16
     dd2:	b7 01       	movw	r22, r14
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	40 e2       	ldi	r20, 0x20	; 32
     dda:	51 e4       	ldi	r21, 0x41	; 65
     ddc:	97 d2       	rcall	.+1326   	; 0x130c <__mulsf3>
     dde:	d2 d0       	rcall	.+420    	; 0xf84 <__fixunssfsi>
     de0:	dc 01       	movw	r26, r24
     de2:	cb 01       	movw	r24, r22
     de4:	6a e0       	ldi	r22, 0x0A	; 10
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	c3 d7       	rcall	.+3974   	; 0x1d70 <__udivmodhi4>
     dea:	52 df       	rcall	.-348    	; 0xc90 <LCD_2buffer_Print_Number>
}
     dec:	1f 91       	pop	r17
     dee:	0f 91       	pop	r16
     df0:	ff 90       	pop	r15
     df2:	ef 90       	pop	r14
     df4:	08 95       	ret

00000df6 <LCD_2buffer_begin>:
	}
}

void LCD_2buffer_begin()
{
	memset(LCD_buffer, ' ', 40);
     df6:	8b eb       	ldi	r24, 0xBB	; 187
     df8:	91 e0       	ldi	r25, 0x01	; 1
     dfa:	60 e2       	ldi	r22, 0x20	; 32
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	48 e2       	ldi	r20, 0x28	; 40
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	36 d8       	rcall	.-3988   	; 0xfffffe70 <__eeprom_end+0xff7efe55>
	LCD_pointer = 0;
     e04:	10 92 8b 01 	sts	0x018B, r1
}
     e08:	08 95       	ret

00000e0a <Settings_Write>:
}


void Settings_Write(uint8_t n)
{
	switch(n)
     e0a:	82 30       	cpi	r24, 0x02	; 2
     e0c:	49 f0       	breq	.+18     	; 0xe20 <Settings_Write+0x16>
     e0e:	83 30       	cpi	r24, 0x03	; 3
     e10:	79 f0       	breq	.+30     	; 0xe30 <Settings_Write+0x26>
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	a1 f4       	brne	.+40     	; 0xe3e <Settings_Write+0x34>
	{
		case 1:
			eeprom_update_block (( void *) &setting1 , ( const void *) &EEMEMsetting1 , sizeof(setting1)) ;
     e16:	82 e9       	ldi	r24, 0x92	; 146
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	70 e0       	ldi	r23, 0x00	; 0
     e1e:	04 c0       	rjmp	.+8      	; 0xe28 <Settings_Write+0x1e>
		break;

		case 2:
			eeprom_update_block (( void *) &setting2 , ( const void *) &EEMEMsetting2 , sizeof(setting2)) ;
     e20:	83 ea       	ldi	r24, 0xA3	; 163
     e22:	91 e0       	ldi	r25, 0x01	; 1
     e24:	69 e0       	ldi	r22, 0x09	; 9
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	49 e0       	ldi	r20, 0x09	; 9
     e2a:	50 e0       	ldi	r21, 0x00	; 0
     e2c:	38 d8       	rcall	.-3984   	; 0xfffffe9e <__eeprom_end+0xff7efe83>
     e2e:	08 95       	ret
		break;

		case 3:
			eeprom_update_block (( void *) &setting3 , ( const void *) &EEMEMsetting3 , sizeof(setting3)) ;
     e30:	8d ea       	ldi	r24, 0xAD	; 173
     e32:	91 e0       	ldi	r25, 0x01	; 1
     e34:	62 e1       	ldi	r22, 0x12	; 18
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	49 e0       	ldi	r20, 0x09	; 9
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	30 d8       	rcall	.-4000   	; 0xfffffe9e <__eeprom_end+0xff7efe83>
     e3e:	08 95       	ret

00000e40 <Settings_Read>:

void Settings_Read(uint8_t n)
{
	//setting1.d = 77;
	//return;
	switch(n)
     e40:	82 30       	cpi	r24, 0x02	; 2
     e42:	49 f0       	breq	.+18     	; 0xe56 <Settings_Read+0x16>
     e44:	83 30       	cpi	r24, 0x03	; 3
     e46:	79 f0       	breq	.+30     	; 0xe66 <Settings_Read+0x26>
     e48:	81 30       	cpi	r24, 0x01	; 1
     e4a:	a1 f4       	brne	.+40     	; 0xe74 <Settings_Read+0x34>
	{
		case 1:
			eeprom_read_block (( void *) &setting1 , ( const void *) &EEMEMsetting1 , sizeof(setting1)) ;
     e4c:	82 e9       	ldi	r24, 0x92	; 146
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <Settings_Read+0x1e>
		break;

		case 2:
			eeprom_read_block (( void *) &setting2 , ( const void *) &EEMEMsetting2 , sizeof(setting2)) ;
     e56:	83 ea       	ldi	r24, 0xA3	; 163
     e58:	91 e0       	ldi	r25, 0x01	; 1
     e5a:	69 e0       	ldi	r22, 0x09	; 9
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	49 e0       	ldi	r20, 0x09	; 9
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	0d d8       	rcall	.-4070   	; 0xfffffe7e <__eeprom_end+0xff7efe63>
     e64:	08 95       	ret
		break;

		case 3:
			eeprom_read_block (( void *) &setting3 , ( const void *) &EEMEMsetting3 , sizeof(setting3)) ;
     e66:	8d ea       	ldi	r24, 0xAD	; 173
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	62 e1       	ldi	r22, 0x12	; 18
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	49 e0       	ldi	r20, 0x09	; 9
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	05 d8       	rcall	.-4086   	; 0xfffffe7e <__eeprom_end+0xff7efe63>
     e74:	08 95       	ret

00000e76 <Settings_Init>:
extern Settings setting2;
extern Settings setting3;

void Settings_Init()
{
	Settings_Read(1);
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	e3 df       	rcall	.-58     	; 0xe40 <Settings_Read>
	Settings_Read(2);
     e7a:	82 e0       	ldi	r24, 0x02	; 2
     e7c:	e1 df       	rcall	.-62     	; 0xe40 <Settings_Read>
	Settings_Read(3);
     e7e:	83 e0       	ldi	r24, 0x03	; 3
     e80:	df df       	rcall	.-66     	; 0xe40 <Settings_Read>
}
     e82:	08 95       	ret

00000e84 <Relay_Init>:
#include "relay.h"

void Relay_Init()
{
	On(RELAY_DDR, RELAY1);
     e84:	ba 9a       	sbi	0x17, 2	; 23
	On(RELAY_DDR, RELAY2);
     e86:	b9 9a       	sbi	0x17, 1	; 23
	On(RELAY_DDR, RELAY3);
     e88:	b8 9a       	sbi	0x17, 0	; 23

	Off(RELAY_PORT, RELAY1);
     e8a:	c2 98       	cbi	0x18, 2	; 24
	Off(RELAY_PORT, RELAY2);
     e8c:	c1 98       	cbi	0x18, 1	; 24
	Off(RELAY_PORT, RELAY3);
     e8e:	c0 98       	cbi	0x18, 0	; 24
}
     e90:	08 95       	ret

00000e92 <HandleRelay>:

void HandleRelay(Settings * setting, float temp, uint8_t relay)
{
     e92:	9f 92       	push	r9
     e94:	af 92       	push	r10
     e96:	bf 92       	push	r11
     e98:	cf 92       	push	r12
     e9a:	df 92       	push	r13
     e9c:	ef 92       	push	r14
     e9e:	ff 92       	push	r15
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	ec 01       	movw	r28, r24
     eaa:	5a 01       	movw	r10, r20
     eac:	6b 01       	movw	r12, r22
     eae:	92 2e       	mov	r9, r18
	if (setting->direction)
     eb0:	88 85       	ldd	r24, Y+8	; 0x08
     eb2:	e8 80       	ld	r14, Y
     eb4:	f9 80       	ldd	r15, Y+1	; 0x01
     eb6:	0a 81       	ldd	r16, Y+2	; 0x02
     eb8:	1b 81       	ldd	r17, Y+3	; 0x03
     eba:	88 23       	and	r24, r24
     ebc:	61 f1       	breq	.+88     	; 0xf16 <HandleRelay+0x84>
	{
		if (temp<(setting->temp-setting->d))
     ebe:	c8 01       	movw	r24, r16
     ec0:	b7 01       	movw	r22, r14
     ec2:	2c 81       	ldd	r18, Y+4	; 0x04
     ec4:	3d 81       	ldd	r19, Y+5	; 0x05
     ec6:	4e 81       	ldd	r20, Y+6	; 0x06
     ec8:	5f 81       	ldd	r21, Y+7	; 0x07
     eca:	ce d1       	rcall	.+924    	; 0x1268 <__subsf3>
     ecc:	9b 01       	movw	r18, r22
     ece:	ac 01       	movw	r20, r24
     ed0:	c6 01       	movw	r24, r12
     ed2:	b5 01       	movw	r22, r10
     ed4:	0d d4       	rcall	.+2074   	; 0x16f0 <__ltsf2>
     ed6:	88 23       	and	r24, r24
     ed8:	64 f4       	brge	.+24     	; 0xef2 <HandleRelay+0x60>
		{
			Off(RELAY_PORT, relay);
     eda:	28 b3       	in	r18, 0x18	; 24
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	09 2c       	mov	r0, r9
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <HandleRelay+0x56>
     ee4:	88 0f       	add	r24, r24
     ee6:	99 1f       	adc	r25, r25
     ee8:	0a 94       	dec	r0
     eea:	e2 f7       	brpl	.-8      	; 0xee4 <HandleRelay+0x52>
     eec:	80 95       	com	r24
     eee:	82 23       	and	r24, r18
     ef0:	88 bb       	out	0x18, r24	; 24
		}
		if (temp>(setting->temp))
     ef2:	c6 01       	movw	r24, r12
     ef4:	b5 01       	movw	r22, r10
     ef6:	a8 01       	movw	r20, r16
     ef8:	97 01       	movw	r18, r14
     efa:	a4 d3       	rcall	.+1864   	; 0x1644 <__gtsf2>
     efc:	18 16       	cp	r1, r24
     efe:	b4 f5       	brge	.+108    	; 0xf6c <HandleRelay+0xda>
		{
			On(RELAY_PORT, relay);
     f00:	28 b3       	in	r18, 0x18	; 24
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	02 c0       	rjmp	.+4      	; 0xf0c <HandleRelay+0x7a>
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	9a 94       	dec	r9
     f0e:	e2 f7       	brpl	.-8      	; 0xf08 <HandleRelay+0x76>
     f10:	28 2b       	or	r18, r24
     f12:	28 bb       	out	0x18, r18	; 24
     f14:	2b c0       	rjmp	.+86     	; 0xf6c <HandleRelay+0xda>
		}
	}else
	{
		if (temp<(setting->temp))
     f16:	cb 01       	movw	r24, r22
     f18:	ba 01       	movw	r22, r20
     f1a:	a8 01       	movw	r20, r16
     f1c:	97 01       	movw	r18, r14
     f1e:	e8 d3       	rcall	.+2000   	; 0x16f0 <__ltsf2>
     f20:	88 23       	and	r24, r24
     f22:	5c f4       	brge	.+22     	; 0xf3a <HandleRelay+0xa8>
		{
			On(RELAY_PORT, relay);
     f24:	28 b3       	in	r18, 0x18	; 24
     f26:	81 e0       	ldi	r24, 0x01	; 1
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	09 2c       	mov	r0, r9
     f2c:	02 c0       	rjmp	.+4      	; 0xf32 <HandleRelay+0xa0>
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	0a 94       	dec	r0
     f34:	e2 f7       	brpl	.-8      	; 0xf2e <HandleRelay+0x9c>
     f36:	28 2b       	or	r18, r24
     f38:	28 bb       	out	0x18, r18	; 24
		}
		if (temp>(setting->temp+setting->d))
     f3a:	c8 01       	movw	r24, r16
     f3c:	b7 01       	movw	r22, r14
     f3e:	2c 81       	ldd	r18, Y+4	; 0x04
     f40:	3d 81       	ldd	r19, Y+5	; 0x05
     f42:	4e 81       	ldd	r20, Y+6	; 0x06
     f44:	5f 81       	ldd	r21, Y+7	; 0x07
     f46:	bb d1       	rcall	.+886    	; 0x12be <__addsf3>
     f48:	9b 01       	movw	r18, r22
     f4a:	ac 01       	movw	r20, r24
     f4c:	c6 01       	movw	r24, r12
     f4e:	b5 01       	movw	r22, r10
     f50:	79 d3       	rcall	.+1778   	; 0x1644 <__gtsf2>
     f52:	18 16       	cp	r1, r24
     f54:	5c f4       	brge	.+22     	; 0xf6c <HandleRelay+0xda>
		{
			Off(RELAY_PORT, relay);
     f56:	28 b3       	in	r18, 0x18	; 24
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <HandleRelay+0xd0>
     f5e:	88 0f       	add	r24, r24
     f60:	99 1f       	adc	r25, r25
     f62:	9a 94       	dec	r9
     f64:	e2 f7       	brpl	.-8      	; 0xf5e <HandleRelay+0xcc>
     f66:	80 95       	com	r24
     f68:	82 23       	and	r24, r18
     f6a:	88 bb       	out	0x18, r24	; 24
		}
	}
}
     f6c:	df 91       	pop	r29
     f6e:	cf 91       	pop	r28
     f70:	1f 91       	pop	r17
     f72:	0f 91       	pop	r16
     f74:	ff 90       	pop	r15
     f76:	ef 90       	pop	r14
     f78:	df 90       	pop	r13
     f7a:	cf 90       	pop	r12
     f7c:	bf 90       	pop	r11
     f7e:	af 90       	pop	r10
     f80:	9f 90       	pop	r9
     f82:	08 95       	ret

00000f84 <__fixunssfsi>:
     f84:	ef 92       	push	r14
     f86:	ff 92       	push	r15
     f88:	0f 93       	push	r16
     f8a:	1f 93       	push	r17
     f8c:	7b 01       	movw	r14, r22
     f8e:	8c 01       	movw	r16, r24
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	30 e0       	ldi	r19, 0x00	; 0
     f94:	40 e0       	ldi	r20, 0x00	; 0
     f96:	5f e4       	ldi	r21, 0x4F	; 79
     f98:	80 d3       	rcall	.+1792   	; 0x169a <__gesf2>
     f9a:	88 23       	and	r24, r24
     f9c:	7c f0       	brlt	.+30     	; 0xfbc <__fixunssfsi+0x38>
     f9e:	c8 01       	movw	r24, r16
     fa0:	b7 01       	movw	r22, r14
     fa2:	20 e0       	ldi	r18, 0x00	; 0
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	5f e4       	ldi	r21, 0x4F	; 79
     faa:	5e d1       	rcall	.+700    	; 0x1268 <__subsf3>
     fac:	26 d4       	rcall	.+2124   	; 0x17fa <__fixsfsi>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	20 50       	subi	r18, 0x00	; 0
     fb4:	30 40       	sbci	r19, 0x00	; 0
     fb6:	40 40       	sbci	r20, 0x00	; 0
     fb8:	50 48       	sbci	r21, 0x80	; 128
     fba:	05 c0       	rjmp	.+10     	; 0xfc6 <__fixunssfsi+0x42>
     fbc:	c8 01       	movw	r24, r16
     fbe:	b7 01       	movw	r22, r14
     fc0:	1c d4       	rcall	.+2104   	; 0x17fa <__fixsfsi>
     fc2:	9b 01       	movw	r18, r22
     fc4:	ac 01       	movw	r20, r24
     fc6:	b9 01       	movw	r22, r18
     fc8:	ca 01       	movw	r24, r20
     fca:	1f 91       	pop	r17
     fcc:	0f 91       	pop	r16
     fce:	ff 90       	pop	r15
     fd0:	ef 90       	pop	r14
     fd2:	08 95       	ret

00000fd4 <_fpadd_parts>:
     fd4:	a0 e0       	ldi	r26, 0x00	; 0
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	ef ee       	ldi	r30, 0xEF	; 239
     fda:	f7 e0       	ldi	r31, 0x07	; 7
     fdc:	12 c7       	rjmp	.+3620   	; 0x1e02 <__prologue_saves__>
     fde:	dc 01       	movw	r26, r24
     fe0:	2b 01       	movw	r4, r22
     fe2:	fa 01       	movw	r30, r20
     fe4:	9c 91       	ld	r25, X
     fe6:	92 30       	cpi	r25, 0x02	; 2
     fe8:	08 f4       	brcc	.+2      	; 0xfec <_fpadd_parts+0x18>
     fea:	39 c1       	rjmp	.+626    	; 0x125e <_fpadd_parts+0x28a>
     fec:	eb 01       	movw	r28, r22
     fee:	88 81       	ld	r24, Y
     ff0:	82 30       	cpi	r24, 0x02	; 2
     ff2:	08 f4       	brcc	.+2      	; 0xff6 <_fpadd_parts+0x22>
     ff4:	33 c1       	rjmp	.+614    	; 0x125c <_fpadd_parts+0x288>
     ff6:	94 30       	cpi	r25, 0x04	; 4
     ff8:	69 f4       	brne	.+26     	; 0x1014 <_fpadd_parts+0x40>
     ffa:	84 30       	cpi	r24, 0x04	; 4
     ffc:	09 f0       	breq	.+2      	; 0x1000 <_fpadd_parts+0x2c>
     ffe:	2f c1       	rjmp	.+606    	; 0x125e <_fpadd_parts+0x28a>
    1000:	11 96       	adiw	r26, 0x01	; 1
    1002:	9c 91       	ld	r25, X
    1004:	11 97       	sbiw	r26, 0x01	; 1
    1006:	89 81       	ldd	r24, Y+1	; 0x01
    1008:	98 17       	cp	r25, r24
    100a:	09 f4       	brne	.+2      	; 0x100e <_fpadd_parts+0x3a>
    100c:	28 c1       	rjmp	.+592    	; 0x125e <_fpadd_parts+0x28a>
    100e:	ac e7       	ldi	r26, 0x7C	; 124
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	25 c1       	rjmp	.+586    	; 0x125e <_fpadd_parts+0x28a>
    1014:	84 30       	cpi	r24, 0x04	; 4
    1016:	09 f4       	brne	.+2      	; 0x101a <_fpadd_parts+0x46>
    1018:	21 c1       	rjmp	.+578    	; 0x125c <_fpadd_parts+0x288>
    101a:	82 30       	cpi	r24, 0x02	; 2
    101c:	a9 f4       	brne	.+42     	; 0x1048 <_fpadd_parts+0x74>
    101e:	92 30       	cpi	r25, 0x02	; 2
    1020:	09 f0       	breq	.+2      	; 0x1024 <_fpadd_parts+0x50>
    1022:	1d c1       	rjmp	.+570    	; 0x125e <_fpadd_parts+0x28a>
    1024:	9a 01       	movw	r18, r20
    1026:	ad 01       	movw	r20, r26
    1028:	88 e0       	ldi	r24, 0x08	; 8
    102a:	ea 01       	movw	r28, r20
    102c:	09 90       	ld	r0, Y+
    102e:	ae 01       	movw	r20, r28
    1030:	e9 01       	movw	r28, r18
    1032:	09 92       	st	Y+, r0
    1034:	9e 01       	movw	r18, r28
    1036:	81 50       	subi	r24, 0x01	; 1
    1038:	c1 f7       	brne	.-16     	; 0x102a <_fpadd_parts+0x56>
    103a:	e2 01       	movw	r28, r4
    103c:	89 81       	ldd	r24, Y+1	; 0x01
    103e:	11 96       	adiw	r26, 0x01	; 1
    1040:	9c 91       	ld	r25, X
    1042:	89 23       	and	r24, r25
    1044:	81 83       	std	Z+1, r24	; 0x01
    1046:	08 c1       	rjmp	.+528    	; 0x1258 <_fpadd_parts+0x284>
    1048:	92 30       	cpi	r25, 0x02	; 2
    104a:	09 f4       	brne	.+2      	; 0x104e <_fpadd_parts+0x7a>
    104c:	07 c1       	rjmp	.+526    	; 0x125c <_fpadd_parts+0x288>
    104e:	12 96       	adiw	r26, 0x02	; 2
    1050:	2d 90       	ld	r2, X+
    1052:	3c 90       	ld	r3, X
    1054:	13 97       	sbiw	r26, 0x03	; 3
    1056:	eb 01       	movw	r28, r22
    1058:	8a 81       	ldd	r24, Y+2	; 0x02
    105a:	9b 81       	ldd	r25, Y+3	; 0x03
    105c:	14 96       	adiw	r26, 0x04	; 4
    105e:	ad 90       	ld	r10, X+
    1060:	bd 90       	ld	r11, X+
    1062:	cd 90       	ld	r12, X+
    1064:	dc 90       	ld	r13, X
    1066:	17 97       	sbiw	r26, 0x07	; 7
    1068:	ec 80       	ldd	r14, Y+4	; 0x04
    106a:	fd 80       	ldd	r15, Y+5	; 0x05
    106c:	0e 81       	ldd	r16, Y+6	; 0x06
    106e:	1f 81       	ldd	r17, Y+7	; 0x07
    1070:	91 01       	movw	r18, r2
    1072:	28 1b       	sub	r18, r24
    1074:	39 0b       	sbc	r19, r25
    1076:	b9 01       	movw	r22, r18
    1078:	37 ff       	sbrs	r19, 7
    107a:	04 c0       	rjmp	.+8      	; 0x1084 <_fpadd_parts+0xb0>
    107c:	66 27       	eor	r22, r22
    107e:	77 27       	eor	r23, r23
    1080:	62 1b       	sub	r22, r18
    1082:	73 0b       	sbc	r23, r19
    1084:	60 32       	cpi	r22, 0x20	; 32
    1086:	71 05       	cpc	r23, r1
    1088:	0c f0       	brlt	.+2      	; 0x108c <_fpadd_parts+0xb8>
    108a:	61 c0       	rjmp	.+194    	; 0x114e <_fpadd_parts+0x17a>
    108c:	12 16       	cp	r1, r18
    108e:	13 06       	cpc	r1, r19
    1090:	6c f5       	brge	.+90     	; 0x10ec <_fpadd_parts+0x118>
    1092:	37 01       	movw	r6, r14
    1094:	48 01       	movw	r8, r16
    1096:	06 2e       	mov	r0, r22
    1098:	04 c0       	rjmp	.+8      	; 0x10a2 <_fpadd_parts+0xce>
    109a:	96 94       	lsr	r9
    109c:	87 94       	ror	r8
    109e:	77 94       	ror	r7
    10a0:	67 94       	ror	r6
    10a2:	0a 94       	dec	r0
    10a4:	d2 f7       	brpl	.-12     	; 0x109a <_fpadd_parts+0xc6>
    10a6:	21 e0       	ldi	r18, 0x01	; 1
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	40 e0       	ldi	r20, 0x00	; 0
    10ac:	50 e0       	ldi	r21, 0x00	; 0
    10ae:	04 c0       	rjmp	.+8      	; 0x10b8 <_fpadd_parts+0xe4>
    10b0:	22 0f       	add	r18, r18
    10b2:	33 1f       	adc	r19, r19
    10b4:	44 1f       	adc	r20, r20
    10b6:	55 1f       	adc	r21, r21
    10b8:	6a 95       	dec	r22
    10ba:	d2 f7       	brpl	.-12     	; 0x10b0 <_fpadd_parts+0xdc>
    10bc:	21 50       	subi	r18, 0x01	; 1
    10be:	30 40       	sbci	r19, 0x00	; 0
    10c0:	40 40       	sbci	r20, 0x00	; 0
    10c2:	50 40       	sbci	r21, 0x00	; 0
    10c4:	2e 21       	and	r18, r14
    10c6:	3f 21       	and	r19, r15
    10c8:	40 23       	and	r20, r16
    10ca:	51 23       	and	r21, r17
    10cc:	21 15       	cp	r18, r1
    10ce:	31 05       	cpc	r19, r1
    10d0:	41 05       	cpc	r20, r1
    10d2:	51 05       	cpc	r21, r1
    10d4:	21 f0       	breq	.+8      	; 0x10de <_fpadd_parts+0x10a>
    10d6:	21 e0       	ldi	r18, 0x01	; 1
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	40 e0       	ldi	r20, 0x00	; 0
    10dc:	50 e0       	ldi	r21, 0x00	; 0
    10de:	79 01       	movw	r14, r18
    10e0:	8a 01       	movw	r16, r20
    10e2:	e6 28       	or	r14, r6
    10e4:	f7 28       	or	r15, r7
    10e6:	08 29       	or	r16, r8
    10e8:	19 29       	or	r17, r9
    10ea:	3c c0       	rjmp	.+120    	; 0x1164 <_fpadd_parts+0x190>
    10ec:	23 2b       	or	r18, r19
    10ee:	d1 f1       	breq	.+116    	; 0x1164 <_fpadd_parts+0x190>
    10f0:	26 0e       	add	r2, r22
    10f2:	37 1e       	adc	r3, r23
    10f4:	35 01       	movw	r6, r10
    10f6:	46 01       	movw	r8, r12
    10f8:	06 2e       	mov	r0, r22
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <_fpadd_parts+0x130>
    10fc:	96 94       	lsr	r9
    10fe:	87 94       	ror	r8
    1100:	77 94       	ror	r7
    1102:	67 94       	ror	r6
    1104:	0a 94       	dec	r0
    1106:	d2 f7       	brpl	.-12     	; 0x10fc <_fpadd_parts+0x128>
    1108:	21 e0       	ldi	r18, 0x01	; 1
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	40 e0       	ldi	r20, 0x00	; 0
    110e:	50 e0       	ldi	r21, 0x00	; 0
    1110:	04 c0       	rjmp	.+8      	; 0x111a <_fpadd_parts+0x146>
    1112:	22 0f       	add	r18, r18
    1114:	33 1f       	adc	r19, r19
    1116:	44 1f       	adc	r20, r20
    1118:	55 1f       	adc	r21, r21
    111a:	6a 95       	dec	r22
    111c:	d2 f7       	brpl	.-12     	; 0x1112 <_fpadd_parts+0x13e>
    111e:	21 50       	subi	r18, 0x01	; 1
    1120:	30 40       	sbci	r19, 0x00	; 0
    1122:	40 40       	sbci	r20, 0x00	; 0
    1124:	50 40       	sbci	r21, 0x00	; 0
    1126:	2a 21       	and	r18, r10
    1128:	3b 21       	and	r19, r11
    112a:	4c 21       	and	r20, r12
    112c:	5d 21       	and	r21, r13
    112e:	21 15       	cp	r18, r1
    1130:	31 05       	cpc	r19, r1
    1132:	41 05       	cpc	r20, r1
    1134:	51 05       	cpc	r21, r1
    1136:	21 f0       	breq	.+8      	; 0x1140 <_fpadd_parts+0x16c>
    1138:	21 e0       	ldi	r18, 0x01	; 1
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	40 e0       	ldi	r20, 0x00	; 0
    113e:	50 e0       	ldi	r21, 0x00	; 0
    1140:	59 01       	movw	r10, r18
    1142:	6a 01       	movw	r12, r20
    1144:	a6 28       	or	r10, r6
    1146:	b7 28       	or	r11, r7
    1148:	c8 28       	or	r12, r8
    114a:	d9 28       	or	r13, r9
    114c:	0b c0       	rjmp	.+22     	; 0x1164 <_fpadd_parts+0x190>
    114e:	82 15       	cp	r24, r2
    1150:	93 05       	cpc	r25, r3
    1152:	2c f0       	brlt	.+10     	; 0x115e <_fpadd_parts+0x18a>
    1154:	1c 01       	movw	r2, r24
    1156:	aa 24       	eor	r10, r10
    1158:	bb 24       	eor	r11, r11
    115a:	65 01       	movw	r12, r10
    115c:	03 c0       	rjmp	.+6      	; 0x1164 <_fpadd_parts+0x190>
    115e:	ee 24       	eor	r14, r14
    1160:	ff 24       	eor	r15, r15
    1162:	87 01       	movw	r16, r14
    1164:	11 96       	adiw	r26, 0x01	; 1
    1166:	9c 91       	ld	r25, X
    1168:	d2 01       	movw	r26, r4
    116a:	11 96       	adiw	r26, 0x01	; 1
    116c:	8c 91       	ld	r24, X
    116e:	98 17       	cp	r25, r24
    1170:	09 f4       	brne	.+2      	; 0x1174 <_fpadd_parts+0x1a0>
    1172:	45 c0       	rjmp	.+138    	; 0x11fe <_fpadd_parts+0x22a>
    1174:	99 23       	and	r25, r25
    1176:	39 f0       	breq	.+14     	; 0x1186 <_fpadd_parts+0x1b2>
    1178:	a8 01       	movw	r20, r16
    117a:	97 01       	movw	r18, r14
    117c:	2a 19       	sub	r18, r10
    117e:	3b 09       	sbc	r19, r11
    1180:	4c 09       	sbc	r20, r12
    1182:	5d 09       	sbc	r21, r13
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <_fpadd_parts+0x1be>
    1186:	a6 01       	movw	r20, r12
    1188:	95 01       	movw	r18, r10
    118a:	2e 19       	sub	r18, r14
    118c:	3f 09       	sbc	r19, r15
    118e:	40 0b       	sbc	r20, r16
    1190:	51 0b       	sbc	r21, r17
    1192:	57 fd       	sbrc	r21, 7
    1194:	08 c0       	rjmp	.+16     	; 0x11a6 <_fpadd_parts+0x1d2>
    1196:	11 82       	std	Z+1, r1	; 0x01
    1198:	33 82       	std	Z+3, r3	; 0x03
    119a:	22 82       	std	Z+2, r2	; 0x02
    119c:	24 83       	std	Z+4, r18	; 0x04
    119e:	35 83       	std	Z+5, r19	; 0x05
    11a0:	46 83       	std	Z+6, r20	; 0x06
    11a2:	57 83       	std	Z+7, r21	; 0x07
    11a4:	1d c0       	rjmp	.+58     	; 0x11e0 <_fpadd_parts+0x20c>
    11a6:	81 e0       	ldi	r24, 0x01	; 1
    11a8:	81 83       	std	Z+1, r24	; 0x01
    11aa:	33 82       	std	Z+3, r3	; 0x03
    11ac:	22 82       	std	Z+2, r2	; 0x02
    11ae:	88 27       	eor	r24, r24
    11b0:	99 27       	eor	r25, r25
    11b2:	dc 01       	movw	r26, r24
    11b4:	82 1b       	sub	r24, r18
    11b6:	93 0b       	sbc	r25, r19
    11b8:	a4 0b       	sbc	r26, r20
    11ba:	b5 0b       	sbc	r27, r21
    11bc:	84 83       	std	Z+4, r24	; 0x04
    11be:	95 83       	std	Z+5, r25	; 0x05
    11c0:	a6 83       	std	Z+6, r26	; 0x06
    11c2:	b7 83       	std	Z+7, r27	; 0x07
    11c4:	0d c0       	rjmp	.+26     	; 0x11e0 <_fpadd_parts+0x20c>
    11c6:	22 0f       	add	r18, r18
    11c8:	33 1f       	adc	r19, r19
    11ca:	44 1f       	adc	r20, r20
    11cc:	55 1f       	adc	r21, r21
    11ce:	24 83       	std	Z+4, r18	; 0x04
    11d0:	35 83       	std	Z+5, r19	; 0x05
    11d2:	46 83       	std	Z+6, r20	; 0x06
    11d4:	57 83       	std	Z+7, r21	; 0x07
    11d6:	82 81       	ldd	r24, Z+2	; 0x02
    11d8:	93 81       	ldd	r25, Z+3	; 0x03
    11da:	01 97       	sbiw	r24, 0x01	; 1
    11dc:	93 83       	std	Z+3, r25	; 0x03
    11de:	82 83       	std	Z+2, r24	; 0x02
    11e0:	24 81       	ldd	r18, Z+4	; 0x04
    11e2:	35 81       	ldd	r19, Z+5	; 0x05
    11e4:	46 81       	ldd	r20, Z+6	; 0x06
    11e6:	57 81       	ldd	r21, Z+7	; 0x07
    11e8:	da 01       	movw	r26, r20
    11ea:	c9 01       	movw	r24, r18
    11ec:	01 97       	sbiw	r24, 0x01	; 1
    11ee:	a1 09       	sbc	r26, r1
    11f0:	b1 09       	sbc	r27, r1
    11f2:	8f 5f       	subi	r24, 0xFF	; 255
    11f4:	9f 4f       	sbci	r25, 0xFF	; 255
    11f6:	af 4f       	sbci	r26, 0xFF	; 255
    11f8:	bf 43       	sbci	r27, 0x3F	; 63
    11fa:	28 f3       	brcs	.-54     	; 0x11c6 <_fpadd_parts+0x1f2>
    11fc:	0b c0       	rjmp	.+22     	; 0x1214 <_fpadd_parts+0x240>
    11fe:	91 83       	std	Z+1, r25	; 0x01
    1200:	33 82       	std	Z+3, r3	; 0x03
    1202:	22 82       	std	Z+2, r2	; 0x02
    1204:	ea 0c       	add	r14, r10
    1206:	fb 1c       	adc	r15, r11
    1208:	0c 1d       	adc	r16, r12
    120a:	1d 1d       	adc	r17, r13
    120c:	e4 82       	std	Z+4, r14	; 0x04
    120e:	f5 82       	std	Z+5, r15	; 0x05
    1210:	06 83       	std	Z+6, r16	; 0x06
    1212:	17 83       	std	Z+7, r17	; 0x07
    1214:	83 e0       	ldi	r24, 0x03	; 3
    1216:	80 83       	st	Z, r24
    1218:	24 81       	ldd	r18, Z+4	; 0x04
    121a:	35 81       	ldd	r19, Z+5	; 0x05
    121c:	46 81       	ldd	r20, Z+6	; 0x06
    121e:	57 81       	ldd	r21, Z+7	; 0x07
    1220:	57 ff       	sbrs	r21, 7
    1222:	1a c0       	rjmp	.+52     	; 0x1258 <_fpadd_parts+0x284>
    1224:	c9 01       	movw	r24, r18
    1226:	aa 27       	eor	r26, r26
    1228:	97 fd       	sbrc	r25, 7
    122a:	a0 95       	com	r26
    122c:	ba 2f       	mov	r27, r26
    122e:	81 70       	andi	r24, 0x01	; 1
    1230:	90 70       	andi	r25, 0x00	; 0
    1232:	a0 70       	andi	r26, 0x00	; 0
    1234:	b0 70       	andi	r27, 0x00	; 0
    1236:	56 95       	lsr	r21
    1238:	47 95       	ror	r20
    123a:	37 95       	ror	r19
    123c:	27 95       	ror	r18
    123e:	82 2b       	or	r24, r18
    1240:	93 2b       	or	r25, r19
    1242:	a4 2b       	or	r26, r20
    1244:	b5 2b       	or	r27, r21
    1246:	84 83       	std	Z+4, r24	; 0x04
    1248:	95 83       	std	Z+5, r25	; 0x05
    124a:	a6 83       	std	Z+6, r26	; 0x06
    124c:	b7 83       	std	Z+7, r27	; 0x07
    124e:	82 81       	ldd	r24, Z+2	; 0x02
    1250:	93 81       	ldd	r25, Z+3	; 0x03
    1252:	01 96       	adiw	r24, 0x01	; 1
    1254:	93 83       	std	Z+3, r25	; 0x03
    1256:	82 83       	std	Z+2, r24	; 0x02
    1258:	df 01       	movw	r26, r30
    125a:	01 c0       	rjmp	.+2      	; 0x125e <_fpadd_parts+0x28a>
    125c:	d2 01       	movw	r26, r4
    125e:	cd 01       	movw	r24, r26
    1260:	cd b7       	in	r28, 0x3d	; 61
    1262:	de b7       	in	r29, 0x3e	; 62
    1264:	e2 e1       	ldi	r30, 0x12	; 18
    1266:	e9 c5       	rjmp	.+3026   	; 0x1e3a <__epilogue_restores__>

00001268 <__subsf3>:
    1268:	a0 e2       	ldi	r26, 0x20	; 32
    126a:	b0 e0       	ldi	r27, 0x00	; 0
    126c:	e9 e3       	ldi	r30, 0x39	; 57
    126e:	f9 e0       	ldi	r31, 0x09	; 9
    1270:	d4 c5       	rjmp	.+2984   	; 0x1e1a <__prologue_saves__+0x18>
    1272:	69 83       	std	Y+1, r22	; 0x01
    1274:	7a 83       	std	Y+2, r23	; 0x02
    1276:	8b 83       	std	Y+3, r24	; 0x03
    1278:	9c 83       	std	Y+4, r25	; 0x04
    127a:	2d 83       	std	Y+5, r18	; 0x05
    127c:	3e 83       	std	Y+6, r19	; 0x06
    127e:	4f 83       	std	Y+7, r20	; 0x07
    1280:	58 87       	std	Y+8, r21	; 0x08
    1282:	e9 e0       	ldi	r30, 0x09	; 9
    1284:	ee 2e       	mov	r14, r30
    1286:	f1 2c       	mov	r15, r1
    1288:	ec 0e       	add	r14, r28
    128a:	fd 1e       	adc	r15, r29
    128c:	ce 01       	movw	r24, r28
    128e:	01 96       	adiw	r24, 0x01	; 1
    1290:	b7 01       	movw	r22, r14
    1292:	9d d4       	rcall	.+2362   	; 0x1bce <__unpack_f>
    1294:	8e 01       	movw	r16, r28
    1296:	0f 5e       	subi	r16, 0xEF	; 239
    1298:	1f 4f       	sbci	r17, 0xFF	; 255
    129a:	ce 01       	movw	r24, r28
    129c:	05 96       	adiw	r24, 0x05	; 5
    129e:	b8 01       	movw	r22, r16
    12a0:	96 d4       	rcall	.+2348   	; 0x1bce <__unpack_f>
    12a2:	8a 89       	ldd	r24, Y+18	; 0x12
    12a4:	91 e0       	ldi	r25, 0x01	; 1
    12a6:	89 27       	eor	r24, r25
    12a8:	8a 8b       	std	Y+18, r24	; 0x12
    12aa:	c7 01       	movw	r24, r14
    12ac:	b8 01       	movw	r22, r16
    12ae:	ae 01       	movw	r20, r28
    12b0:	47 5e       	subi	r20, 0xE7	; 231
    12b2:	5f 4f       	sbci	r21, 0xFF	; 255
    12b4:	8f de       	rcall	.-738    	; 0xfd4 <_fpadd_parts>
    12b6:	b6 d3       	rcall	.+1900   	; 0x1a24 <__pack_f>
    12b8:	a0 96       	adiw	r28, 0x20	; 32
    12ba:	e6 e0       	ldi	r30, 0x06	; 6
    12bc:	ca c5       	rjmp	.+2964   	; 0x1e52 <__epilogue_restores__+0x18>

000012be <__addsf3>:
    12be:	a0 e2       	ldi	r26, 0x20	; 32
    12c0:	b0 e0       	ldi	r27, 0x00	; 0
    12c2:	e4 e6       	ldi	r30, 0x64	; 100
    12c4:	f9 e0       	ldi	r31, 0x09	; 9
    12c6:	a9 c5       	rjmp	.+2898   	; 0x1e1a <__prologue_saves__+0x18>
    12c8:	69 83       	std	Y+1, r22	; 0x01
    12ca:	7a 83       	std	Y+2, r23	; 0x02
    12cc:	8b 83       	std	Y+3, r24	; 0x03
    12ce:	9c 83       	std	Y+4, r25	; 0x04
    12d0:	2d 83       	std	Y+5, r18	; 0x05
    12d2:	3e 83       	std	Y+6, r19	; 0x06
    12d4:	4f 83       	std	Y+7, r20	; 0x07
    12d6:	58 87       	std	Y+8, r21	; 0x08
    12d8:	f9 e0       	ldi	r31, 0x09	; 9
    12da:	ef 2e       	mov	r14, r31
    12dc:	f1 2c       	mov	r15, r1
    12de:	ec 0e       	add	r14, r28
    12e0:	fd 1e       	adc	r15, r29
    12e2:	ce 01       	movw	r24, r28
    12e4:	01 96       	adiw	r24, 0x01	; 1
    12e6:	b7 01       	movw	r22, r14
    12e8:	72 d4       	rcall	.+2276   	; 0x1bce <__unpack_f>
    12ea:	8e 01       	movw	r16, r28
    12ec:	0f 5e       	subi	r16, 0xEF	; 239
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	ce 01       	movw	r24, r28
    12f2:	05 96       	adiw	r24, 0x05	; 5
    12f4:	b8 01       	movw	r22, r16
    12f6:	6b d4       	rcall	.+2262   	; 0x1bce <__unpack_f>
    12f8:	c7 01       	movw	r24, r14
    12fa:	b8 01       	movw	r22, r16
    12fc:	ae 01       	movw	r20, r28
    12fe:	47 5e       	subi	r20, 0xE7	; 231
    1300:	5f 4f       	sbci	r21, 0xFF	; 255
    1302:	68 de       	rcall	.-816    	; 0xfd4 <_fpadd_parts>
    1304:	8f d3       	rcall	.+1822   	; 0x1a24 <__pack_f>
    1306:	a0 96       	adiw	r28, 0x20	; 32
    1308:	e6 e0       	ldi	r30, 0x06	; 6
    130a:	a3 c5       	rjmp	.+2886   	; 0x1e52 <__epilogue_restores__+0x18>

0000130c <__mulsf3>:
    130c:	a0 e2       	ldi	r26, 0x20	; 32
    130e:	b0 e0       	ldi	r27, 0x00	; 0
    1310:	eb e8       	ldi	r30, 0x8B	; 139
    1312:	f9 e0       	ldi	r31, 0x09	; 9
    1314:	76 c5       	rjmp	.+2796   	; 0x1e02 <__prologue_saves__>
    1316:	69 83       	std	Y+1, r22	; 0x01
    1318:	7a 83       	std	Y+2, r23	; 0x02
    131a:	8b 83       	std	Y+3, r24	; 0x03
    131c:	9c 83       	std	Y+4, r25	; 0x04
    131e:	2d 83       	std	Y+5, r18	; 0x05
    1320:	3e 83       	std	Y+6, r19	; 0x06
    1322:	4f 83       	std	Y+7, r20	; 0x07
    1324:	58 87       	std	Y+8, r21	; 0x08
    1326:	ce 01       	movw	r24, r28
    1328:	01 96       	adiw	r24, 0x01	; 1
    132a:	be 01       	movw	r22, r28
    132c:	67 5f       	subi	r22, 0xF7	; 247
    132e:	7f 4f       	sbci	r23, 0xFF	; 255
    1330:	4e d4       	rcall	.+2204   	; 0x1bce <__unpack_f>
    1332:	ce 01       	movw	r24, r28
    1334:	05 96       	adiw	r24, 0x05	; 5
    1336:	be 01       	movw	r22, r28
    1338:	6f 5e       	subi	r22, 0xEF	; 239
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	48 d4       	rcall	.+2192   	; 0x1bce <__unpack_f>
    133e:	99 85       	ldd	r25, Y+9	; 0x09
    1340:	92 30       	cpi	r25, 0x02	; 2
    1342:	88 f0       	brcs	.+34     	; 0x1366 <__mulsf3+0x5a>
    1344:	89 89       	ldd	r24, Y+17	; 0x11
    1346:	82 30       	cpi	r24, 0x02	; 2
    1348:	c8 f0       	brcs	.+50     	; 0x137c <__mulsf3+0x70>
    134a:	94 30       	cpi	r25, 0x04	; 4
    134c:	19 f4       	brne	.+6      	; 0x1354 <__mulsf3+0x48>
    134e:	82 30       	cpi	r24, 0x02	; 2
    1350:	51 f4       	brne	.+20     	; 0x1366 <__mulsf3+0x5a>
    1352:	04 c0       	rjmp	.+8      	; 0x135c <__mulsf3+0x50>
    1354:	84 30       	cpi	r24, 0x04	; 4
    1356:	29 f4       	brne	.+10     	; 0x1362 <__mulsf3+0x56>
    1358:	92 30       	cpi	r25, 0x02	; 2
    135a:	81 f4       	brne	.+32     	; 0x137c <__mulsf3+0x70>
    135c:	8c e7       	ldi	r24, 0x7C	; 124
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	c6 c0       	rjmp	.+396    	; 0x14ee <__mulsf3+0x1e2>
    1362:	92 30       	cpi	r25, 0x02	; 2
    1364:	49 f4       	brne	.+18     	; 0x1378 <__mulsf3+0x6c>
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	9a 85       	ldd	r25, Y+10	; 0x0a
    136a:	8a 89       	ldd	r24, Y+18	; 0x12
    136c:	98 13       	cpse	r25, r24
    136e:	21 e0       	ldi	r18, 0x01	; 1
    1370:	2a 87       	std	Y+10, r18	; 0x0a
    1372:	ce 01       	movw	r24, r28
    1374:	09 96       	adiw	r24, 0x09	; 9
    1376:	bb c0       	rjmp	.+374    	; 0x14ee <__mulsf3+0x1e2>
    1378:	82 30       	cpi	r24, 0x02	; 2
    137a:	49 f4       	brne	.+18     	; 0x138e <__mulsf3+0x82>
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1380:	8a 89       	ldd	r24, Y+18	; 0x12
    1382:	98 13       	cpse	r25, r24
    1384:	21 e0       	ldi	r18, 0x01	; 1
    1386:	2a 8b       	std	Y+18, r18	; 0x12
    1388:	ce 01       	movw	r24, r28
    138a:	41 96       	adiw	r24, 0x11	; 17
    138c:	b0 c0       	rjmp	.+352    	; 0x14ee <__mulsf3+0x1e2>
    138e:	2d 84       	ldd	r2, Y+13	; 0x0d
    1390:	3e 84       	ldd	r3, Y+14	; 0x0e
    1392:	4f 84       	ldd	r4, Y+15	; 0x0f
    1394:	58 88       	ldd	r5, Y+16	; 0x10
    1396:	6d 88       	ldd	r6, Y+21	; 0x15
    1398:	7e 88       	ldd	r7, Y+22	; 0x16
    139a:	8f 88       	ldd	r8, Y+23	; 0x17
    139c:	98 8c       	ldd	r9, Y+24	; 0x18
    139e:	ee 24       	eor	r14, r14
    13a0:	ff 24       	eor	r15, r15
    13a2:	87 01       	movw	r16, r14
    13a4:	aa 24       	eor	r10, r10
    13a6:	bb 24       	eor	r11, r11
    13a8:	65 01       	movw	r12, r10
    13aa:	40 e0       	ldi	r20, 0x00	; 0
    13ac:	50 e0       	ldi	r21, 0x00	; 0
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	e0 e0       	ldi	r30, 0x00	; 0
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	c1 01       	movw	r24, r2
    13b8:	81 70       	andi	r24, 0x01	; 1
    13ba:	90 70       	andi	r25, 0x00	; 0
    13bc:	89 2b       	or	r24, r25
    13be:	e9 f0       	breq	.+58     	; 0x13fa <__mulsf3+0xee>
    13c0:	e6 0c       	add	r14, r6
    13c2:	f7 1c       	adc	r15, r7
    13c4:	08 1d       	adc	r16, r8
    13c6:	19 1d       	adc	r17, r9
    13c8:	9a 01       	movw	r18, r20
    13ca:	ab 01       	movw	r20, r22
    13cc:	2a 0d       	add	r18, r10
    13ce:	3b 1d       	adc	r19, r11
    13d0:	4c 1d       	adc	r20, r12
    13d2:	5d 1d       	adc	r21, r13
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	a0 e0       	ldi	r26, 0x00	; 0
    13da:	b0 e0       	ldi	r27, 0x00	; 0
    13dc:	e6 14       	cp	r14, r6
    13de:	f7 04       	cpc	r15, r7
    13e0:	08 05       	cpc	r16, r8
    13e2:	19 05       	cpc	r17, r9
    13e4:	20 f4       	brcc	.+8      	; 0x13ee <__mulsf3+0xe2>
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	a0 e0       	ldi	r26, 0x00	; 0
    13ec:	b0 e0       	ldi	r27, 0x00	; 0
    13ee:	ba 01       	movw	r22, r20
    13f0:	a9 01       	movw	r20, r18
    13f2:	48 0f       	add	r20, r24
    13f4:	59 1f       	adc	r21, r25
    13f6:	6a 1f       	adc	r22, r26
    13f8:	7b 1f       	adc	r23, r27
    13fa:	aa 0c       	add	r10, r10
    13fc:	bb 1c       	adc	r11, r11
    13fe:	cc 1c       	adc	r12, r12
    1400:	dd 1c       	adc	r13, r13
    1402:	97 fe       	sbrs	r9, 7
    1404:	08 c0       	rjmp	.+16     	; 0x1416 <__mulsf3+0x10a>
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	a0 e0       	ldi	r26, 0x00	; 0
    140c:	b0 e0       	ldi	r27, 0x00	; 0
    140e:	a8 2a       	or	r10, r24
    1410:	b9 2a       	or	r11, r25
    1412:	ca 2a       	or	r12, r26
    1414:	db 2a       	or	r13, r27
    1416:	31 96       	adiw	r30, 0x01	; 1
    1418:	e0 32       	cpi	r30, 0x20	; 32
    141a:	f1 05       	cpc	r31, r1
    141c:	49 f0       	breq	.+18     	; 0x1430 <__mulsf3+0x124>
    141e:	66 0c       	add	r6, r6
    1420:	77 1c       	adc	r7, r7
    1422:	88 1c       	adc	r8, r8
    1424:	99 1c       	adc	r9, r9
    1426:	56 94       	lsr	r5
    1428:	47 94       	ror	r4
    142a:	37 94       	ror	r3
    142c:	27 94       	ror	r2
    142e:	c3 cf       	rjmp	.-122    	; 0x13b6 <__mulsf3+0xaa>
    1430:	fa 85       	ldd	r31, Y+10	; 0x0a
    1432:	ea 89       	ldd	r30, Y+18	; 0x12
    1434:	2b 89       	ldd	r18, Y+19	; 0x13
    1436:	3c 89       	ldd	r19, Y+20	; 0x14
    1438:	8b 85       	ldd	r24, Y+11	; 0x0b
    143a:	9c 85       	ldd	r25, Y+12	; 0x0c
    143c:	28 0f       	add	r18, r24
    143e:	39 1f       	adc	r19, r25
    1440:	2e 5f       	subi	r18, 0xFE	; 254
    1442:	3f 4f       	sbci	r19, 0xFF	; 255
    1444:	17 c0       	rjmp	.+46     	; 0x1474 <__mulsf3+0x168>
    1446:	ca 01       	movw	r24, r20
    1448:	81 70       	andi	r24, 0x01	; 1
    144a:	90 70       	andi	r25, 0x00	; 0
    144c:	89 2b       	or	r24, r25
    144e:	61 f0       	breq	.+24     	; 0x1468 <__mulsf3+0x15c>
    1450:	16 95       	lsr	r17
    1452:	07 95       	ror	r16
    1454:	f7 94       	ror	r15
    1456:	e7 94       	ror	r14
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	a0 e0       	ldi	r26, 0x00	; 0
    145e:	b0 e8       	ldi	r27, 0x80	; 128
    1460:	e8 2a       	or	r14, r24
    1462:	f9 2a       	or	r15, r25
    1464:	0a 2b       	or	r16, r26
    1466:	1b 2b       	or	r17, r27
    1468:	76 95       	lsr	r23
    146a:	67 95       	ror	r22
    146c:	57 95       	ror	r21
    146e:	47 95       	ror	r20
    1470:	2f 5f       	subi	r18, 0xFF	; 255
    1472:	3f 4f       	sbci	r19, 0xFF	; 255
    1474:	77 fd       	sbrc	r23, 7
    1476:	e7 cf       	rjmp	.-50     	; 0x1446 <__mulsf3+0x13a>
    1478:	0c c0       	rjmp	.+24     	; 0x1492 <__mulsf3+0x186>
    147a:	44 0f       	add	r20, r20
    147c:	55 1f       	adc	r21, r21
    147e:	66 1f       	adc	r22, r22
    1480:	77 1f       	adc	r23, r23
    1482:	17 fd       	sbrc	r17, 7
    1484:	41 60       	ori	r20, 0x01	; 1
    1486:	ee 0c       	add	r14, r14
    1488:	ff 1c       	adc	r15, r15
    148a:	00 1f       	adc	r16, r16
    148c:	11 1f       	adc	r17, r17
    148e:	21 50       	subi	r18, 0x01	; 1
    1490:	30 40       	sbci	r19, 0x00	; 0
    1492:	40 30       	cpi	r20, 0x00	; 0
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	59 07       	cpc	r21, r25
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	69 07       	cpc	r22, r25
    149c:	90 e4       	ldi	r25, 0x40	; 64
    149e:	79 07       	cpc	r23, r25
    14a0:	60 f3       	brcs	.-40     	; 0x147a <__mulsf3+0x16e>
    14a2:	2b 8f       	std	Y+27, r18	; 0x1b
    14a4:	3c 8f       	std	Y+28, r19	; 0x1c
    14a6:	db 01       	movw	r26, r22
    14a8:	ca 01       	movw	r24, r20
    14aa:	8f 77       	andi	r24, 0x7F	; 127
    14ac:	90 70       	andi	r25, 0x00	; 0
    14ae:	a0 70       	andi	r26, 0x00	; 0
    14b0:	b0 70       	andi	r27, 0x00	; 0
    14b2:	80 34       	cpi	r24, 0x40	; 64
    14b4:	91 05       	cpc	r25, r1
    14b6:	a1 05       	cpc	r26, r1
    14b8:	b1 05       	cpc	r27, r1
    14ba:	61 f4       	brne	.+24     	; 0x14d4 <__mulsf3+0x1c8>
    14bc:	47 fd       	sbrc	r20, 7
    14be:	0a c0       	rjmp	.+20     	; 0x14d4 <__mulsf3+0x1c8>
    14c0:	e1 14       	cp	r14, r1
    14c2:	f1 04       	cpc	r15, r1
    14c4:	01 05       	cpc	r16, r1
    14c6:	11 05       	cpc	r17, r1
    14c8:	29 f0       	breq	.+10     	; 0x14d4 <__mulsf3+0x1c8>
    14ca:	40 5c       	subi	r20, 0xC0	; 192
    14cc:	5f 4f       	sbci	r21, 0xFF	; 255
    14ce:	6f 4f       	sbci	r22, 0xFF	; 255
    14d0:	7f 4f       	sbci	r23, 0xFF	; 255
    14d2:	40 78       	andi	r20, 0x80	; 128
    14d4:	1a 8e       	std	Y+26, r1	; 0x1a
    14d6:	fe 17       	cp	r31, r30
    14d8:	11 f0       	breq	.+4      	; 0x14de <__mulsf3+0x1d2>
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	8a 8f       	std	Y+26, r24	; 0x1a
    14de:	4d 8f       	std	Y+29, r20	; 0x1d
    14e0:	5e 8f       	std	Y+30, r21	; 0x1e
    14e2:	6f 8f       	std	Y+31, r22	; 0x1f
    14e4:	78 a3       	std	Y+32, r23	; 0x20
    14e6:	83 e0       	ldi	r24, 0x03	; 3
    14e8:	89 8f       	std	Y+25, r24	; 0x19
    14ea:	ce 01       	movw	r24, r28
    14ec:	49 96       	adiw	r24, 0x19	; 25
    14ee:	9a d2       	rcall	.+1332   	; 0x1a24 <__pack_f>
    14f0:	a0 96       	adiw	r28, 0x20	; 32
    14f2:	e2 e1       	ldi	r30, 0x12	; 18
    14f4:	a2 c4       	rjmp	.+2372   	; 0x1e3a <__epilogue_restores__>

000014f6 <__divsf3>:
    14f6:	a8 e1       	ldi	r26, 0x18	; 24
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e0 e8       	ldi	r30, 0x80	; 128
    14fc:	fa e0       	ldi	r31, 0x0A	; 10
    14fe:	89 c4       	rjmp	.+2322   	; 0x1e12 <__prologue_saves__+0x10>
    1500:	69 83       	std	Y+1, r22	; 0x01
    1502:	7a 83       	std	Y+2, r23	; 0x02
    1504:	8b 83       	std	Y+3, r24	; 0x03
    1506:	9c 83       	std	Y+4, r25	; 0x04
    1508:	2d 83       	std	Y+5, r18	; 0x05
    150a:	3e 83       	std	Y+6, r19	; 0x06
    150c:	4f 83       	std	Y+7, r20	; 0x07
    150e:	58 87       	std	Y+8, r21	; 0x08
    1510:	b9 e0       	ldi	r27, 0x09	; 9
    1512:	eb 2e       	mov	r14, r27
    1514:	f1 2c       	mov	r15, r1
    1516:	ec 0e       	add	r14, r28
    1518:	fd 1e       	adc	r15, r29
    151a:	ce 01       	movw	r24, r28
    151c:	01 96       	adiw	r24, 0x01	; 1
    151e:	b7 01       	movw	r22, r14
    1520:	56 d3       	rcall	.+1708   	; 0x1bce <__unpack_f>
    1522:	8e 01       	movw	r16, r28
    1524:	0f 5e       	subi	r16, 0xEF	; 239
    1526:	1f 4f       	sbci	r17, 0xFF	; 255
    1528:	ce 01       	movw	r24, r28
    152a:	05 96       	adiw	r24, 0x05	; 5
    152c:	b8 01       	movw	r22, r16
    152e:	4f d3       	rcall	.+1694   	; 0x1bce <__unpack_f>
    1530:	29 85       	ldd	r18, Y+9	; 0x09
    1532:	22 30       	cpi	r18, 0x02	; 2
    1534:	08 f4       	brcc	.+2      	; 0x1538 <__divsf3+0x42>
    1536:	7e c0       	rjmp	.+252    	; 0x1634 <__divsf3+0x13e>
    1538:	39 89       	ldd	r19, Y+17	; 0x11
    153a:	32 30       	cpi	r19, 0x02	; 2
    153c:	10 f4       	brcc	.+4      	; 0x1542 <__divsf3+0x4c>
    153e:	b8 01       	movw	r22, r16
    1540:	7c c0       	rjmp	.+248    	; 0x163a <__divsf3+0x144>
    1542:	8a 85       	ldd	r24, Y+10	; 0x0a
    1544:	9a 89       	ldd	r25, Y+18	; 0x12
    1546:	89 27       	eor	r24, r25
    1548:	8a 87       	std	Y+10, r24	; 0x0a
    154a:	24 30       	cpi	r18, 0x04	; 4
    154c:	11 f0       	breq	.+4      	; 0x1552 <__divsf3+0x5c>
    154e:	22 30       	cpi	r18, 0x02	; 2
    1550:	31 f4       	brne	.+12     	; 0x155e <__divsf3+0x68>
    1552:	23 17       	cp	r18, r19
    1554:	09 f0       	breq	.+2      	; 0x1558 <__divsf3+0x62>
    1556:	6e c0       	rjmp	.+220    	; 0x1634 <__divsf3+0x13e>
    1558:	6c e7       	ldi	r22, 0x7C	; 124
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	6e c0       	rjmp	.+220    	; 0x163a <__divsf3+0x144>
    155e:	34 30       	cpi	r19, 0x04	; 4
    1560:	39 f4       	brne	.+14     	; 0x1570 <__divsf3+0x7a>
    1562:	1d 86       	std	Y+13, r1	; 0x0d
    1564:	1e 86       	std	Y+14, r1	; 0x0e
    1566:	1f 86       	std	Y+15, r1	; 0x0f
    1568:	18 8a       	std	Y+16, r1	; 0x10
    156a:	1c 86       	std	Y+12, r1	; 0x0c
    156c:	1b 86       	std	Y+11, r1	; 0x0b
    156e:	04 c0       	rjmp	.+8      	; 0x1578 <__divsf3+0x82>
    1570:	32 30       	cpi	r19, 0x02	; 2
    1572:	21 f4       	brne	.+8      	; 0x157c <__divsf3+0x86>
    1574:	84 e0       	ldi	r24, 0x04	; 4
    1576:	89 87       	std	Y+9, r24	; 0x09
    1578:	b7 01       	movw	r22, r14
    157a:	5f c0       	rjmp	.+190    	; 0x163a <__divsf3+0x144>
    157c:	2b 85       	ldd	r18, Y+11	; 0x0b
    157e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1580:	8b 89       	ldd	r24, Y+19	; 0x13
    1582:	9c 89       	ldd	r25, Y+20	; 0x14
    1584:	28 1b       	sub	r18, r24
    1586:	39 0b       	sbc	r19, r25
    1588:	3c 87       	std	Y+12, r19	; 0x0c
    158a:	2b 87       	std	Y+11, r18	; 0x0b
    158c:	ed 84       	ldd	r14, Y+13	; 0x0d
    158e:	fe 84       	ldd	r15, Y+14	; 0x0e
    1590:	0f 85       	ldd	r16, Y+15	; 0x0f
    1592:	18 89       	ldd	r17, Y+16	; 0x10
    1594:	ad 88       	ldd	r10, Y+21	; 0x15
    1596:	be 88       	ldd	r11, Y+22	; 0x16
    1598:	cf 88       	ldd	r12, Y+23	; 0x17
    159a:	d8 8c       	ldd	r13, Y+24	; 0x18
    159c:	ea 14       	cp	r14, r10
    159e:	fb 04       	cpc	r15, r11
    15a0:	0c 05       	cpc	r16, r12
    15a2:	1d 05       	cpc	r17, r13
    15a4:	40 f4       	brcc	.+16     	; 0x15b6 <__divsf3+0xc0>
    15a6:	ee 0c       	add	r14, r14
    15a8:	ff 1c       	adc	r15, r15
    15aa:	00 1f       	adc	r16, r16
    15ac:	11 1f       	adc	r17, r17
    15ae:	21 50       	subi	r18, 0x01	; 1
    15b0:	30 40       	sbci	r19, 0x00	; 0
    15b2:	3c 87       	std	Y+12, r19	; 0x0c
    15b4:	2b 87       	std	Y+11, r18	; 0x0b
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	40 e0       	ldi	r20, 0x00	; 0
    15bc:	50 e0       	ldi	r21, 0x00	; 0
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	a0 e0       	ldi	r26, 0x00	; 0
    15c4:	b0 e4       	ldi	r27, 0x40	; 64
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	ea 14       	cp	r14, r10
    15cc:	fb 04       	cpc	r15, r11
    15ce:	0c 05       	cpc	r16, r12
    15d0:	1d 05       	cpc	r17, r13
    15d2:	40 f0       	brcs	.+16     	; 0x15e4 <__divsf3+0xee>
    15d4:	28 2b       	or	r18, r24
    15d6:	39 2b       	or	r19, r25
    15d8:	4a 2b       	or	r20, r26
    15da:	5b 2b       	or	r21, r27
    15dc:	ea 18       	sub	r14, r10
    15de:	fb 08       	sbc	r15, r11
    15e0:	0c 09       	sbc	r16, r12
    15e2:	1d 09       	sbc	r17, r13
    15e4:	b6 95       	lsr	r27
    15e6:	a7 95       	ror	r26
    15e8:	97 95       	ror	r25
    15ea:	87 95       	ror	r24
    15ec:	ee 0c       	add	r14, r14
    15ee:	ff 1c       	adc	r15, r15
    15f0:	00 1f       	adc	r16, r16
    15f2:	11 1f       	adc	r17, r17
    15f4:	6f 5f       	subi	r22, 0xFF	; 255
    15f6:	7f 4f       	sbci	r23, 0xFF	; 255
    15f8:	6f 31       	cpi	r22, 0x1F	; 31
    15fa:	71 05       	cpc	r23, r1
    15fc:	31 f7       	brne	.-52     	; 0x15ca <__divsf3+0xd4>
    15fe:	da 01       	movw	r26, r20
    1600:	c9 01       	movw	r24, r18
    1602:	8f 77       	andi	r24, 0x7F	; 127
    1604:	90 70       	andi	r25, 0x00	; 0
    1606:	a0 70       	andi	r26, 0x00	; 0
    1608:	b0 70       	andi	r27, 0x00	; 0
    160a:	80 34       	cpi	r24, 0x40	; 64
    160c:	91 05       	cpc	r25, r1
    160e:	a1 05       	cpc	r26, r1
    1610:	b1 05       	cpc	r27, r1
    1612:	61 f4       	brne	.+24     	; 0x162c <__divsf3+0x136>
    1614:	27 fd       	sbrc	r18, 7
    1616:	0a c0       	rjmp	.+20     	; 0x162c <__divsf3+0x136>
    1618:	e1 14       	cp	r14, r1
    161a:	f1 04       	cpc	r15, r1
    161c:	01 05       	cpc	r16, r1
    161e:	11 05       	cpc	r17, r1
    1620:	29 f0       	breq	.+10     	; 0x162c <__divsf3+0x136>
    1622:	20 5c       	subi	r18, 0xC0	; 192
    1624:	3f 4f       	sbci	r19, 0xFF	; 255
    1626:	4f 4f       	sbci	r20, 0xFF	; 255
    1628:	5f 4f       	sbci	r21, 0xFF	; 255
    162a:	20 78       	andi	r18, 0x80	; 128
    162c:	2d 87       	std	Y+13, r18	; 0x0d
    162e:	3e 87       	std	Y+14, r19	; 0x0e
    1630:	4f 87       	std	Y+15, r20	; 0x0f
    1632:	58 8b       	std	Y+16, r21	; 0x10
    1634:	be 01       	movw	r22, r28
    1636:	67 5f       	subi	r22, 0xF7	; 247
    1638:	7f 4f       	sbci	r23, 0xFF	; 255
    163a:	cb 01       	movw	r24, r22
    163c:	f3 d1       	rcall	.+998    	; 0x1a24 <__pack_f>
    163e:	68 96       	adiw	r28, 0x18	; 24
    1640:	ea e0       	ldi	r30, 0x0A	; 10
    1642:	03 c4       	rjmp	.+2054   	; 0x1e4a <__epilogue_restores__+0x10>

00001644 <__gtsf2>:
    1644:	a8 e1       	ldi	r26, 0x18	; 24
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	e7 e2       	ldi	r30, 0x27	; 39
    164a:	fb e0       	ldi	r31, 0x0B	; 11
    164c:	e6 c3       	rjmp	.+1996   	; 0x1e1a <__prologue_saves__+0x18>
    164e:	69 83       	std	Y+1, r22	; 0x01
    1650:	7a 83       	std	Y+2, r23	; 0x02
    1652:	8b 83       	std	Y+3, r24	; 0x03
    1654:	9c 83       	std	Y+4, r25	; 0x04
    1656:	2d 83       	std	Y+5, r18	; 0x05
    1658:	3e 83       	std	Y+6, r19	; 0x06
    165a:	4f 83       	std	Y+7, r20	; 0x07
    165c:	58 87       	std	Y+8, r21	; 0x08
    165e:	89 e0       	ldi	r24, 0x09	; 9
    1660:	e8 2e       	mov	r14, r24
    1662:	f1 2c       	mov	r15, r1
    1664:	ec 0e       	add	r14, r28
    1666:	fd 1e       	adc	r15, r29
    1668:	ce 01       	movw	r24, r28
    166a:	01 96       	adiw	r24, 0x01	; 1
    166c:	b7 01       	movw	r22, r14
    166e:	af d2       	rcall	.+1374   	; 0x1bce <__unpack_f>
    1670:	8e 01       	movw	r16, r28
    1672:	0f 5e       	subi	r16, 0xEF	; 239
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	ce 01       	movw	r24, r28
    1678:	05 96       	adiw	r24, 0x05	; 5
    167a:	b8 01       	movw	r22, r16
    167c:	a8 d2       	rcall	.+1360   	; 0x1bce <__unpack_f>
    167e:	89 85       	ldd	r24, Y+9	; 0x09
    1680:	82 30       	cpi	r24, 0x02	; 2
    1682:	38 f0       	brcs	.+14     	; 0x1692 <__gtsf2+0x4e>
    1684:	89 89       	ldd	r24, Y+17	; 0x11
    1686:	82 30       	cpi	r24, 0x02	; 2
    1688:	20 f0       	brcs	.+8      	; 0x1692 <__gtsf2+0x4e>
    168a:	c7 01       	movw	r24, r14
    168c:	b8 01       	movw	r22, r16
    168e:	17 d3       	rcall	.+1582   	; 0x1cbe <__fpcmp_parts_f>
    1690:	01 c0       	rjmp	.+2      	; 0x1694 <__gtsf2+0x50>
    1692:	8f ef       	ldi	r24, 0xFF	; 255
    1694:	68 96       	adiw	r28, 0x18	; 24
    1696:	e6 e0       	ldi	r30, 0x06	; 6
    1698:	dc c3       	rjmp	.+1976   	; 0x1e52 <__epilogue_restores__+0x18>

0000169a <__gesf2>:
    169a:	a8 e1       	ldi	r26, 0x18	; 24
    169c:	b0 e0       	ldi	r27, 0x00	; 0
    169e:	e2 e5       	ldi	r30, 0x52	; 82
    16a0:	fb e0       	ldi	r31, 0x0B	; 11
    16a2:	bb c3       	rjmp	.+1910   	; 0x1e1a <__prologue_saves__+0x18>
    16a4:	69 83       	std	Y+1, r22	; 0x01
    16a6:	7a 83       	std	Y+2, r23	; 0x02
    16a8:	8b 83       	std	Y+3, r24	; 0x03
    16aa:	9c 83       	std	Y+4, r25	; 0x04
    16ac:	2d 83       	std	Y+5, r18	; 0x05
    16ae:	3e 83       	std	Y+6, r19	; 0x06
    16b0:	4f 83       	std	Y+7, r20	; 0x07
    16b2:	58 87       	std	Y+8, r21	; 0x08
    16b4:	89 e0       	ldi	r24, 0x09	; 9
    16b6:	e8 2e       	mov	r14, r24
    16b8:	f1 2c       	mov	r15, r1
    16ba:	ec 0e       	add	r14, r28
    16bc:	fd 1e       	adc	r15, r29
    16be:	ce 01       	movw	r24, r28
    16c0:	01 96       	adiw	r24, 0x01	; 1
    16c2:	b7 01       	movw	r22, r14
    16c4:	84 d2       	rcall	.+1288   	; 0x1bce <__unpack_f>
    16c6:	8e 01       	movw	r16, r28
    16c8:	0f 5e       	subi	r16, 0xEF	; 239
    16ca:	1f 4f       	sbci	r17, 0xFF	; 255
    16cc:	ce 01       	movw	r24, r28
    16ce:	05 96       	adiw	r24, 0x05	; 5
    16d0:	b8 01       	movw	r22, r16
    16d2:	7d d2       	rcall	.+1274   	; 0x1bce <__unpack_f>
    16d4:	89 85       	ldd	r24, Y+9	; 0x09
    16d6:	82 30       	cpi	r24, 0x02	; 2
    16d8:	38 f0       	brcs	.+14     	; 0x16e8 <__gesf2+0x4e>
    16da:	89 89       	ldd	r24, Y+17	; 0x11
    16dc:	82 30       	cpi	r24, 0x02	; 2
    16de:	20 f0       	brcs	.+8      	; 0x16e8 <__gesf2+0x4e>
    16e0:	c7 01       	movw	r24, r14
    16e2:	b8 01       	movw	r22, r16
    16e4:	ec d2       	rcall	.+1496   	; 0x1cbe <__fpcmp_parts_f>
    16e6:	01 c0       	rjmp	.+2      	; 0x16ea <__gesf2+0x50>
    16e8:	8f ef       	ldi	r24, 0xFF	; 255
    16ea:	68 96       	adiw	r28, 0x18	; 24
    16ec:	e6 e0       	ldi	r30, 0x06	; 6
    16ee:	b1 c3       	rjmp	.+1890   	; 0x1e52 <__epilogue_restores__+0x18>

000016f0 <__ltsf2>:
    16f0:	a8 e1       	ldi	r26, 0x18	; 24
    16f2:	b0 e0       	ldi	r27, 0x00	; 0
    16f4:	ed e7       	ldi	r30, 0x7D	; 125
    16f6:	fb e0       	ldi	r31, 0x0B	; 11
    16f8:	90 c3       	rjmp	.+1824   	; 0x1e1a <__prologue_saves__+0x18>
    16fa:	69 83       	std	Y+1, r22	; 0x01
    16fc:	7a 83       	std	Y+2, r23	; 0x02
    16fe:	8b 83       	std	Y+3, r24	; 0x03
    1700:	9c 83       	std	Y+4, r25	; 0x04
    1702:	2d 83       	std	Y+5, r18	; 0x05
    1704:	3e 83       	std	Y+6, r19	; 0x06
    1706:	4f 83       	std	Y+7, r20	; 0x07
    1708:	58 87       	std	Y+8, r21	; 0x08
    170a:	89 e0       	ldi	r24, 0x09	; 9
    170c:	e8 2e       	mov	r14, r24
    170e:	f1 2c       	mov	r15, r1
    1710:	ec 0e       	add	r14, r28
    1712:	fd 1e       	adc	r15, r29
    1714:	ce 01       	movw	r24, r28
    1716:	01 96       	adiw	r24, 0x01	; 1
    1718:	b7 01       	movw	r22, r14
    171a:	59 d2       	rcall	.+1202   	; 0x1bce <__unpack_f>
    171c:	8e 01       	movw	r16, r28
    171e:	0f 5e       	subi	r16, 0xEF	; 239
    1720:	1f 4f       	sbci	r17, 0xFF	; 255
    1722:	ce 01       	movw	r24, r28
    1724:	05 96       	adiw	r24, 0x05	; 5
    1726:	b8 01       	movw	r22, r16
    1728:	52 d2       	rcall	.+1188   	; 0x1bce <__unpack_f>
    172a:	89 85       	ldd	r24, Y+9	; 0x09
    172c:	82 30       	cpi	r24, 0x02	; 2
    172e:	38 f0       	brcs	.+14     	; 0x173e <__ltsf2+0x4e>
    1730:	89 89       	ldd	r24, Y+17	; 0x11
    1732:	82 30       	cpi	r24, 0x02	; 2
    1734:	20 f0       	brcs	.+8      	; 0x173e <__ltsf2+0x4e>
    1736:	c7 01       	movw	r24, r14
    1738:	b8 01       	movw	r22, r16
    173a:	c1 d2       	rcall	.+1410   	; 0x1cbe <__fpcmp_parts_f>
    173c:	01 c0       	rjmp	.+2      	; 0x1740 <__ltsf2+0x50>
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	68 96       	adiw	r28, 0x18	; 24
    1742:	e6 e0       	ldi	r30, 0x06	; 6
    1744:	86 c3       	rjmp	.+1804   	; 0x1e52 <__epilogue_restores__+0x18>

00001746 <__floatsisf>:
    1746:	a8 e0       	ldi	r26, 0x08	; 8
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	e8 ea       	ldi	r30, 0xA8	; 168
    174c:	fb e0       	ldi	r31, 0x0B	; 11
    174e:	62 c3       	rjmp	.+1732   	; 0x1e14 <__prologue_saves__+0x12>
    1750:	9b 01       	movw	r18, r22
    1752:	ac 01       	movw	r20, r24
    1754:	83 e0       	ldi	r24, 0x03	; 3
    1756:	89 83       	std	Y+1, r24	; 0x01
    1758:	da 01       	movw	r26, r20
    175a:	c9 01       	movw	r24, r18
    175c:	88 27       	eor	r24, r24
    175e:	b7 fd       	sbrc	r27, 7
    1760:	83 95       	inc	r24
    1762:	99 27       	eor	r25, r25
    1764:	aa 27       	eor	r26, r26
    1766:	bb 27       	eor	r27, r27
    1768:	b8 2e       	mov	r11, r24
    176a:	21 15       	cp	r18, r1
    176c:	31 05       	cpc	r19, r1
    176e:	41 05       	cpc	r20, r1
    1770:	51 05       	cpc	r21, r1
    1772:	19 f4       	brne	.+6      	; 0x177a <__floatsisf+0x34>
    1774:	82 e0       	ldi	r24, 0x02	; 2
    1776:	89 83       	std	Y+1, r24	; 0x01
    1778:	39 c0       	rjmp	.+114    	; 0x17ec <__floatsisf+0xa6>
    177a:	88 23       	and	r24, r24
    177c:	a9 f0       	breq	.+42     	; 0x17a8 <__floatsisf+0x62>
    177e:	20 30       	cpi	r18, 0x00	; 0
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	38 07       	cpc	r19, r24
    1784:	80 e0       	ldi	r24, 0x00	; 0
    1786:	48 07       	cpc	r20, r24
    1788:	80 e8       	ldi	r24, 0x80	; 128
    178a:	58 07       	cpc	r21, r24
    178c:	29 f4       	brne	.+10     	; 0x1798 <__floatsisf+0x52>
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	80 e0       	ldi	r24, 0x00	; 0
    1794:	9f ec       	ldi	r25, 0xCF	; 207
    1796:	2e c0       	rjmp	.+92     	; 0x17f4 <__floatsisf+0xae>
    1798:	ee 24       	eor	r14, r14
    179a:	ff 24       	eor	r15, r15
    179c:	87 01       	movw	r16, r14
    179e:	e2 1a       	sub	r14, r18
    17a0:	f3 0a       	sbc	r15, r19
    17a2:	04 0b       	sbc	r16, r20
    17a4:	15 0b       	sbc	r17, r21
    17a6:	02 c0       	rjmp	.+4      	; 0x17ac <__floatsisf+0x66>
    17a8:	79 01       	movw	r14, r18
    17aa:	8a 01       	movw	r16, r20
    17ac:	8e e1       	ldi	r24, 0x1E	; 30
    17ae:	c8 2e       	mov	r12, r24
    17b0:	d1 2c       	mov	r13, r1
    17b2:	dc 82       	std	Y+4, r13	; 0x04
    17b4:	cb 82       	std	Y+3, r12	; 0x03
    17b6:	ed 82       	std	Y+5, r14	; 0x05
    17b8:	fe 82       	std	Y+6, r15	; 0x06
    17ba:	0f 83       	std	Y+7, r16	; 0x07
    17bc:	18 87       	std	Y+8, r17	; 0x08
    17be:	c8 01       	movw	r24, r16
    17c0:	b7 01       	movw	r22, r14
    17c2:	e1 d0       	rcall	.+450    	; 0x1986 <__clzsi2>
    17c4:	01 97       	sbiw	r24, 0x01	; 1
    17c6:	18 16       	cp	r1, r24
    17c8:	19 06       	cpc	r1, r25
    17ca:	84 f4       	brge	.+32     	; 0x17ec <__floatsisf+0xa6>
    17cc:	08 2e       	mov	r0, r24
    17ce:	04 c0       	rjmp	.+8      	; 0x17d8 <__floatsisf+0x92>
    17d0:	ee 0c       	add	r14, r14
    17d2:	ff 1c       	adc	r15, r15
    17d4:	00 1f       	adc	r16, r16
    17d6:	11 1f       	adc	r17, r17
    17d8:	0a 94       	dec	r0
    17da:	d2 f7       	brpl	.-12     	; 0x17d0 <__floatsisf+0x8a>
    17dc:	ed 82       	std	Y+5, r14	; 0x05
    17de:	fe 82       	std	Y+6, r15	; 0x06
    17e0:	0f 83       	std	Y+7, r16	; 0x07
    17e2:	18 87       	std	Y+8, r17	; 0x08
    17e4:	c8 1a       	sub	r12, r24
    17e6:	d9 0a       	sbc	r13, r25
    17e8:	dc 82       	std	Y+4, r13	; 0x04
    17ea:	cb 82       	std	Y+3, r12	; 0x03
    17ec:	ba 82       	std	Y+2, r11	; 0x02
    17ee:	ce 01       	movw	r24, r28
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	18 d1       	rcall	.+560    	; 0x1a24 <__pack_f>
    17f4:	28 96       	adiw	r28, 0x08	; 8
    17f6:	e9 e0       	ldi	r30, 0x09	; 9
    17f8:	29 c3       	rjmp	.+1618   	; 0x1e4c <__epilogue_restores__+0x12>

000017fa <__fixsfsi>:
    17fa:	ac e0       	ldi	r26, 0x0C	; 12
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	e2 e0       	ldi	r30, 0x02	; 2
    1800:	fc e0       	ldi	r31, 0x0C	; 12
    1802:	0f c3       	rjmp	.+1566   	; 0x1e22 <__prologue_saves__+0x20>
    1804:	69 83       	std	Y+1, r22	; 0x01
    1806:	7a 83       	std	Y+2, r23	; 0x02
    1808:	8b 83       	std	Y+3, r24	; 0x03
    180a:	9c 83       	std	Y+4, r25	; 0x04
    180c:	ce 01       	movw	r24, r28
    180e:	01 96       	adiw	r24, 0x01	; 1
    1810:	be 01       	movw	r22, r28
    1812:	6b 5f       	subi	r22, 0xFB	; 251
    1814:	7f 4f       	sbci	r23, 0xFF	; 255
    1816:	db d1       	rcall	.+950    	; 0x1bce <__unpack_f>
    1818:	8d 81       	ldd	r24, Y+5	; 0x05
    181a:	82 30       	cpi	r24, 0x02	; 2
    181c:	61 f1       	breq	.+88     	; 0x1876 <__fixsfsi+0x7c>
    181e:	82 30       	cpi	r24, 0x02	; 2
    1820:	50 f1       	brcs	.+84     	; 0x1876 <__fixsfsi+0x7c>
    1822:	84 30       	cpi	r24, 0x04	; 4
    1824:	21 f4       	brne	.+8      	; 0x182e <__fixsfsi+0x34>
    1826:	8e 81       	ldd	r24, Y+6	; 0x06
    1828:	88 23       	and	r24, r24
    182a:	51 f1       	breq	.+84     	; 0x1880 <__fixsfsi+0x86>
    182c:	2e c0       	rjmp	.+92     	; 0x188a <__fixsfsi+0x90>
    182e:	2f 81       	ldd	r18, Y+7	; 0x07
    1830:	38 85       	ldd	r19, Y+8	; 0x08
    1832:	37 fd       	sbrc	r19, 7
    1834:	20 c0       	rjmp	.+64     	; 0x1876 <__fixsfsi+0x7c>
    1836:	6e 81       	ldd	r22, Y+6	; 0x06
    1838:	2f 31       	cpi	r18, 0x1F	; 31
    183a:	31 05       	cpc	r19, r1
    183c:	1c f0       	brlt	.+6      	; 0x1844 <__fixsfsi+0x4a>
    183e:	66 23       	and	r22, r22
    1840:	f9 f0       	breq	.+62     	; 0x1880 <__fixsfsi+0x86>
    1842:	23 c0       	rjmp	.+70     	; 0x188a <__fixsfsi+0x90>
    1844:	8e e1       	ldi	r24, 0x1E	; 30
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	82 1b       	sub	r24, r18
    184a:	93 0b       	sbc	r25, r19
    184c:	29 85       	ldd	r18, Y+9	; 0x09
    184e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1850:	4b 85       	ldd	r20, Y+11	; 0x0b
    1852:	5c 85       	ldd	r21, Y+12	; 0x0c
    1854:	04 c0       	rjmp	.+8      	; 0x185e <__fixsfsi+0x64>
    1856:	56 95       	lsr	r21
    1858:	47 95       	ror	r20
    185a:	37 95       	ror	r19
    185c:	27 95       	ror	r18
    185e:	8a 95       	dec	r24
    1860:	d2 f7       	brpl	.-12     	; 0x1856 <__fixsfsi+0x5c>
    1862:	66 23       	and	r22, r22
    1864:	b1 f0       	breq	.+44     	; 0x1892 <__fixsfsi+0x98>
    1866:	50 95       	com	r21
    1868:	40 95       	com	r20
    186a:	30 95       	com	r19
    186c:	21 95       	neg	r18
    186e:	3f 4f       	sbci	r19, 0xFF	; 255
    1870:	4f 4f       	sbci	r20, 0xFF	; 255
    1872:	5f 4f       	sbci	r21, 0xFF	; 255
    1874:	0e c0       	rjmp	.+28     	; 0x1892 <__fixsfsi+0x98>
    1876:	20 e0       	ldi	r18, 0x00	; 0
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	40 e0       	ldi	r20, 0x00	; 0
    187c:	50 e0       	ldi	r21, 0x00	; 0
    187e:	09 c0       	rjmp	.+18     	; 0x1892 <__fixsfsi+0x98>
    1880:	2f ef       	ldi	r18, 0xFF	; 255
    1882:	3f ef       	ldi	r19, 0xFF	; 255
    1884:	4f ef       	ldi	r20, 0xFF	; 255
    1886:	5f e7       	ldi	r21, 0x7F	; 127
    1888:	04 c0       	rjmp	.+8      	; 0x1892 <__fixsfsi+0x98>
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	40 e0       	ldi	r20, 0x00	; 0
    1890:	50 e8       	ldi	r21, 0x80	; 128
    1892:	b9 01       	movw	r22, r18
    1894:	ca 01       	movw	r24, r20
    1896:	2c 96       	adiw	r28, 0x0c	; 12
    1898:	e2 e0       	ldi	r30, 0x02	; 2
    189a:	df c2       	rjmp	.+1470   	; 0x1e5a <__epilogue_restores__+0x20>

0000189c <__floatunsisf>:
    189c:	a8 e0       	ldi	r26, 0x08	; 8
    189e:	b0 e0       	ldi	r27, 0x00	; 0
    18a0:	e3 e5       	ldi	r30, 0x53	; 83
    18a2:	fc e0       	ldi	r31, 0x0C	; 12
    18a4:	b6 c2       	rjmp	.+1388   	; 0x1e12 <__prologue_saves__+0x10>
    18a6:	7b 01       	movw	r14, r22
    18a8:	8c 01       	movw	r16, r24
    18aa:	61 15       	cp	r22, r1
    18ac:	71 05       	cpc	r23, r1
    18ae:	81 05       	cpc	r24, r1
    18b0:	91 05       	cpc	r25, r1
    18b2:	19 f4       	brne	.+6      	; 0x18ba <__floatunsisf+0x1e>
    18b4:	82 e0       	ldi	r24, 0x02	; 2
    18b6:	89 83       	std	Y+1, r24	; 0x01
    18b8:	5f c0       	rjmp	.+190    	; 0x1978 <__floatunsisf+0xdc>
    18ba:	83 e0       	ldi	r24, 0x03	; 3
    18bc:	89 83       	std	Y+1, r24	; 0x01
    18be:	8e e1       	ldi	r24, 0x1E	; 30
    18c0:	c8 2e       	mov	r12, r24
    18c2:	d1 2c       	mov	r13, r1
    18c4:	dc 82       	std	Y+4, r13	; 0x04
    18c6:	cb 82       	std	Y+3, r12	; 0x03
    18c8:	ed 82       	std	Y+5, r14	; 0x05
    18ca:	fe 82       	std	Y+6, r15	; 0x06
    18cc:	0f 83       	std	Y+7, r16	; 0x07
    18ce:	18 87       	std	Y+8, r17	; 0x08
    18d0:	c8 01       	movw	r24, r16
    18d2:	b7 01       	movw	r22, r14
    18d4:	58 d0       	rcall	.+176    	; 0x1986 <__clzsi2>
    18d6:	fc 01       	movw	r30, r24
    18d8:	31 97       	sbiw	r30, 0x01	; 1
    18da:	f7 ff       	sbrs	r31, 7
    18dc:	3b c0       	rjmp	.+118    	; 0x1954 <__floatunsisf+0xb8>
    18de:	22 27       	eor	r18, r18
    18e0:	33 27       	eor	r19, r19
    18e2:	2e 1b       	sub	r18, r30
    18e4:	3f 0b       	sbc	r19, r31
    18e6:	57 01       	movw	r10, r14
    18e8:	68 01       	movw	r12, r16
    18ea:	02 2e       	mov	r0, r18
    18ec:	04 c0       	rjmp	.+8      	; 0x18f6 <__floatunsisf+0x5a>
    18ee:	d6 94       	lsr	r13
    18f0:	c7 94       	ror	r12
    18f2:	b7 94       	ror	r11
    18f4:	a7 94       	ror	r10
    18f6:	0a 94       	dec	r0
    18f8:	d2 f7       	brpl	.-12     	; 0x18ee <__floatunsisf+0x52>
    18fa:	40 e0       	ldi	r20, 0x00	; 0
    18fc:	50 e0       	ldi	r21, 0x00	; 0
    18fe:	60 e0       	ldi	r22, 0x00	; 0
    1900:	70 e0       	ldi	r23, 0x00	; 0
    1902:	81 e0       	ldi	r24, 0x01	; 1
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	a0 e0       	ldi	r26, 0x00	; 0
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	04 c0       	rjmp	.+8      	; 0x1914 <__floatunsisf+0x78>
    190c:	88 0f       	add	r24, r24
    190e:	99 1f       	adc	r25, r25
    1910:	aa 1f       	adc	r26, r26
    1912:	bb 1f       	adc	r27, r27
    1914:	2a 95       	dec	r18
    1916:	d2 f7       	brpl	.-12     	; 0x190c <__floatunsisf+0x70>
    1918:	01 97       	sbiw	r24, 0x01	; 1
    191a:	a1 09       	sbc	r26, r1
    191c:	b1 09       	sbc	r27, r1
    191e:	8e 21       	and	r24, r14
    1920:	9f 21       	and	r25, r15
    1922:	a0 23       	and	r26, r16
    1924:	b1 23       	and	r27, r17
    1926:	00 97       	sbiw	r24, 0x00	; 0
    1928:	a1 05       	cpc	r26, r1
    192a:	b1 05       	cpc	r27, r1
    192c:	21 f0       	breq	.+8      	; 0x1936 <__floatunsisf+0x9a>
    192e:	41 e0       	ldi	r20, 0x01	; 1
    1930:	50 e0       	ldi	r21, 0x00	; 0
    1932:	60 e0       	ldi	r22, 0x00	; 0
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	4a 29       	or	r20, r10
    1938:	5b 29       	or	r21, r11
    193a:	6c 29       	or	r22, r12
    193c:	7d 29       	or	r23, r13
    193e:	4d 83       	std	Y+5, r20	; 0x05
    1940:	5e 83       	std	Y+6, r21	; 0x06
    1942:	6f 83       	std	Y+7, r22	; 0x07
    1944:	78 87       	std	Y+8, r23	; 0x08
    1946:	8e e1       	ldi	r24, 0x1E	; 30
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	8e 1b       	sub	r24, r30
    194c:	9f 0b       	sbc	r25, r31
    194e:	9c 83       	std	Y+4, r25	; 0x04
    1950:	8b 83       	std	Y+3, r24	; 0x03
    1952:	12 c0       	rjmp	.+36     	; 0x1978 <__floatunsisf+0xdc>
    1954:	30 97       	sbiw	r30, 0x00	; 0
    1956:	81 f0       	breq	.+32     	; 0x1978 <__floatunsisf+0xdc>
    1958:	0e 2e       	mov	r0, r30
    195a:	04 c0       	rjmp	.+8      	; 0x1964 <__floatunsisf+0xc8>
    195c:	ee 0c       	add	r14, r14
    195e:	ff 1c       	adc	r15, r15
    1960:	00 1f       	adc	r16, r16
    1962:	11 1f       	adc	r17, r17
    1964:	0a 94       	dec	r0
    1966:	d2 f7       	brpl	.-12     	; 0x195c <__floatunsisf+0xc0>
    1968:	ed 82       	std	Y+5, r14	; 0x05
    196a:	fe 82       	std	Y+6, r15	; 0x06
    196c:	0f 83       	std	Y+7, r16	; 0x07
    196e:	18 87       	std	Y+8, r17	; 0x08
    1970:	ce 1a       	sub	r12, r30
    1972:	df 0a       	sbc	r13, r31
    1974:	dc 82       	std	Y+4, r13	; 0x04
    1976:	cb 82       	std	Y+3, r12	; 0x03
    1978:	1a 82       	std	Y+2, r1	; 0x02
    197a:	ce 01       	movw	r24, r28
    197c:	01 96       	adiw	r24, 0x01	; 1
    197e:	52 d0       	rcall	.+164    	; 0x1a24 <__pack_f>
    1980:	28 96       	adiw	r28, 0x08	; 8
    1982:	ea e0       	ldi	r30, 0x0A	; 10
    1984:	62 c2       	rjmp	.+1220   	; 0x1e4a <__epilogue_restores__+0x10>

00001986 <__clzsi2>:
    1986:	ef 92       	push	r14
    1988:	ff 92       	push	r15
    198a:	0f 93       	push	r16
    198c:	1f 93       	push	r17
    198e:	7b 01       	movw	r14, r22
    1990:	8c 01       	movw	r16, r24
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	e8 16       	cp	r14, r24
    1996:	80 e0       	ldi	r24, 0x00	; 0
    1998:	f8 06       	cpc	r15, r24
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	08 07       	cpc	r16, r24
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	18 07       	cpc	r17, r24
    19a2:	88 f4       	brcc	.+34     	; 0x19c6 <__clzsi2+0x40>
    19a4:	8f ef       	ldi	r24, 0xFF	; 255
    19a6:	e8 16       	cp	r14, r24
    19a8:	f1 04       	cpc	r15, r1
    19aa:	01 05       	cpc	r16, r1
    19ac:	11 05       	cpc	r17, r1
    19ae:	31 f0       	breq	.+12     	; 0x19bc <__clzsi2+0x36>
    19b0:	28 f0       	brcs	.+10     	; 0x19bc <__clzsi2+0x36>
    19b2:	88 e0       	ldi	r24, 0x08	; 8
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	a0 e0       	ldi	r26, 0x00	; 0
    19b8:	b0 e0       	ldi	r27, 0x00	; 0
    19ba:	17 c0       	rjmp	.+46     	; 0x19ea <__clzsi2+0x64>
    19bc:	80 e0       	ldi	r24, 0x00	; 0
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	a0 e0       	ldi	r26, 0x00	; 0
    19c2:	b0 e0       	ldi	r27, 0x00	; 0
    19c4:	12 c0       	rjmp	.+36     	; 0x19ea <__clzsi2+0x64>
    19c6:	80 e0       	ldi	r24, 0x00	; 0
    19c8:	e8 16       	cp	r14, r24
    19ca:	80 e0       	ldi	r24, 0x00	; 0
    19cc:	f8 06       	cpc	r15, r24
    19ce:	80 e0       	ldi	r24, 0x00	; 0
    19d0:	08 07       	cpc	r16, r24
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	18 07       	cpc	r17, r24
    19d6:	28 f0       	brcs	.+10     	; 0x19e2 <__clzsi2+0x5c>
    19d8:	88 e1       	ldi	r24, 0x18	; 24
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	a0 e0       	ldi	r26, 0x00	; 0
    19de:	b0 e0       	ldi	r27, 0x00	; 0
    19e0:	04 c0       	rjmp	.+8      	; 0x19ea <__clzsi2+0x64>
    19e2:	80 e1       	ldi	r24, 0x10	; 16
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	a0 e0       	ldi	r26, 0x00	; 0
    19e8:	b0 e0       	ldi	r27, 0x00	; 0
    19ea:	20 e2       	ldi	r18, 0x20	; 32
    19ec:	30 e0       	ldi	r19, 0x00	; 0
    19ee:	40 e0       	ldi	r20, 0x00	; 0
    19f0:	50 e0       	ldi	r21, 0x00	; 0
    19f2:	28 1b       	sub	r18, r24
    19f4:	39 0b       	sbc	r19, r25
    19f6:	4a 0b       	sbc	r20, r26
    19f8:	5b 0b       	sbc	r21, r27
    19fa:	04 c0       	rjmp	.+8      	; 0x1a04 <__clzsi2+0x7e>
    19fc:	16 95       	lsr	r17
    19fe:	07 95       	ror	r16
    1a00:	f7 94       	ror	r15
    1a02:	e7 94       	ror	r14
    1a04:	8a 95       	dec	r24
    1a06:	d2 f7       	brpl	.-12     	; 0x19fc <__clzsi2+0x76>
    1a08:	f7 01       	movw	r30, r14
    1a0a:	ec 57       	subi	r30, 0x7C	; 124
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	80 81       	ld	r24, Z
    1a10:	28 1b       	sub	r18, r24
    1a12:	31 09       	sbc	r19, r1
    1a14:	41 09       	sbc	r20, r1
    1a16:	51 09       	sbc	r21, r1
    1a18:	c9 01       	movw	r24, r18
    1a1a:	1f 91       	pop	r17
    1a1c:	0f 91       	pop	r16
    1a1e:	ff 90       	pop	r15
    1a20:	ef 90       	pop	r14
    1a22:	08 95       	ret

00001a24 <__pack_f>:
    1a24:	df 92       	push	r13
    1a26:	ef 92       	push	r14
    1a28:	ff 92       	push	r15
    1a2a:	0f 93       	push	r16
    1a2c:	1f 93       	push	r17
    1a2e:	fc 01       	movw	r30, r24
    1a30:	e4 80       	ldd	r14, Z+4	; 0x04
    1a32:	f5 80       	ldd	r15, Z+5	; 0x05
    1a34:	06 81       	ldd	r16, Z+6	; 0x06
    1a36:	17 81       	ldd	r17, Z+7	; 0x07
    1a38:	d1 80       	ldd	r13, Z+1	; 0x01
    1a3a:	80 81       	ld	r24, Z
    1a3c:	82 30       	cpi	r24, 0x02	; 2
    1a3e:	48 f4       	brcc	.+18     	; 0x1a52 <__pack_f+0x2e>
    1a40:	80 e0       	ldi	r24, 0x00	; 0
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	a0 e1       	ldi	r26, 0x10	; 16
    1a46:	b0 e0       	ldi	r27, 0x00	; 0
    1a48:	e8 2a       	or	r14, r24
    1a4a:	f9 2a       	or	r15, r25
    1a4c:	0a 2b       	or	r16, r26
    1a4e:	1b 2b       	or	r17, r27
    1a50:	a5 c0       	rjmp	.+330    	; 0x1b9c <__pack_f+0x178>
    1a52:	84 30       	cpi	r24, 0x04	; 4
    1a54:	09 f4       	brne	.+2      	; 0x1a58 <__pack_f+0x34>
    1a56:	9f c0       	rjmp	.+318    	; 0x1b96 <__pack_f+0x172>
    1a58:	82 30       	cpi	r24, 0x02	; 2
    1a5a:	21 f4       	brne	.+8      	; 0x1a64 <__pack_f+0x40>
    1a5c:	ee 24       	eor	r14, r14
    1a5e:	ff 24       	eor	r15, r15
    1a60:	87 01       	movw	r16, r14
    1a62:	05 c0       	rjmp	.+10     	; 0x1a6e <__pack_f+0x4a>
    1a64:	e1 14       	cp	r14, r1
    1a66:	f1 04       	cpc	r15, r1
    1a68:	01 05       	cpc	r16, r1
    1a6a:	11 05       	cpc	r17, r1
    1a6c:	19 f4       	brne	.+6      	; 0x1a74 <__pack_f+0x50>
    1a6e:	e0 e0       	ldi	r30, 0x00	; 0
    1a70:	f0 e0       	ldi	r31, 0x00	; 0
    1a72:	96 c0       	rjmp	.+300    	; 0x1ba0 <__pack_f+0x17c>
    1a74:	62 81       	ldd	r22, Z+2	; 0x02
    1a76:	73 81       	ldd	r23, Z+3	; 0x03
    1a78:	9f ef       	ldi	r25, 0xFF	; 255
    1a7a:	62 38       	cpi	r22, 0x82	; 130
    1a7c:	79 07       	cpc	r23, r25
    1a7e:	0c f0       	brlt	.+2      	; 0x1a82 <__pack_f+0x5e>
    1a80:	5b c0       	rjmp	.+182    	; 0x1b38 <__pack_f+0x114>
    1a82:	22 e8       	ldi	r18, 0x82	; 130
    1a84:	3f ef       	ldi	r19, 0xFF	; 255
    1a86:	26 1b       	sub	r18, r22
    1a88:	37 0b       	sbc	r19, r23
    1a8a:	2a 31       	cpi	r18, 0x1A	; 26
    1a8c:	31 05       	cpc	r19, r1
    1a8e:	2c f0       	brlt	.+10     	; 0x1a9a <__pack_f+0x76>
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e0       	ldi	r20, 0x00	; 0
    1a96:	50 e0       	ldi	r21, 0x00	; 0
    1a98:	2a c0       	rjmp	.+84     	; 0x1aee <__pack_f+0xca>
    1a9a:	b8 01       	movw	r22, r16
    1a9c:	a7 01       	movw	r20, r14
    1a9e:	02 2e       	mov	r0, r18
    1aa0:	04 c0       	rjmp	.+8      	; 0x1aaa <__pack_f+0x86>
    1aa2:	76 95       	lsr	r23
    1aa4:	67 95       	ror	r22
    1aa6:	57 95       	ror	r21
    1aa8:	47 95       	ror	r20
    1aaa:	0a 94       	dec	r0
    1aac:	d2 f7       	brpl	.-12     	; 0x1aa2 <__pack_f+0x7e>
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	a0 e0       	ldi	r26, 0x00	; 0
    1ab4:	b0 e0       	ldi	r27, 0x00	; 0
    1ab6:	04 c0       	rjmp	.+8      	; 0x1ac0 <__pack_f+0x9c>
    1ab8:	88 0f       	add	r24, r24
    1aba:	99 1f       	adc	r25, r25
    1abc:	aa 1f       	adc	r26, r26
    1abe:	bb 1f       	adc	r27, r27
    1ac0:	2a 95       	dec	r18
    1ac2:	d2 f7       	brpl	.-12     	; 0x1ab8 <__pack_f+0x94>
    1ac4:	01 97       	sbiw	r24, 0x01	; 1
    1ac6:	a1 09       	sbc	r26, r1
    1ac8:	b1 09       	sbc	r27, r1
    1aca:	8e 21       	and	r24, r14
    1acc:	9f 21       	and	r25, r15
    1ace:	a0 23       	and	r26, r16
    1ad0:	b1 23       	and	r27, r17
    1ad2:	00 97       	sbiw	r24, 0x00	; 0
    1ad4:	a1 05       	cpc	r26, r1
    1ad6:	b1 05       	cpc	r27, r1
    1ad8:	21 f0       	breq	.+8      	; 0x1ae2 <__pack_f+0xbe>
    1ada:	81 e0       	ldi	r24, 0x01	; 1
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	a0 e0       	ldi	r26, 0x00	; 0
    1ae0:	b0 e0       	ldi	r27, 0x00	; 0
    1ae2:	9a 01       	movw	r18, r20
    1ae4:	ab 01       	movw	r20, r22
    1ae6:	28 2b       	or	r18, r24
    1ae8:	39 2b       	or	r19, r25
    1aea:	4a 2b       	or	r20, r26
    1aec:	5b 2b       	or	r21, r27
    1aee:	da 01       	movw	r26, r20
    1af0:	c9 01       	movw	r24, r18
    1af2:	8f 77       	andi	r24, 0x7F	; 127
    1af4:	90 70       	andi	r25, 0x00	; 0
    1af6:	a0 70       	andi	r26, 0x00	; 0
    1af8:	b0 70       	andi	r27, 0x00	; 0
    1afa:	80 34       	cpi	r24, 0x40	; 64
    1afc:	91 05       	cpc	r25, r1
    1afe:	a1 05       	cpc	r26, r1
    1b00:	b1 05       	cpc	r27, r1
    1b02:	39 f4       	brne	.+14     	; 0x1b12 <__pack_f+0xee>
    1b04:	27 ff       	sbrs	r18, 7
    1b06:	09 c0       	rjmp	.+18     	; 0x1b1a <__pack_f+0xf6>
    1b08:	20 5c       	subi	r18, 0xC0	; 192
    1b0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b0c:	4f 4f       	sbci	r20, 0xFF	; 255
    1b0e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b10:	04 c0       	rjmp	.+8      	; 0x1b1a <__pack_f+0xf6>
    1b12:	21 5c       	subi	r18, 0xC1	; 193
    1b14:	3f 4f       	sbci	r19, 0xFF	; 255
    1b16:	4f 4f       	sbci	r20, 0xFF	; 255
    1b18:	5f 4f       	sbci	r21, 0xFF	; 255
    1b1a:	e0 e0       	ldi	r30, 0x00	; 0
    1b1c:	f0 e0       	ldi	r31, 0x00	; 0
    1b1e:	20 30       	cpi	r18, 0x00	; 0
    1b20:	a0 e0       	ldi	r26, 0x00	; 0
    1b22:	3a 07       	cpc	r19, r26
    1b24:	a0 e0       	ldi	r26, 0x00	; 0
    1b26:	4a 07       	cpc	r20, r26
    1b28:	a0 e4       	ldi	r26, 0x40	; 64
    1b2a:	5a 07       	cpc	r21, r26
    1b2c:	10 f0       	brcs	.+4      	; 0x1b32 <__pack_f+0x10e>
    1b2e:	e1 e0       	ldi	r30, 0x01	; 1
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	79 01       	movw	r14, r18
    1b34:	8a 01       	movw	r16, r20
    1b36:	27 c0       	rjmp	.+78     	; 0x1b86 <__pack_f+0x162>
    1b38:	60 38       	cpi	r22, 0x80	; 128
    1b3a:	71 05       	cpc	r23, r1
    1b3c:	64 f5       	brge	.+88     	; 0x1b96 <__pack_f+0x172>
    1b3e:	fb 01       	movw	r30, r22
    1b40:	e1 58       	subi	r30, 0x81	; 129
    1b42:	ff 4f       	sbci	r31, 0xFF	; 255
    1b44:	d8 01       	movw	r26, r16
    1b46:	c7 01       	movw	r24, r14
    1b48:	8f 77       	andi	r24, 0x7F	; 127
    1b4a:	90 70       	andi	r25, 0x00	; 0
    1b4c:	a0 70       	andi	r26, 0x00	; 0
    1b4e:	b0 70       	andi	r27, 0x00	; 0
    1b50:	80 34       	cpi	r24, 0x40	; 64
    1b52:	91 05       	cpc	r25, r1
    1b54:	a1 05       	cpc	r26, r1
    1b56:	b1 05       	cpc	r27, r1
    1b58:	39 f4       	brne	.+14     	; 0x1b68 <__pack_f+0x144>
    1b5a:	e7 fe       	sbrs	r14, 7
    1b5c:	0d c0       	rjmp	.+26     	; 0x1b78 <__pack_f+0x154>
    1b5e:	80 e4       	ldi	r24, 0x40	; 64
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	a0 e0       	ldi	r26, 0x00	; 0
    1b64:	b0 e0       	ldi	r27, 0x00	; 0
    1b66:	04 c0       	rjmp	.+8      	; 0x1b70 <__pack_f+0x14c>
    1b68:	8f e3       	ldi	r24, 0x3F	; 63
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	a0 e0       	ldi	r26, 0x00	; 0
    1b6e:	b0 e0       	ldi	r27, 0x00	; 0
    1b70:	e8 0e       	add	r14, r24
    1b72:	f9 1e       	adc	r15, r25
    1b74:	0a 1f       	adc	r16, r26
    1b76:	1b 1f       	adc	r17, r27
    1b78:	17 ff       	sbrs	r17, 7
    1b7a:	05 c0       	rjmp	.+10     	; 0x1b86 <__pack_f+0x162>
    1b7c:	16 95       	lsr	r17
    1b7e:	07 95       	ror	r16
    1b80:	f7 94       	ror	r15
    1b82:	e7 94       	ror	r14
    1b84:	31 96       	adiw	r30, 0x01	; 1
    1b86:	87 e0       	ldi	r24, 0x07	; 7
    1b88:	16 95       	lsr	r17
    1b8a:	07 95       	ror	r16
    1b8c:	f7 94       	ror	r15
    1b8e:	e7 94       	ror	r14
    1b90:	8a 95       	dec	r24
    1b92:	d1 f7       	brne	.-12     	; 0x1b88 <__pack_f+0x164>
    1b94:	05 c0       	rjmp	.+10     	; 0x1ba0 <__pack_f+0x17c>
    1b96:	ee 24       	eor	r14, r14
    1b98:	ff 24       	eor	r15, r15
    1b9a:	87 01       	movw	r16, r14
    1b9c:	ef ef       	ldi	r30, 0xFF	; 255
    1b9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ba0:	6e 2f       	mov	r22, r30
    1ba2:	67 95       	ror	r22
    1ba4:	66 27       	eor	r22, r22
    1ba6:	67 95       	ror	r22
    1ba8:	90 2f       	mov	r25, r16
    1baa:	9f 77       	andi	r25, 0x7F	; 127
    1bac:	d7 94       	ror	r13
    1bae:	dd 24       	eor	r13, r13
    1bb0:	d7 94       	ror	r13
    1bb2:	8e 2f       	mov	r24, r30
    1bb4:	86 95       	lsr	r24
    1bb6:	49 2f       	mov	r20, r25
    1bb8:	46 2b       	or	r20, r22
    1bba:	58 2f       	mov	r21, r24
    1bbc:	5d 29       	or	r21, r13
    1bbe:	b7 01       	movw	r22, r14
    1bc0:	ca 01       	movw	r24, r20
    1bc2:	1f 91       	pop	r17
    1bc4:	0f 91       	pop	r16
    1bc6:	ff 90       	pop	r15
    1bc8:	ef 90       	pop	r14
    1bca:	df 90       	pop	r13
    1bcc:	08 95       	ret

00001bce <__unpack_f>:
    1bce:	fc 01       	movw	r30, r24
    1bd0:	db 01       	movw	r26, r22
    1bd2:	40 81       	ld	r20, Z
    1bd4:	51 81       	ldd	r21, Z+1	; 0x01
    1bd6:	22 81       	ldd	r18, Z+2	; 0x02
    1bd8:	62 2f       	mov	r22, r18
    1bda:	6f 77       	andi	r22, 0x7F	; 127
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	22 1f       	adc	r18, r18
    1be0:	22 27       	eor	r18, r18
    1be2:	22 1f       	adc	r18, r18
    1be4:	93 81       	ldd	r25, Z+3	; 0x03
    1be6:	89 2f       	mov	r24, r25
    1be8:	88 0f       	add	r24, r24
    1bea:	82 2b       	or	r24, r18
    1bec:	28 2f       	mov	r18, r24
    1bee:	30 e0       	ldi	r19, 0x00	; 0
    1bf0:	99 1f       	adc	r25, r25
    1bf2:	99 27       	eor	r25, r25
    1bf4:	99 1f       	adc	r25, r25
    1bf6:	11 96       	adiw	r26, 0x01	; 1
    1bf8:	9c 93       	st	X, r25
    1bfa:	11 97       	sbiw	r26, 0x01	; 1
    1bfc:	21 15       	cp	r18, r1
    1bfe:	31 05       	cpc	r19, r1
    1c00:	a9 f5       	brne	.+106    	; 0x1c6c <__unpack_f+0x9e>
    1c02:	41 15       	cp	r20, r1
    1c04:	51 05       	cpc	r21, r1
    1c06:	61 05       	cpc	r22, r1
    1c08:	71 05       	cpc	r23, r1
    1c0a:	11 f4       	brne	.+4      	; 0x1c10 <__unpack_f+0x42>
    1c0c:	82 e0       	ldi	r24, 0x02	; 2
    1c0e:	37 c0       	rjmp	.+110    	; 0x1c7e <__unpack_f+0xb0>
    1c10:	82 e8       	ldi	r24, 0x82	; 130
    1c12:	9f ef       	ldi	r25, 0xFF	; 255
    1c14:	13 96       	adiw	r26, 0x03	; 3
    1c16:	9c 93       	st	X, r25
    1c18:	8e 93       	st	-X, r24
    1c1a:	12 97       	sbiw	r26, 0x02	; 2
    1c1c:	9a 01       	movw	r18, r20
    1c1e:	ab 01       	movw	r20, r22
    1c20:	67 e0       	ldi	r22, 0x07	; 7
    1c22:	22 0f       	add	r18, r18
    1c24:	33 1f       	adc	r19, r19
    1c26:	44 1f       	adc	r20, r20
    1c28:	55 1f       	adc	r21, r21
    1c2a:	6a 95       	dec	r22
    1c2c:	d1 f7       	brne	.-12     	; 0x1c22 <__unpack_f+0x54>
    1c2e:	83 e0       	ldi	r24, 0x03	; 3
    1c30:	8c 93       	st	X, r24
    1c32:	0d c0       	rjmp	.+26     	; 0x1c4e <__unpack_f+0x80>
    1c34:	22 0f       	add	r18, r18
    1c36:	33 1f       	adc	r19, r19
    1c38:	44 1f       	adc	r20, r20
    1c3a:	55 1f       	adc	r21, r21
    1c3c:	12 96       	adiw	r26, 0x02	; 2
    1c3e:	8d 91       	ld	r24, X+
    1c40:	9c 91       	ld	r25, X
    1c42:	13 97       	sbiw	r26, 0x03	; 3
    1c44:	01 97       	sbiw	r24, 0x01	; 1
    1c46:	13 96       	adiw	r26, 0x03	; 3
    1c48:	9c 93       	st	X, r25
    1c4a:	8e 93       	st	-X, r24
    1c4c:	12 97       	sbiw	r26, 0x02	; 2
    1c4e:	20 30       	cpi	r18, 0x00	; 0
    1c50:	80 e0       	ldi	r24, 0x00	; 0
    1c52:	38 07       	cpc	r19, r24
    1c54:	80 e0       	ldi	r24, 0x00	; 0
    1c56:	48 07       	cpc	r20, r24
    1c58:	80 e4       	ldi	r24, 0x40	; 64
    1c5a:	58 07       	cpc	r21, r24
    1c5c:	58 f3       	brcs	.-42     	; 0x1c34 <__unpack_f+0x66>
    1c5e:	14 96       	adiw	r26, 0x04	; 4
    1c60:	2d 93       	st	X+, r18
    1c62:	3d 93       	st	X+, r19
    1c64:	4d 93       	st	X+, r20
    1c66:	5c 93       	st	X, r21
    1c68:	17 97       	sbiw	r26, 0x07	; 7
    1c6a:	08 95       	ret
    1c6c:	2f 3f       	cpi	r18, 0xFF	; 255
    1c6e:	31 05       	cpc	r19, r1
    1c70:	79 f4       	brne	.+30     	; 0x1c90 <__unpack_f+0xc2>
    1c72:	41 15       	cp	r20, r1
    1c74:	51 05       	cpc	r21, r1
    1c76:	61 05       	cpc	r22, r1
    1c78:	71 05       	cpc	r23, r1
    1c7a:	19 f4       	brne	.+6      	; 0x1c82 <__unpack_f+0xb4>
    1c7c:	84 e0       	ldi	r24, 0x04	; 4
    1c7e:	8c 93       	st	X, r24
    1c80:	08 95       	ret
    1c82:	64 ff       	sbrs	r22, 4
    1c84:	03 c0       	rjmp	.+6      	; 0x1c8c <__unpack_f+0xbe>
    1c86:	81 e0       	ldi	r24, 0x01	; 1
    1c88:	8c 93       	st	X, r24
    1c8a:	12 c0       	rjmp	.+36     	; 0x1cb0 <__unpack_f+0xe2>
    1c8c:	1c 92       	st	X, r1
    1c8e:	10 c0       	rjmp	.+32     	; 0x1cb0 <__unpack_f+0xe2>
    1c90:	2f 57       	subi	r18, 0x7F	; 127
    1c92:	30 40       	sbci	r19, 0x00	; 0
    1c94:	13 96       	adiw	r26, 0x03	; 3
    1c96:	3c 93       	st	X, r19
    1c98:	2e 93       	st	-X, r18
    1c9a:	12 97       	sbiw	r26, 0x02	; 2
    1c9c:	83 e0       	ldi	r24, 0x03	; 3
    1c9e:	8c 93       	st	X, r24
    1ca0:	87 e0       	ldi	r24, 0x07	; 7
    1ca2:	44 0f       	add	r20, r20
    1ca4:	55 1f       	adc	r21, r21
    1ca6:	66 1f       	adc	r22, r22
    1ca8:	77 1f       	adc	r23, r23
    1caa:	8a 95       	dec	r24
    1cac:	d1 f7       	brne	.-12     	; 0x1ca2 <__unpack_f+0xd4>
    1cae:	70 64       	ori	r23, 0x40	; 64
    1cb0:	14 96       	adiw	r26, 0x04	; 4
    1cb2:	4d 93       	st	X+, r20
    1cb4:	5d 93       	st	X+, r21
    1cb6:	6d 93       	st	X+, r22
    1cb8:	7c 93       	st	X, r23
    1cba:	17 97       	sbiw	r26, 0x07	; 7
    1cbc:	08 95       	ret

00001cbe <__fpcmp_parts_f>:
    1cbe:	1f 93       	push	r17
    1cc0:	dc 01       	movw	r26, r24
    1cc2:	fb 01       	movw	r30, r22
    1cc4:	9c 91       	ld	r25, X
    1cc6:	92 30       	cpi	r25, 0x02	; 2
    1cc8:	08 f4       	brcc	.+2      	; 0x1ccc <__fpcmp_parts_f+0xe>
    1cca:	47 c0       	rjmp	.+142    	; 0x1d5a <__fpcmp_parts_f+0x9c>
    1ccc:	80 81       	ld	r24, Z
    1cce:	82 30       	cpi	r24, 0x02	; 2
    1cd0:	08 f4       	brcc	.+2      	; 0x1cd4 <__fpcmp_parts_f+0x16>
    1cd2:	43 c0       	rjmp	.+134    	; 0x1d5a <__fpcmp_parts_f+0x9c>
    1cd4:	94 30       	cpi	r25, 0x04	; 4
    1cd6:	51 f4       	brne	.+20     	; 0x1cec <__fpcmp_parts_f+0x2e>
    1cd8:	11 96       	adiw	r26, 0x01	; 1
    1cda:	1c 91       	ld	r17, X
    1cdc:	84 30       	cpi	r24, 0x04	; 4
    1cde:	99 f5       	brne	.+102    	; 0x1d46 <__fpcmp_parts_f+0x88>
    1ce0:	81 81       	ldd	r24, Z+1	; 0x01
    1ce2:	68 2f       	mov	r22, r24
    1ce4:	70 e0       	ldi	r23, 0x00	; 0
    1ce6:	61 1b       	sub	r22, r17
    1ce8:	71 09       	sbc	r23, r1
    1cea:	3f c0       	rjmp	.+126    	; 0x1d6a <__fpcmp_parts_f+0xac>
    1cec:	84 30       	cpi	r24, 0x04	; 4
    1cee:	21 f0       	breq	.+8      	; 0x1cf8 <__fpcmp_parts_f+0x3a>
    1cf0:	92 30       	cpi	r25, 0x02	; 2
    1cf2:	31 f4       	brne	.+12     	; 0x1d00 <__fpcmp_parts_f+0x42>
    1cf4:	82 30       	cpi	r24, 0x02	; 2
    1cf6:	b9 f1       	breq	.+110    	; 0x1d66 <__fpcmp_parts_f+0xa8>
    1cf8:	81 81       	ldd	r24, Z+1	; 0x01
    1cfa:	88 23       	and	r24, r24
    1cfc:	89 f1       	breq	.+98     	; 0x1d60 <__fpcmp_parts_f+0xa2>
    1cfe:	2d c0       	rjmp	.+90     	; 0x1d5a <__fpcmp_parts_f+0x9c>
    1d00:	11 96       	adiw	r26, 0x01	; 1
    1d02:	1c 91       	ld	r17, X
    1d04:	11 97       	sbiw	r26, 0x01	; 1
    1d06:	82 30       	cpi	r24, 0x02	; 2
    1d08:	f1 f0       	breq	.+60     	; 0x1d46 <__fpcmp_parts_f+0x88>
    1d0a:	81 81       	ldd	r24, Z+1	; 0x01
    1d0c:	18 17       	cp	r17, r24
    1d0e:	d9 f4       	brne	.+54     	; 0x1d46 <__fpcmp_parts_f+0x88>
    1d10:	12 96       	adiw	r26, 0x02	; 2
    1d12:	2d 91       	ld	r18, X+
    1d14:	3c 91       	ld	r19, X
    1d16:	13 97       	sbiw	r26, 0x03	; 3
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	82 17       	cp	r24, r18
    1d1e:	93 07       	cpc	r25, r19
    1d20:	94 f0       	brlt	.+36     	; 0x1d46 <__fpcmp_parts_f+0x88>
    1d22:	28 17       	cp	r18, r24
    1d24:	39 07       	cpc	r19, r25
    1d26:	bc f0       	brlt	.+46     	; 0x1d56 <__fpcmp_parts_f+0x98>
    1d28:	14 96       	adiw	r26, 0x04	; 4
    1d2a:	8d 91       	ld	r24, X+
    1d2c:	9d 91       	ld	r25, X+
    1d2e:	0d 90       	ld	r0, X+
    1d30:	bc 91       	ld	r27, X
    1d32:	a0 2d       	mov	r26, r0
    1d34:	24 81       	ldd	r18, Z+4	; 0x04
    1d36:	35 81       	ldd	r19, Z+5	; 0x05
    1d38:	46 81       	ldd	r20, Z+6	; 0x06
    1d3a:	57 81       	ldd	r21, Z+7	; 0x07
    1d3c:	28 17       	cp	r18, r24
    1d3e:	39 07       	cpc	r19, r25
    1d40:	4a 07       	cpc	r20, r26
    1d42:	5b 07       	cpc	r21, r27
    1d44:	18 f4       	brcc	.+6      	; 0x1d4c <__fpcmp_parts_f+0x8e>
    1d46:	11 23       	and	r17, r17
    1d48:	41 f0       	breq	.+16     	; 0x1d5a <__fpcmp_parts_f+0x9c>
    1d4a:	0a c0       	rjmp	.+20     	; 0x1d60 <__fpcmp_parts_f+0xa2>
    1d4c:	82 17       	cp	r24, r18
    1d4e:	93 07       	cpc	r25, r19
    1d50:	a4 07       	cpc	r26, r20
    1d52:	b5 07       	cpc	r27, r21
    1d54:	40 f4       	brcc	.+16     	; 0x1d66 <__fpcmp_parts_f+0xa8>
    1d56:	11 23       	and	r17, r17
    1d58:	19 f0       	breq	.+6      	; 0x1d60 <__fpcmp_parts_f+0xa2>
    1d5a:	61 e0       	ldi	r22, 0x01	; 1
    1d5c:	70 e0       	ldi	r23, 0x00	; 0
    1d5e:	05 c0       	rjmp	.+10     	; 0x1d6a <__fpcmp_parts_f+0xac>
    1d60:	6f ef       	ldi	r22, 0xFF	; 255
    1d62:	7f ef       	ldi	r23, 0xFF	; 255
    1d64:	02 c0       	rjmp	.+4      	; 0x1d6a <__fpcmp_parts_f+0xac>
    1d66:	60 e0       	ldi	r22, 0x00	; 0
    1d68:	70 e0       	ldi	r23, 0x00	; 0
    1d6a:	cb 01       	movw	r24, r22
    1d6c:	1f 91       	pop	r17
    1d6e:	08 95       	ret

00001d70 <__udivmodhi4>:
    1d70:	aa 1b       	sub	r26, r26
    1d72:	bb 1b       	sub	r27, r27
    1d74:	51 e1       	ldi	r21, 0x11	; 17
    1d76:	07 c0       	rjmp	.+14     	; 0x1d86 <__udivmodhi4_ep>

00001d78 <__udivmodhi4_loop>:
    1d78:	aa 1f       	adc	r26, r26
    1d7a:	bb 1f       	adc	r27, r27
    1d7c:	a6 17       	cp	r26, r22
    1d7e:	b7 07       	cpc	r27, r23
    1d80:	10 f0       	brcs	.+4      	; 0x1d86 <__udivmodhi4_ep>
    1d82:	a6 1b       	sub	r26, r22
    1d84:	b7 0b       	sbc	r27, r23

00001d86 <__udivmodhi4_ep>:
    1d86:	88 1f       	adc	r24, r24
    1d88:	99 1f       	adc	r25, r25
    1d8a:	5a 95       	dec	r21
    1d8c:	a9 f7       	brne	.-22     	; 0x1d78 <__udivmodhi4_loop>
    1d8e:	80 95       	com	r24
    1d90:	90 95       	com	r25
    1d92:	bc 01       	movw	r22, r24
    1d94:	cd 01       	movw	r24, r26
    1d96:	08 95       	ret

00001d98 <__divmodhi4>:
    1d98:	97 fb       	bst	r25, 7
    1d9a:	09 2e       	mov	r0, r25
    1d9c:	07 26       	eor	r0, r23
    1d9e:	0a d0       	rcall	.+20     	; 0x1db4 <__divmodhi4_neg1>
    1da0:	77 fd       	sbrc	r23, 7
    1da2:	04 d0       	rcall	.+8      	; 0x1dac <__divmodhi4_neg2>
    1da4:	e5 df       	rcall	.-54     	; 0x1d70 <__udivmodhi4>
    1da6:	06 d0       	rcall	.+12     	; 0x1db4 <__divmodhi4_neg1>
    1da8:	00 20       	and	r0, r0
    1daa:	1a f4       	brpl	.+6      	; 0x1db2 <__divmodhi4_exit>

00001dac <__divmodhi4_neg2>:
    1dac:	70 95       	com	r23
    1dae:	61 95       	neg	r22
    1db0:	7f 4f       	sbci	r23, 0xFF	; 255

00001db2 <__divmodhi4_exit>:
    1db2:	08 95       	ret

00001db4 <__divmodhi4_neg1>:
    1db4:	f6 f7       	brtc	.-4      	; 0x1db2 <__divmodhi4_exit>
    1db6:	90 95       	com	r25
    1db8:	81 95       	neg	r24
    1dba:	9f 4f       	sbci	r25, 0xFF	; 255
    1dbc:	08 95       	ret

00001dbe <__udivmodsi4>:
    1dbe:	a1 e2       	ldi	r26, 0x21	; 33
    1dc0:	1a 2e       	mov	r1, r26
    1dc2:	aa 1b       	sub	r26, r26
    1dc4:	bb 1b       	sub	r27, r27
    1dc6:	fd 01       	movw	r30, r26
    1dc8:	0d c0       	rjmp	.+26     	; 0x1de4 <__udivmodsi4_ep>

00001dca <__udivmodsi4_loop>:
    1dca:	aa 1f       	adc	r26, r26
    1dcc:	bb 1f       	adc	r27, r27
    1dce:	ee 1f       	adc	r30, r30
    1dd0:	ff 1f       	adc	r31, r31
    1dd2:	a2 17       	cp	r26, r18
    1dd4:	b3 07       	cpc	r27, r19
    1dd6:	e4 07       	cpc	r30, r20
    1dd8:	f5 07       	cpc	r31, r21
    1dda:	20 f0       	brcs	.+8      	; 0x1de4 <__udivmodsi4_ep>
    1ddc:	a2 1b       	sub	r26, r18
    1dde:	b3 0b       	sbc	r27, r19
    1de0:	e4 0b       	sbc	r30, r20
    1de2:	f5 0b       	sbc	r31, r21

00001de4 <__udivmodsi4_ep>:
    1de4:	66 1f       	adc	r22, r22
    1de6:	77 1f       	adc	r23, r23
    1de8:	88 1f       	adc	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	1a 94       	dec	r1
    1dee:	69 f7       	brne	.-38     	; 0x1dca <__udivmodsi4_loop>
    1df0:	60 95       	com	r22
    1df2:	70 95       	com	r23
    1df4:	80 95       	com	r24
    1df6:	90 95       	com	r25
    1df8:	9b 01       	movw	r18, r22
    1dfa:	ac 01       	movw	r20, r24
    1dfc:	bd 01       	movw	r22, r26
    1dfe:	cf 01       	movw	r24, r30
    1e00:	08 95       	ret

00001e02 <__prologue_saves__>:
    1e02:	2f 92       	push	r2
    1e04:	3f 92       	push	r3
    1e06:	4f 92       	push	r4
    1e08:	5f 92       	push	r5
    1e0a:	6f 92       	push	r6
    1e0c:	7f 92       	push	r7
    1e0e:	8f 92       	push	r8
    1e10:	9f 92       	push	r9
    1e12:	af 92       	push	r10
    1e14:	bf 92       	push	r11
    1e16:	cf 92       	push	r12
    1e18:	df 92       	push	r13
    1e1a:	ef 92       	push	r14
    1e1c:	ff 92       	push	r15
    1e1e:	0f 93       	push	r16
    1e20:	1f 93       	push	r17
    1e22:	cf 93       	push	r28
    1e24:	df 93       	push	r29
    1e26:	cd b7       	in	r28, 0x3d	; 61
    1e28:	de b7       	in	r29, 0x3e	; 62
    1e2a:	ca 1b       	sub	r28, r26
    1e2c:	db 0b       	sbc	r29, r27
    1e2e:	0f b6       	in	r0, 0x3f	; 63
    1e30:	f8 94       	cli
    1e32:	de bf       	out	0x3e, r29	; 62
    1e34:	0f be       	out	0x3f, r0	; 63
    1e36:	cd bf       	out	0x3d, r28	; 61
    1e38:	09 94       	ijmp

00001e3a <__epilogue_restores__>:
    1e3a:	2a 88       	ldd	r2, Y+18	; 0x12
    1e3c:	39 88       	ldd	r3, Y+17	; 0x11
    1e3e:	48 88       	ldd	r4, Y+16	; 0x10
    1e40:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e42:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e44:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e46:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e48:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e4a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e4c:	b9 84       	ldd	r11, Y+9	; 0x09
    1e4e:	c8 84       	ldd	r12, Y+8	; 0x08
    1e50:	df 80       	ldd	r13, Y+7	; 0x07
    1e52:	ee 80       	ldd	r14, Y+6	; 0x06
    1e54:	fd 80       	ldd	r15, Y+5	; 0x05
    1e56:	0c 81       	ldd	r16, Y+4	; 0x04
    1e58:	1b 81       	ldd	r17, Y+3	; 0x03
    1e5a:	aa 81       	ldd	r26, Y+2	; 0x02
    1e5c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e5e:	ce 0f       	add	r28, r30
    1e60:	d1 1d       	adc	r29, r1
    1e62:	0f b6       	in	r0, 0x3f	; 63
    1e64:	f8 94       	cli
    1e66:	de bf       	out	0x3e, r29	; 62
    1e68:	0f be       	out	0x3f, r0	; 63
    1e6a:	cd bf       	out	0x3d, r28	; 61
    1e6c:	ed 01       	movw	r28, r26
    1e6e:	08 95       	ret

00001e70 <memset>:
    1e70:	dc 01       	movw	r26, r24
    1e72:	01 c0       	rjmp	.+2      	; 0x1e76 <memset+0x6>
    1e74:	6d 93       	st	X+, r22
    1e76:	41 50       	subi	r20, 0x01	; 1
    1e78:	50 40       	sbci	r21, 0x00	; 0
    1e7a:	e0 f7       	brcc	.-8      	; 0x1e74 <memset+0x4>
    1e7c:	08 95       	ret

00001e7e <__eerd_block_m8>:
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22

00001e82 <__eerd_blraw_m8>:
    1e82:	fc 01       	movw	r30, r24
    1e84:	e1 99       	sbic	0x1c, 1	; 28
    1e86:	fe cf       	rjmp	.-4      	; 0x1e84 <__eerd_blraw_m8+0x2>
    1e88:	06 c0       	rjmp	.+12     	; 0x1e96 <__eerd_blraw_m8+0x14>
    1e8a:	ff bb       	out	0x1f, r31	; 31
    1e8c:	ee bb       	out	0x1e, r30	; 30
    1e8e:	e0 9a       	sbi	0x1c, 0	; 28
    1e90:	31 96       	adiw	r30, 0x01	; 1
    1e92:	0d b2       	in	r0, 0x1d	; 29
    1e94:	0d 92       	st	X+, r0
    1e96:	41 50       	subi	r20, 0x01	; 1
    1e98:	50 40       	sbci	r21, 0x00	; 0
    1e9a:	b8 f7       	brcc	.-18     	; 0x1e8a <__eerd_blraw_m8+0x8>
    1e9c:	08 95       	ret

00001e9e <__eeupd_block_m8>:
    1e9e:	dc 01       	movw	r26, r24
    1ea0:	a4 0f       	add	r26, r20
    1ea2:	b5 1f       	adc	r27, r21
    1ea4:	41 50       	subi	r20, 0x01	; 1
    1ea6:	50 40       	sbci	r21, 0x00	; 0
    1ea8:	40 f0       	brcs	.+16     	; 0x1eba <__eeupd_block_m8+0x1c>
    1eaa:	cb 01       	movw	r24, r22
    1eac:	84 0f       	add	r24, r20
    1eae:	95 1f       	adc	r25, r21
    1eb0:	2e 91       	ld	r18, -X
    1eb2:	05 d0       	rcall	.+10     	; 0x1ebe <__eeupd_r18_m8>
    1eb4:	41 50       	subi	r20, 0x01	; 1
    1eb6:	50 40       	sbci	r21, 0x00	; 0
    1eb8:	d8 f7       	brcc	.-10     	; 0x1eb0 <__eeupd_block_m8+0x12>
    1eba:	08 95       	ret

00001ebc <__eeupd_byte_m8>:
    1ebc:	26 2f       	mov	r18, r22

00001ebe <__eeupd_r18_m8>:
    1ebe:	e1 99       	sbic	0x1c, 1	; 28
    1ec0:	fe cf       	rjmp	.-4      	; 0x1ebe <__eeupd_r18_m8>
    1ec2:	9f bb       	out	0x1f, r25	; 31
    1ec4:	8e bb       	out	0x1e, r24	; 30
    1ec6:	e0 9a       	sbi	0x1c, 0	; 28
    1ec8:	01 97       	sbiw	r24, 0x01	; 1
    1eca:	0d b2       	in	r0, 0x1d	; 29
    1ecc:	02 16       	cp	r0, r18
    1ece:	31 f0       	breq	.+12     	; 0x1edc <__eeupd_r18_m8+0x1e>
    1ed0:	2d bb       	out	0x1d, r18	; 29
    1ed2:	0f b6       	in	r0, 0x3f	; 63
    1ed4:	f8 94       	cli
    1ed6:	e2 9a       	sbi	0x1c, 2	; 28
    1ed8:	e1 9a       	sbi	0x1c, 1	; 28
    1eda:	0f be       	out	0x3f, r0	; 63
    1edc:	08 95       	ret

00001ede <_exit>:
    1ede:	f8 94       	cli

00001ee0 <__stop_program>:
    1ee0:	ff cf       	rjmp	.-2      	; 0x1ee0 <__stop_program>
